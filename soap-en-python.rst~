Clientes SOAP en Python
#######################
:date: 2013-08-18 08:30
:tags: python, web services, soap

Como todos saben, y algunos me chalequean por eso, en la
primera mitad de 2013 cambié de trabajo dos veces, estaba
algo aburrido en Metamax y decidí aceptar una oportunidad
en 4geeks, junto con una serie de proyectos para una empresa
en el extranjero que pintaban bastante bien.

La historia en 4geeks es muy graciosa, un tal Saúl Lustgarten
llevaba tiempo escribiendo en todas las listas de correo donde
estoy pidiendo un desarrollador Python, incluso me contactó personalmente
varias veces vía email y a través de *LinkedIn* para desarrollar su 
*startup*, una central telefónica en la nube llamada *RingTu*, el tema
era que no me resultaba atractivo, así que en ese momento acepté la oferta
de 4geeks.

El primer día en 4geeks, me informan acerca del proyecto que iba a desarrollar,
"vas a hacer uno de los startups de Wayra, es una central telefónica en la nube"
y yo "¿RingTu?", "sí ese mismo", vaya, al parecer hasta se las arregló para que
desde 4geeks desarrollara su startup, jajajajajajaja.

Básicamente lo que debía hacer era unos wrappers para unos servicios web
que ellos consumen, ese era sólo el inicio del proyecto, pensé que sería
divertido, ya había hecho wrappers para otros servicios web, y en Python
es muy fácil hacer clientes para servicios web, sin importar si hablan JSON o
XML o algún protocolo propio, la cosa se puso esotérica cuando vi que todos
los URL de los servicios con los que iba a trabajar terminaban en .wsdl.

¿SOAP?, con el boom de REST ¿quién usa SOAP?, en fin, ¿qué tan difícil puede ser?, 
en Java es realmente fácil escribir clientes y servicios web usando SOAP y en
Python no debe ser la excepción, hay librerías para todo, dejé de hacerme
preguntas acerca del sentido de la vida, el universo y todo lo demás y puse manos
a la obra a investigar alguna buena librería que me facilitara el trabajo.

Luego de unos minutos leyendo en *StackOverflow*, vi que al parecer suds era
la mejor opción, no se veía tan abandonada y, comparada a las demás opciones,
tenía una documentación decente.

Lo primero es, obviamente, instalarla:

.. code-block:: sh

    pip install suds

Recuerden que siempre es buena práctica trabajar con virtualenvs y, además, es muy
buena opción el hecho de utilizar virtualenvwrapper para gestionarlos.

Una vez que tenemos suds ya instalado, es sólo cuestión de empezar a utilizarla,
para hacer clientes, que es de lo que hablaré en este post, sólo nos interesa la
clase definida en *suds.client.Client*.

Si repasamos un poco de teoría acerca de los servicios web sobre el protocolo SOAP,
veremos que se convirtió en la capa subyacente para servicios complejos basados en
WSDL, que es una manera de especificar los objetos y métodos que expone un servicio web
y a los que el cliente puede tener acceso. WSDL es un acrónimo que significa *Web Service
Description Language*.

Toda la definición de servicios web SOAP se hace en un documento WSDL, que no es mas que un
XML donde se define todo lo que este servicio expone para ser consumido por sus clientes.
De igual manera, el pase de mensajes (soap messages) entre el cliente y el servidor, se hace
en formato XML.

A continuación un ejemplo de documento WSDL:

.. code-block:: wsdl

