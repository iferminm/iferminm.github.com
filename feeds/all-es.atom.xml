<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>@#$%_</title><link href="http://iferminmontilla.com/" rel="alternate"></link><link href="http://iferminmontilla.com/feeds/all-es.atom.xml" rel="self"></link><id>http://iferminmontilla.com/</id><updated>2015-05-26T12:34:00-05:30</updated><entry><title>Migré a ZSH</title><link href="http://iferminmontilla.com/migre-a-zsh.html" rel="alternate"></link><updated>2015-05-26T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2015-05-26:migre-a-zsh.html</id><summary type="html">&lt;p&gt;Es bien sabido por todos que en Linux y en el Open Source en general, uno es libre de elegir
todas y cada una de las partes del sistema que va a configurar para su computadora personal
o de trabajo, la línea de comandos no es excepción.&lt;/p&gt;
&lt;p&gt;Por defecto, viene configurado &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Bash"&gt;BASH&lt;/a&gt; en todos los sistemas linux, sin embargo, es posible cambiarlo
sin ningún tipo de problemas, en mi caso, luego de investigar un poquito, elegí una combinación que
me ha resultado bastante bien durante las últimas dos semanas: &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Zsh"&gt;ZSH&lt;/a&gt; + un plugin llamado &lt;a class="reference external" href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh my zsh&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Acá las razones por las cuales decidí migrar y por qué me ha parecido tan genial:&lt;/p&gt;
&lt;div class="section" id="yolo"&gt;
&lt;h2&gt;YOLO&lt;/h2&gt;
&lt;p&gt;Siempre digo que quiero probar herramientas nuevas, pero nunca pongo manos a la obra, en los últimos
meses me he propuesto a organizarme y crear hábitos, utilizando distintos hacks, que me permitan
llevar a cabo todo lo que me pasa por la mente sin descuidar cosas importantes como la familia
y el trabajo. Así que, quise probar &lt;em&gt;ZSH&lt;/em&gt; a ver qué tal, ¿qué mejor momento que ahora?&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="no-es-un-cambio-muy-traumatico"&gt;
&lt;h2&gt;No es un cambio muy traumático&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;BASH&lt;/em&gt; nace en 1989, &lt;em&gt;ZSH&lt;/em&gt; nace en 1990, mantiene compatibilidad con todos los comandos de &lt;em&gt;BASH&lt;/em&gt;
y agrega nuevas funcionalidades que vamos a ver en las razones siguientes :-).&lt;/p&gt;
&lt;div class="section" id="el-autocompletado-de-zsh"&gt;
&lt;h3&gt;El autocompletado de ZSH&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; tiene una capacidad increíble de autocompletar, no sólo te muestra las posibles opciones,
cosa que también hace &lt;em&gt;BASH&lt;/em&gt;, sino que te permite seleccionarla de manera interactiva, cosa
que &lt;em&gt;BASH&lt;/em&gt; no hace de manera natural.&lt;/p&gt;
&lt;img alt="Autocompletado interactivo" src="https://dl.dropboxusercontent.com/u/3437671/blog/zsh/foto1.png" /&gt;
&lt;p&gt;Además, no sólo completa rutas y comandos básicos del sistema operativo, con &lt;em&gt;Oh My ZSH&lt;/em&gt; también tiene autocompletado para git,
cosa que me resulta muy útil porque es una herramienta que uso todos los días en la oficina y para proyectos
personales, este autocompletado incluye una pequeña descripción de lo que hace cada comando de git.&lt;/p&gt;
&lt;img alt="git &amp;lt;TAB&amp;gt; y esto aparece" src="https://dl.dropboxusercontent.com/u/3437671/blog/zsh/foto2.png" /&gt;
&lt;/div&gt;
&lt;div class="section" id="completacion-de-rutas"&gt;
&lt;h3&gt;Completación de rutas&lt;/h3&gt;
&lt;p&gt;No, no es lo mismo que la anterior, este es algo mucho más potente que no vi nunca en &lt;em&gt;BASH&lt;/em&gt; supongamos que soy
perezoso para escribir, y quiero ir a &lt;em&gt;/home/israelord/Work&lt;/em&gt;, que es la ruta donde tengo todos mis proyectos,
tanto de la oficina como freelance. Se que ese es el único patrón que coincide, simplemente escribo &lt;em&gt;/h/i/W&lt;/em&gt; y al
presionar tab, me autocompleta la ruta.&lt;/p&gt;
&lt;p&gt;En caso que haya ambigüedad, como por ejemplo, si quiero ir a &lt;em&gt;/usr/local/bin&lt;/em&gt;, al escribir &lt;em&gt;/u/l/b&lt;/em&gt;, hay dos opciones
para la &lt;em&gt;l&lt;/em&gt;, bajo el directorio &lt;em&gt;/user&lt;/em&gt;: &lt;em&gt;lib&lt;/em&gt; o &lt;em&gt;local&lt;/em&gt;. En este caso, me permitirá seleccionar la opción correcta
de manera interactiva, tal como en el ejemplo anterior, antes de terminar el autocompletado. Puedo resolver esto
simplemente escribiendo &lt;em&gt;/u/lo/b&lt;/em&gt; y me generará la ruta correcta de una vez, simplemente debo completar más
la parte de la ruta que genera el conflicto para que sea única, aunque la selección interactiva no me disgusta para
nada.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cambios-de-directorio"&gt;
&lt;h3&gt;Cambios de directorio&lt;/h3&gt;
&lt;p&gt;Sí, ya se, para eso está &lt;em&gt;cd&lt;/em&gt;, pero este es un caso de uso de cd que no vi en &lt;em&gt;BASH&lt;/em&gt;, supongamos que estoy en la ruta
del ejemplo anterior &lt;em&gt;/usr/local/bin&lt;/em&gt;, pero en realidad quería ir a &lt;em&gt;/usr/local/sbin&lt;/em&gt;. En vez de hacer como en &lt;em&gt;BASH&lt;/em&gt;
&lt;em&gt;cd ../sbin&lt;/em&gt;, puedo hacer &lt;em&gt;cd bin sbin&lt;/em&gt; y me lleva allí. Funciona igual con sub rutas, puedo hacer &lt;em&gt;cd local/sbin games&lt;/em&gt;
y me lleva a &lt;em&gt;/usr/games&lt;/em&gt;, por ejemplo.&lt;/p&gt;
&lt;p&gt;Esto es especialmente útil cuando tengo proyectos con la misma estructura, por ejemplo, estoy en
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;, simplemente con hacer &lt;em&gt;cd proyecto1 proyecto2&lt;/em&gt;, me lleva a
&lt;em&gt;/home/israelord/proyecto1/auth/views/&lt;/em&gt;. No más cd ../../../../&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="autocorrector"&gt;
&lt;h3&gt;Autocorrector&lt;/h3&gt;
&lt;p&gt;No mucho que decir, si me equivoco y escribo gut, me corrige y escribe git, por ejemplo, si hay más de un posible patrón,
me muestra la selección interactiva que vimos antes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="renombrado-de-archivos-en-batch"&gt;
&lt;h3&gt;Renombrado de archivos en batch&lt;/h3&gt;
&lt;p&gt;Supongamos que tengo 700 fotos que y los nombres son cosas como IMG_2193192873198723.jpg, quiero renombrarlas
a algo más manejable, como &amp;quot;foto_1.jpg&amp;quot;, &amp;quot;foto_2.jpg&amp;quot; y así.&lt;/p&gt;
&lt;p&gt;Bueno, simplemente escribo&lt;/p&gt;
&lt;p&gt;zmv '(*).jpg' 'foto_$1.jpg'&lt;/p&gt;
&lt;p&gt;Y listo!.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="oh-my-zsh"&gt;
&lt;h2&gt;Oh My ZSH&lt;/h2&gt;
&lt;p&gt;Es un plugin que extiende &lt;em&gt;ZSH&lt;/em&gt; y, además, tiene varios addons, por ahora sólo estoy usando el de &lt;em&gt;git&lt;/em&gt; porque
tiene muchísimos alias útiles para las tareas de día a día con &lt;em&gt;git&lt;/em&gt; que les dejaré de tarea revisar,
pero la diferencia es abismal respeto a lo que escribirías normalmente, por ejemplo:&lt;/p&gt;
&lt;p&gt;En vez de git push origin master con Oh my zsh simplemente escribo ggpush ;-)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalando"&gt;
&lt;h2&gt;Instalando&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;ZSH&lt;/em&gt; normalmente está instalado, simplemente hay que modificar nuestro usuario para que sea el terminal por defecto&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
chsh -s /bin/zsh
&lt;/pre&gt;
&lt;p&gt;Para instalar el plugin &lt;em&gt;Oh my ZSH&lt;/em&gt;, basta con ejecutar&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
&lt;/pre&gt;
&lt;p&gt;O, si preferimos usar &lt;em&gt;wget&lt;/em&gt;&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O - | sh
&lt;/pre&gt;
&lt;/div&gt;
</summary><category term="cambio"></category><category term="herramientas"></category><category term="terminal"></category><category term="zsh"></category></entry><entry><title>Mi experiencia con ATOM</title><link href="http://iferminmontilla.com/mi-experiencia-con-atom.html" rel="alternate"></link><updated>2015-05-10T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2015-05-10:mi-experiencia-con-atom.html</id><summary type="html">&lt;p&gt;Desde hace varios años soy un usuario de vim, para todo. Desde escribir
código en Python o cualquier lenguaje de programación, pasando por documentos
HTML o CSS e incluso mi tesis la escribí usando vim.&lt;/p&gt;
&lt;p&gt;Recientemente he estado en una onda de probar nuevas cosas, lenguajes, herramientas
e incluso editores para programar, hasta he estado &lt;a class="reference external" href="http://iferminmontilla.com/y-si-me-compro-una-mac.html"&gt;considerando la posibilidad de comprarme una
MacBook&lt;/a&gt;. Hace ya varios meses me enteré de que GitHub está trabajando en el
desarrollo de un &lt;a class="reference external" href="https://atom.io/"&gt;editor para programadores&lt;/a&gt;, cuando leí la noticia no había una versión para Linux,
únicamente para Mac, cosa que me irritó un poco (bueno, bastante).&lt;/p&gt;
&lt;p&gt;A inicios de Noviembre me enteré de que ya había un release para linux, así que lo bajé
y me propuse pasar al menos una semana probándolo, usándolo para todo lo que uso vim
normalmente, he acá mis conclusiones al respecto.&lt;/p&gt;
&lt;p&gt;Me gusta
* Gestor de paquetes propio
* Muchísimos plugins para extenderlo
* Funciona como editor de código de una vez,  no hay que configurar nada
* Los plugins se escriben en javascript, así que no es necesario aprender un lenguaje raro para hacer uno
* Integración genial con git, muestra en el árbol de directorios todo lo que has modificado o agregado&lt;/p&gt;
&lt;p&gt;No me gusta
* Demasiado lento para cargar
* Modo vim no está 100% soportado
* Atajos de teclado poco intuitivos
* Para muchas cosas es necesario usar el mouse y ese cambio de contexto me distrae un poco
* No hay actualizaciones automáticas para Linux.&lt;/p&gt;
&lt;p&gt;Conclusión
Es muy parecido a sublime text, vale la pena probarlo, no me veo migrando 100% a atom
en un futuro cercano o a mediano plazo pero es un proyecto interesante que
pienso seguir a ver con qué features me sorprende la gente de github.&lt;/p&gt;
&lt;p&gt;Hasta luego.&lt;/p&gt;
&lt;p&gt;:wq!&lt;/p&gt;
</summary><category term="programación"></category><category term="blog"></category><category term="cambios"></category><category term="editores"></category></entry><entry><title>Cosas que he aprendido: Ventajas de SOA</title><link href="http://iferminmontilla.com/cosas-que-he-aprendido-ventajas-de-soa.html" rel="alternate"></link><updated>2014-12-05T12:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-12-05:cosas-que-he-aprendido-ventajas-de-soa.html</id><summary type="html">&lt;p&gt;Luego de algún tiempo desarrollando software, sea para web
o escritorio, uno realmente termina de entender aquello que nos
decían en &lt;em&gt;Algoritmos y Programación I&lt;/em&gt; de &lt;strong&gt;Divide y vencerás&lt;/strong&gt;,
quizás en la Universidad uno no lo aplica mucho, tienes 8 proyectos
y 14 parciales en una semana y tienes que salir de todo lo más rápido
posible, entonces terminas escribiendo muchísimo terrible, quien sea
inocente, que lance la primera piedra. Incluso a veces en el trabajo
por la presión de los &lt;em&gt;deadlines&lt;/em&gt; uno termina tomando atajos para hacer
la cosa funcionar y dejar un comentario de estos que empiezan con &lt;strong&gt;TODO&lt;/strong&gt;
o &lt;strong&gt;FIXME&lt;/strong&gt; para arreglarlo luego o advertir al resto del equipo que
ese bloque de código debe ser arreglado o podría causar problemas
más adelante.&lt;/p&gt;
&lt;p&gt;Lo primero que uno tiende a hacer es separar todo en funciones,
tratar de que cada función que se escribe haga una y sólo una cosa,
sin efectos colaterales, por ejemplo:&lt;/p&gt;
&lt;pre class="code python literal-block"&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_to_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Esta función, claramente, no hace una cosa, hace dos, escribe un texto
al archivo y luego lo cierra, esto es poco intuitivo, cualquiera llamaría
la función dos veces y, la segunda, seguramente ocurre una excepción, lo ideal
sería:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Renombrar la función a &lt;em&gt;write_to_file_and_close()&lt;/em&gt; o...&lt;/li&gt;
&lt;li&gt;Mucho mejor, simplemente cerrar el archivo en otra parte.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¿Ven?, &lt;strong&gt;divide y vencerás&lt;/strong&gt;, nada difícil ¿no?&lt;/p&gt;
&lt;p&gt;Luego, conocemos las clases, los objetos y los paquetes (no, no esa clase de
paquetes, no sean mal pensados), entonces, empezamos encapsular entidades en
clases, cuyos objetos actuarán sobre los datos que maneja el programa y cada
clase tendrá una y sólo una tarea específica, esta tarea la cumplirá porque
todos y cada uno de los métodos que escribimos para ella están relacionados
entre sí y están diseñados para trabajar en conjunto para lograr ese objetivo,
es decir, tienen &lt;em&gt;alta cohesión&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Al mismo tiempo, estas clases, la agrupamos en &lt;em&gt;paquetes&lt;/em&gt; o &lt;em&gt;módulos&lt;/em&gt;, cada
uno de estos, cumple también una tarea específica que no afecta el trabajo de
los demás, es decir, tienen &lt;em&gt;bajo acoplamiento&lt;/em&gt;, tenemos, normalmente, un módulo
para acceso a datos, un módulo para la lógica compleja del programa y otro para
interactuar con la &lt;em&gt;Capa 8 de la red&lt;/em&gt;, es decir, el usuario.&lt;/p&gt;
&lt;p&gt;Hasta ahora, vamos bien, todo dividido en módulos y así arquitectamos nuestros sistemas
por un largo tiempo, todo lo nuevo que hacemos, lo encapsulamos en un módulo aparte
que se puede importar, &lt;em&gt;y vio Dios que era bueno&lt;/em&gt;, entonces nos permitió seguirlo
haciendo así.&lt;/p&gt;
&lt;div class="section" id="construyendo-un-elefante"&gt;
&lt;h2&gt;Construyendo un elefante&lt;/h2&gt;
&lt;p&gt;Si trabajamos mucho tiempo iterando sobre el mismo sistema, la tendencia
natural es que este crezca, entonces, la cantidad de módulos irá creciendo
cada vez más, así como también los recursos que consume y, si todo sale bien,
también crecerá el tráfico que tenemos que manejar, entonces, poco a poco
sólo un gran servidor se irá quedando corto, ¿cuál es la solución natural?,
escalar de manera horizontal y agregar más servidores corriendo detrás de un
balanceador de carga, pero recordemos que estamos corriendo un sistema enorme
con muchos módulos cargados en memoria, se necesita un servidor grande (y probablemente
caro) para levantar algo tan pesado.&lt;/p&gt;
&lt;p&gt;Más allá de eso, empezamos a preguntarnos, ¿qué tanto se usa cada módulo?, por ejemplo,
tenemos un módulo de registro de usuarios pero, no todos los usuarios que van a nuestra
página, por ejemplo, necesitan registrarse, sin embargo, ese módulo está cargado N veces,
donde N es la cantidad de servidores que tengamos sosteniendo nuestro monolito que, además,
seguramente seguirá creciendo cada vez más.&lt;/p&gt;
&lt;p&gt;Eso por un lado, por otro lado, por otro lado, cada vez que vamos a liberar un feature
nuevo, resolver un bug o simplemente cambiar un texto en una plantilla, tenemos que
hacer deploy de un sistema pesado en N servidores, algo que puede tardar bastante tiempo
y quizás causar &lt;em&gt;downtime&lt;/em&gt; de algunos minutos, quizás perdiendo potenciales usuarios.&lt;/p&gt;
&lt;p&gt;Además, poco a poco hacer cambios en un &lt;em&gt;codebase&lt;/em&gt; tan grande, se vuelve doloroso, es difícil
de modificar, difícil de probar, difícil de escalar y, por lo tanto, difícil de mantener.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="trabajo-de-hormigas-ventajas"&gt;
&lt;h2&gt;¿Trabajo de hormigas?, ventajas&lt;/h2&gt;
&lt;p&gt;¿Qué pasaría si cada módulo lo convertimos en un proyecto aparte?, sí, con su propio
servidor y todo, tendríamos varios servicios que hacen una sola cosa y, simplemente,
tendríamos que escribir clientes para esos servicios y utilizarlos cuando sea necesario
y en el orden que sea necesario, ¿qué ventajas tiene esto?&lt;/p&gt;
&lt;p&gt;Por un lado, usamos servidores más pequeños y si, por ejemplo, los usuarios
están subiendo muchas fotos, simplemente escalamos el &amp;quot;servicio de gestión de fotos&amp;quot;
y listo, es decir, agregamos un nuevo servidor y eso debería soportar más tráfico.
No creamos una instancia nueva de un servidor enorme con, además, partes del sistema que
no está siendo usadas o que no están recibiendo tanto tráfico.&lt;/p&gt;
&lt;p&gt;Por otro lado, es más fácil conseguir errores, si falla el servicio de pagos, sabemos que
algo está mal con ese servicio pues, la única manera de que algo llegue allí es a través
de la interfaz HTTP que este servicio expone. También agregar features nuevos se convierte
en una tarea fácil, no hay que modificar un proyecto enorme sino quizás agregar un servicio
nuevo e integrarlo. Resolver bugs se convierte también en una tarea más fácil pues ya sabemos
dónde está fallando y, a la hora de hacer un release, si hay &lt;em&gt;downtime&lt;/em&gt; es sólo un servicio
y los usuarios prefieren un &lt;em&gt;En este momento no es posible completar tu solicitud, intenta
en unos minutos&lt;/em&gt; que un &lt;em&gt;En este momento estamos en mantenimiento, regresa luego&lt;/em&gt;, al menos
pueden seguir usando las otras partes del sistema, ¿no?.&lt;/p&gt;
&lt;p&gt;Finalmente, permite que la plataforma sea políglota, es decir, si tienes todo hecho en
Ruby on Rails, por ejemplo, pero quieres tener el motor de búsqueda con tecnologías de Web Semántica
y, la mejor herramienta que conseguiste fue integrar &lt;a class="reference external" href="https://jena.apache.org/"&gt;Jena&lt;/a&gt; con &lt;a class="reference external" href="http://clarkparsia.com/pellet/"&gt;Pellet&lt;/a&gt; como motor de
inferencia y todo eso está en &lt;em&gt;Java&lt;/em&gt;, simplemente es un servicio más que expondrá unas interfaces
para que el resto pueda usarlo, así que realmente no importa en qué esté escrito.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="no-todo-es-perfecto"&gt;
&lt;h2&gt;No todo es perfecto&lt;/h2&gt;
&lt;p&gt;Como todo en software, no hay balas de plata para matar problemas, cada solución tiene
también sus contra, algunos de los que he podido ver son los siguientes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Un request del usuario puede derivar en 50 o 60 requests internos a servicios,
por lo que la velocidad de respuesta se aprecia, hay que tener en caché lo que
se pueda e invalidar ese caché oportunamente para actualizarlo cuando sea necesario.&lt;/li&gt;
&lt;li&gt;Cuando el equipo es muy grande, no todos los desarrolladores conocen todos los servicios,
siempre hay unos que saben más que otros y otros que saben mucho de algunos y nada de otros,
es difícil mantener homogeneidad en el conocimiento acerca de todo el stack.&lt;/li&gt;
&lt;li&gt;Si un servicio no responde por alguna razón y las interfaces de los servicios son HTTP, ese
request se pierde, por lo tanto no tendremos esos datos en el servicio que corresponda, así
que si nuestro enfoque es optimista, el servicio que envió el request está contando con que todo
salió bien, hay que pensar entonces en algún método que permita reintentar o, si falla la solicitud,
tener un método de &lt;em&gt;fallback&lt;/em&gt; para estos casos, quizás una cola para que el otro servicio empiece
a procesar cuando se despierte o, quizás, cambiar las llamadas HTTP por colas compartidas.&lt;/li&gt;
&lt;li&gt;Las complicaciones de tener múltiples servidores tras un balanceador de carga se multiplican
por el número de servicios que tengamos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="buenas-practicas"&gt;
&lt;h2&gt;Buenas prácticas&lt;/h2&gt;
&lt;p&gt;Aplica todo lo que ya sabemos, pero hay que ser un poco más rigurosos.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Documentación:&lt;/strong&gt; además del código, hay que documentar la API que expone el servicio
que escribimos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tolerancia a fallos:&lt;/strong&gt; además de servidores redundantes, es necesario tener un método
de recuperación de datos en caso que falle algún servicio y algo no llegue a la base de datos.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pruebas:&lt;/strong&gt; probar cada servicio es fácil, un set de pruebas unitarias hace el trabajo bastante
bien, la cosa se pone un poco más difícil con la pruebas de integración, es necesario contar
con los servicios con los que se va a interactuar a la hora de ejecutar estas pruebas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deploy:&lt;/strong&gt; se hace vital contar con un sistema de integración continua, de otra manera
todo se nos puede salir de las manos y se vuelve poco mantenible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoreo:&lt;/strong&gt; es necesario monitorear todos los servicios para conocer dónde están los cuellos
de botella y optimizar lo que sea necesario o tomar acciones para solventarlo. Además de saber cuándo
un servicio está caído antes de que los usuarios empiecen a quejarse.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Como todo, el nirvana no es solamente orientado a servicios, hay muchas otras maneras de arquitectar
sistemas y todas son correctas dependiendo de las condiciones y el contexto que las rodean.&lt;/p&gt;
&lt;p&gt;Acá dejo &lt;a class="reference external" href="http://queue.acm.org/detail.cfm?id=1142065"&gt;una entrevista&lt;/a&gt; a uno de mis héroes personales sobre este tema, Werner Vogels, CEO de Amazon.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="desarrollo"></category><category term="soa"></category><category term="servicios"></category><category term="web"></category></entry><entry><title>Algunos cambios por estos lados</title><link href="http://iferminmontilla.com/algunos-cambios-por-estos-lados.html" rel="alternate"></link><updated>2014-11-26T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-11-26:algunos-cambios-por-estos-lados.html</id><summary type="html">&lt;p&gt;Bueno, no se si se habrán dado cuenta de un par
de cambios por acá, sino, pues bueno, se los diré&lt;/p&gt;
&lt;p&gt;El primero de ellos es que decidí quitar mi CV de
acá, no tiene sentido tenerlo junto con el blog,
para eso tengo un perfil en &lt;a class="reference external" href="https://www.linkedin.com/profile/view?id=66587805&amp;amp;trk=nav_responsive_tab_profile"&gt;LinkedIn&lt;/a&gt; y en
la página de trabajos de &lt;em&gt;StackOverflow&lt;/em&gt;, tener
el CV publicado, además, en mi blog era otro lugar
donde debía mantenerlo actualizado y, seamos sinceros,
no soy famoso por lo que este blog deben
visitarlo muy pocas personas y, generalmente, por
casualidad, por no decir que por error.&lt;/p&gt;
&lt;p&gt;El segundo de los cambios es que ya no escribo
sólo cosas técnicas o relacionadas con algo laboral,
he decidido dedicar este pequeño espacio también a
escribir reflexiones personales y, realmente, cualquier
cosa que se me ocurra en general, sin dejar de lado
el punto de vista medio nerd que me caracteriza&lt;/p&gt;
&lt;p&gt;Hay varios cambios que no son visibles en el blog,
más que todo respecto a mi manera de ver las cosas
y filosofía de vida, por ejemplo, he estado considerando
seriamente &lt;a class="reference external" href="http://iferminmontilla.com/y-si-me-compro-una-mac.html"&gt;comprarme una mac&lt;/a&gt;, cosa que hace poco
más de un año era impensable, también he estado reconciliándome
con temas y tecnologías que no eran de mi agrado para salir
un poco de mi zona de confort, empezando por desarrollo de
front end, es hora de enseriarme con eso.&lt;/p&gt;
&lt;p&gt;He estado probando otras herramientas para edición de código
además de mi adorado &lt;a class="reference external" href="http://www.vim.org/"&gt;vim&lt;/a&gt;, me han gustado bastante, sin embargo
no creo que termine de migrar, a pesar de que las considero
excelentes herramientas y ha sido interesante explorarlas, ya
agregaré un par te posts al respecto.&lt;/p&gt;
&lt;p&gt;El otro cambio notable, es el tema, ya estuve un buen tiempo
con el tema por defecto de &lt;a class="reference external" href="http://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; y mi pana &lt;a class="reference external" href="http://atmantree.com/"&gt;Carlos Gustavo Ruíz&lt;/a&gt;
me pasó el link de este que tengo ahora, es open source y
la verdad me agrada bastante.&lt;/p&gt;
&lt;p&gt;Se vienen un par de cambios más en los que estoy trabajando
un par de subdominios interesantes acá y estoy también
diseñando un nuevo tema para el blog, para tener algo hecho
por mi y poner el práctica lo que aprenda de front, como
ya dije, he estado jugando con bootstrap, jQuery, HTML5 y CSS3,
saliendo de la zona de confort, veamos qué sale de todo esto.&lt;/p&gt;
</summary><category term="personal"></category><category term="blog"></category><category term="cambios"></category></entry><entry><title>Reflexión del día que me fui del país</title><link href="http://iferminmontilla.com/reflexion-del-dia-que-me-fui-del-pais.html" rel="alternate"></link><updated>2014-11-21T12:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-11-21:reflexion-del-dia-que-me-fui-del-pais.html</id><summary type="html">&lt;p&gt;Bueno, no se si estoy intenso ya con el tema de las reflexiones
pero esta será la última al menos por un buen tiempo, lo que ocurre
es que hace poco conseguí un par de escritos que pensé que había perdido
cuando formateé la computadora acá en Dubai apenas llegué.&lt;/p&gt;
&lt;p&gt;Esto lo escribí el Miércoles 7 de Mayo de 2014, justo el día
que estaba emigrando.&lt;/p&gt;
&lt;div class="section" id="aca-lo-que-escribi"&gt;
&lt;h2&gt;Acá... lo que escribí&lt;/h2&gt;
&lt;p&gt;Siempre que viajo, tengo la mala costumbre de estar hasta la noche antes del vuelo haciendo maletas, esta vez no fue la excepción.&lt;/p&gt;
&lt;p&gt;Terminé de arreglar las cosas a las 2:00am con mi mamá, luego de eso me puse a ordenar un poco el closset pues es probable que mi prometida se quede en mi habitación hasta que, finalmente, nos casemos en diciembre. Al final terminé acostándome a las 5:00am.&lt;/p&gt;
&lt;p&gt;La mañana transcurrió sin mucha novedad, a las 11:00am ya estábamos bajando al aeropuerto y ya a las 13:00 estaba chequeado y sentado tomándome algo con mi familia, mi familia completa, la que me tocó (mi papá, mi mamá y mi hermano) y la que yo tuve la suerte de elegir (mi prometida y su familia).&lt;/p&gt;
&lt;p&gt;Por recomendación de la aerolínea, debía entrar al área de embarque a las 14:00, así que a esa hora nos dirigimos a la puerta que dirige a esa zona, las lágrimas no se hicieron esperar, abrazos y besos para decirnos “hasta luego” pues en diciembre estaré de vuelta.&lt;/p&gt;
&lt;p&gt;El camino al aeropuerto estuvo lleno de reflexiones, en una de las cuales planteé, ¿por qué tiene que ser así?, el ideal venezolano desde que tengo uso de razón siempre ha sido graduarse e irse del país, sea por trabajo o a estudiar un post grado, la cosa es, no debería ser así, ¿por qué no prosperar en tu propio país?, después de todo es tu casa, ¿no?. Pues la respuesta es muy sencilla, también, desde que tengo uso de razón, la manera de sobresalir entre los demás, no es hacer las cosas bien necesariamente sino ser &lt;em&gt;más vivo que el de al lado&lt;/em&gt;, la supervivencia del más vivo o, como se dice coloquialmente, &lt;em&gt;la viveza criolla&lt;/em&gt;, ojo, no digo que todo el mundo sea así, pero una gran mayoría piensa así, entonces, el ideal de éxito pareciera ser “quédate y trata de ser más vivo que los demás, o vete a un país donde todo el mundo sea honesto y haz las cosas como deben ser”, es decir, no te comas la luz, cruza la calle por el rayado, no botes basura en la calle, no orines en la calle ni enseñes a tu hijo a hacerlo, entre muchas otras cosas.&lt;/p&gt;
&lt;p&gt;La verdad es que la conversación estuvo muy amena, como siempre con mi familia, la cuestión es que tomará bastante tiempo antes de sentarnos en la misma mesa como hoy, a disfrutar de un buen café y hablar de cualquier cosa, pasará algo de tiempo antes de que podamos volver a abrazarnos como hoy mientras nos despedíamos, ahora que estoy emprendiendo camino a otras latitudes, entiendo cuando mi mamá me decía “algún día dirás, ¿por qué no abracé más a mis padres?”, le doy toda la razón, nunca he sido muy cariñoso porque no me criaron así, pero justo mientras escribo este post estoy sobrevolando el océano atlántico camino a mi primera escala, el asiento a mi lado está vacío, como también estará vacío el asiento frente a mi en unas horas cuando me siente a almorzar y mañana cuando me siente a desayunar, y el día siguiente, y el siguiente... darse cuenta de esto te pega un poco y despierta la nostalgia y, lo peor, es que es la realidad de muchas personas que han decidido experimentar “la triste alegría de emigrar”.&lt;/p&gt;
&lt;p&gt;Creo que la misma situación del país me recordó las razones por las que los jóvenes profesionales deciden irse a probar suerte en otras naciones: justo pasando el chequeo de migración, escucho un llamado de la aerolínea: “pasajero de Lufthansa Israel Fermín, favor presentarse en la puerta de embarque número 12”, pensé que estaban abordando temprano así que me apuré a la puerta de embarque, allí me informan que una de mis maletas fue “seleccionada para revisión” y que debía bajar al área de equipaje para abrirla, vaciarla y examinar su contenido. Allí, un Guardia Nacional del Comando Antidrogas era el encargado de revisar mi maleta, a pesar de que traté de buscarle conversación no era muy hablador, pero tampoco me trató mal ni fue mal educado, simplemente hizo su trabajo, de manera muy ordenada (de verdad, no es sarcasmo) vació el contenido, revisó la manera y volvió a colocar todo en su lugar. Luego de eso, le pregunto al encargado de equipaje que me acompañó si de verdad consiguen mucho contrabando de esa manera, la respuesta fue afirmativa, no sólo eso, sino que “es algo de todos los días”, de hecho, hace una semana “aprehendieron a una familia completa”, sí, “el señor, la esposa y dos niñas menores de edad”, según el señor la mayor tendría más o menos 5 años.&lt;/p&gt;
&lt;p&gt;Luego de la revisión de equipaje, el vuelo se retrazó unos minutos, dándome tiempo de comer algo antes del vuelo para amortiguar, entre los locales de comida, había una arepera que de verdad no se veía bien, quería irme por lo más económico, y lo siguiente más económico era Burger King, hago mi cola que cada vez se hacía más larga gracias a la lentitud del servicio y de la única cajera que se multiplexaba en tiempo entre la cocina y la caja. Finalmente, cuando voy a pedir, no hay tocineta, no hay aros de cebolla, no hay... bueno, ya estamos acostumbrados, al final pedí el combo de “Dos hamburguesas con queso” por el cual me quedan debiendo 5 bolívares porque, de nuevo, no hay cambio.&lt;/p&gt;
&lt;p&gt;En la cola para retirar el pedido, de nuevo, haciéndose cada vez más larga porque no repartían, informan que la máquina de refrescos está dañada y que no hay refrescos y que no entregarían los pedidos hasta que la arreglaran, allí solté mi tradicional “coño de la madre, qué peo” (perdonen si leen y no esperan malas palabras en un blog), al final, molesto, pido mis hamburguesas, mis papas o que me regresen mi plata, así que me dan mis hamburguesas (frías... además de pequeñas), al finalizar mi delicioso almuerzo (esto sí es sarcasmo), abordé el avión.&lt;/p&gt;
&lt;p&gt;Lo que más me impresionó del episodio de Burger King, no fue el hecho de que no hubiera nada, ni el mal servicio, sino que yo era el único que estaba molesto y que estaba reclamando algo, los demás estaban resignados a esperar quien sabe cuánto tiempo a que arreglaran la máquina de refrescos, les dieran hamburguesas heladas y, seguramente, un refresco que sabe a pura soda. Esa misma actitud de “cállate que sino te van a joder” es la que nos tiene con el agua hasta el cuello y, también, esa actitud de “si puedo jodo al que me cae mal, me mire o me hable feo” es la que sigue echándole agua a la piscina en la que, si seguimos como vamos, nos ahogaremos todos, mi pregunta es, ¿hasta cuándo vamos a vivir en la mierda?, ¿hasta cuando vamos a aceptar un “no hay” por respuesta?.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="reflexión"></category><category term="personal"></category><category term="emigrado"></category></entry><entry><title>Algo que escribí antes de emigrar</title><link href="http://iferminmontilla.com/algo-que-escribi-antes-de-emigrar.html" rel="alternate"></link><updated>2014-11-20T12:45:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-11-20:algo-que-escribi-antes-de-emigrar.html</id><summary type="html">&lt;p&gt;Revisando archivos viejos luego de que migré a
&lt;em&gt;Linux Mint&lt;/em&gt;, conseguí algo que escribí unos 3 días
antes de emigrar, recuerdo haberme sentado en mi
escritorio, aún sin poder creer que me iba de casa,
que me iba de mi país, sintiéndome muy impotente
de toda la situación que me había obligado a tomar
esa decisión, como he dicho varias veces, a nadie
le gusta estar lejos de sus seres queridos. Recuerdo
que encendí la computadora, inicié &lt;em&gt;vim&lt;/em&gt; y simplemente
empecé a escribir, quiero compartir acá con ustedes
lo que escribí esa noche antes de acostarme a dormir
con la ansiedad del viaje que me esperaba.&lt;/p&gt;
&lt;div class="section" id="esto-fue-lo-que-escribi"&gt;
&lt;h2&gt;Esto fue lo que escribí&lt;/h2&gt;
&lt;p&gt;La verdad, es que me describo como una persona poco emotiva, quizás un poco seca y poco sentimental. Varios de mis amigos se han ido, familiares, incluso, están haciendo vida ya fuera del país que lo tiene todo y al mismo tiempo no tiene nada y, en sus respectivas despedidas, estuve siempre tranquilo.&lt;/p&gt;
&lt;p&gt;Todo cambia cuando el protagonista de la despedida es uno, me jacto de siempre hacer valer la lógica por encima de los sentimientos al mejor estilo vulcano pero, ante ciertas situaciones, no hay manera de evitar que el lado humano aflore, ni Spock está excento de sucumbir ante sus emociones de vez en cuando.&lt;/p&gt;
&lt;p&gt;Mientras preparo las maletas, pongo a punto mi bolso de mano con todos los documentos que voy a necesitar durante el viaje de casi 24 horas, no puedo evitar, en mi cuarto, ver todos los adornos, cosas que me han regalado y, en mi mente, revivir esas anécdotas, ex-novias que me han dado cosas que aún conservo, buenos amigos que me han obsequiado otras y, lo más importante, las cosas que me ha dado mi prometida que siempre mantengo a la vista. Historias detrás de los objetos que permanecen en las repisas de mi habitación, inertes, testigos de cómo voy tomando algunas que quiero llevarme y metiéndolas en mi bolso mientras, otras, permanecerán allí, inmóviles, agarrando polvo esperando que nos veamos de nuevo algún día.&lt;/p&gt;
&lt;p&gt;Hablar del tema con mi familia, me afecta un poco, quizás bastante. Me voy a un lugar “no-tan-cercano”, donde hay que tomar como mínimo dos aviones para poder llegar finalmente al destino, donde el pasaje es muy costoso como para darse el lujo de “ir de vez en cuando a visitar” y más aún con la situación actual de mi país. Veo a mi abuela con los ojos aguados, tratando de no llorar, mi tía de crianza, Carmen Carrillo, también conteniendo las lágrimas y deseándome buen viaje. Mi mamá, mi papá y mi prometida, tratando de aprovechar al máximo estos últimos días juntos, días en los que decidí poner de lado mis proyectos para dedicarme a estar con mi familia y terminar ciertas diligencias para el viaje. Días en los que me doy cuenta de los obstáculos y las trabas que ha colocado el gobierno para restringir aún más la salida de venezolanos a otras tierras, aún cuando sea sólo por placer, salir de Venezuela es un privilegio y un lujo que sólo algunos pueden darse mientras vemos a los familiares de quienes hoy detentan el poder conociendo todo el mundo y gozando de tantas comodidades que parece absurdo, no puede haber otra reacción más que incrementar mi alivio por salir y mi repulsión hacia quienes han causado tanto daño.&lt;/p&gt;
&lt;p&gt;Mi nombre es Israel Fermín Montilla, tengo, a la fecha, 27 años de edad, VENEZOLANO de nacimiento y de corazón y para el momento de escribir esto, faltan 3 días para irme del país, en búsqueda de un mejor futuro para mi, para mi prometida, que en diciembre será mi esposa, y para los hijos que planeamos tener, los nietos que queremos darle a nuestros padres. Lamentablemente, en la Venezuela actual hay pocas oportunidades de desarrollo, la posibilidad de independizarse, salir de la casa de los padres y tener uno su propia vivienda es casi, por no decir, totalmente, nula. He visto a mis amigos partir, quienes me conocen saben que he luchado hasta donde he podido, pero me apena confesar que me venció el cansancio, ¿qué pensaría mi abuelo hoy de mi?.&lt;/p&gt;
&lt;p&gt;En 3 días estaré viajando a un lugar donde seré un completo extraño, perdóname Venezuela, por dejarme vencer por el fantasma del cansancio y dejar de nadar contra la corriente para llegar a rescatarte, espero que todo mejore pronto y se que cuando decida volver, me recibirás con los brazos abiertos como buena madre.&lt;/p&gt;
&lt;p&gt;Familia, amigos, compañeros, conocidos…
Hasta siempre!!&lt;/p&gt;
&lt;p&gt;-- Israel.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="personal"></category><category term="reflexión"></category><category term="emigrado"></category></entry><entry><title>Usando Redis como backend de sesiones en php</title><link href="http://iferminmontilla.com/usando-redis-como-backend-de-sesiones-en-php.html" rel="alternate"></link><updated>2014-10-19T12:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-10-19:usando-redis-como-backend-de-sesiones-en-php.html</id><summary type="html">&lt;p&gt;Bueno, sí, leyeron bien el título, luego de años me tocó
trabajar de nuevo con php en la oficina, dejen el escándalo.&lt;/p&gt;
&lt;p&gt;Siendo sincero, las cosas parecieran haber mejorado mucho desde
la última vez que hice (o traté de hacer) algo con php, era php
4.algo en aquel momento, jugaba con &lt;em&gt;Symfony&lt;/em&gt; y fue una desgracia
que no se la deseo ni a mi peor enemigo.&lt;/p&gt;
&lt;p&gt;Luego, más recientemente jugué con &lt;em&gt;Yii&lt;/em&gt;, un framework para desarrollo
web con php que me pareció bastante bueno y es una alternativa
que le recomiendo a todo aquel que no tenga más remedio que
desarrollar usando este lenguaje, algunos me dicen que pruebe
&lt;em&gt;Lavarel&lt;/em&gt; y seguramente me cambie a php, pero dudo mucho que
algo me atrape tanto como &lt;em&gt;Python&lt;/em&gt;, sin importar el framework,
incluso &lt;em&gt;Web2Py&lt;/em&gt; tiene muchas cosas rescatables.&lt;/p&gt;
&lt;p&gt;Bueno, manos a la obra:&lt;/p&gt;
&lt;div class="section" id="la-historia"&gt;
&lt;h2&gt;La historia:&lt;/h2&gt;
&lt;p&gt;En la oficina están en una onda de &lt;em&gt;intercambiar código&lt;/em&gt; con nuestros
aliados comerciales o &amp;quot;páginas hermanas&amp;quot;, el problema es que nosotros
desarrollamos en &lt;em&gt;Python&lt;/em&gt; + &lt;em&gt;django&lt;/em&gt; y a veces &lt;em&gt;bottle&lt;/em&gt; y todos los demás
en php.&lt;/p&gt;
&lt;p&gt;Este proyecto en particular, fue desarrollado con un framework hecho en
casa en php y es usado como una librería para autenticación utilizando
servicios de 3eros, es decir, &lt;em&gt;OAuth&lt;/em&gt;. Esto en un mundo ideal, donde todo
lo programas con php y puedes simplemente hacer:&lt;/p&gt;
&lt;pre class="code php literal-block"&gt;
&lt;span class="x"&gt;use project\module\submodule\file;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;y todo bien.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-problema"&gt;
&lt;h2&gt;El problema:&lt;/h2&gt;
&lt;p&gt;Obviamente, no podemos importar código php en nuestro proyecto en &lt;em&gt;Python&lt;/em&gt;,
entonces, la solución fue simplemente, adaptar la librería provista
por la otra gente para usarla como un servicio, la cosa salió bastante bien,
pero al momento de poner todo en producción, nos dimos cuenta de algo.&lt;/p&gt;
&lt;p&gt;Se desplegaron dos instancias de este servicio detrás de un balanceador de carga,
para autenticar usando &lt;em&gt;OAuth&lt;/em&gt;, es necesario golpear más de una vez el servicio,
entonces, estando dos (o más) instancias detrás de un balanceador de carga, no
tienes manera de garantizar que quien atiende el primer &lt;em&gt;request&lt;/em&gt;, es el mismo
que atiende el segundo.&lt;/p&gt;
&lt;p&gt;A esto súmale que se guarda cierta información en la sesión para mantenerla
durante todo el proceso de autenticación y php almacena las variables de sesión
en un archivo local del servidor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-solucion"&gt;
&lt;h2&gt;La solución:&lt;/h2&gt;
&lt;p&gt;Sin pensarlo mucho, la solución es tener &lt;em&gt;algo&lt;/em&gt; que todas las instancias
compartan para escribir la información relacionada a las sesiones, puede
ser una base de datos &lt;em&gt;MySQL&lt;/em&gt;, un sistema de archivos compartido con &lt;em&gt;NFS&lt;/em&gt;,
lo que sea, nosotros optamos por &lt;em&gt;Redis&lt;/em&gt; porque es lo más rápido y fácil de
configurar, responde rápido porque mantiene ciertas cosas en memoria y es
difícil que pierda datos, puede pasar, pero igual es información transitoria
que no nos interesa conservar.&lt;/p&gt;
&lt;div class="section" id="implementacion"&gt;
&lt;h3&gt;Implementación:&lt;/h3&gt;
&lt;p&gt;Luego de investigar unos minutos, nos dimos cuenta de que no era nada del otro
mundo, simplemente cambiar unos parámetros de configuración en los respectivos
archivos &lt;em&gt;php.ini&lt;/em&gt;, instalar un par de paquetes y listo.&lt;/p&gt;
&lt;div class="section" id="instalacion-de-paquetes"&gt;
&lt;h4&gt;Instalación de paquetes:&lt;/h4&gt;
&lt;p&gt;Descargamos &lt;a class="reference external" href="https://github.com/nicolasff/phpredis"&gt;php-redis&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
sudo aptitude install php5-dev
cd php_redis/
sudo phpize
sudo ./configure
sudo make
sudo make install
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="php-ini"&gt;
&lt;h4&gt;php.ini:&lt;/h4&gt;
&lt;p&gt;Simplemente debemos modificar las siguientes líneas:&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
extension=redis.so
[Session]
session.save_handler=redis
session.save_path=&amp;quot;tcp://localhost:6379&amp;quot;
&lt;/pre&gt;
&lt;p&gt;El &lt;em&gt;save_path&lt;/em&gt; debe tener la IP y el Puerto donde nuestra instancia de
redis estará escuchando.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusión:&lt;/h2&gt;
&lt;p&gt;Ciertamente las cosas han mejorado sólo un poco en php desde la última vez que
lo usé para algo más que un proyecto de juguete. Sin embargo no me veo programando
en php a menos que sea estrictamente necesario por las características o restricciones
de un proyecto en particular.&lt;/p&gt;
&lt;p&gt;Respecto al servicio de autenticación, ya está en producción, pareciera estar funcionando
bastante bien, sin embargo hay muchas cosas con las que no estamos contentos, seguramente
terminemos cambiándolo por una versión 2.0, seguramente en &lt;em&gt;Python&lt;/em&gt; y desarrollado por
nosotros pero, al menos por ahora, funciona y hace el trabajo.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="desarrollo"></category><category term="web"></category><category term="sesiones"></category><category term="redis"></category><category term="php"></category></entry><entry><title>Reporte de películas, libros y series Octubre 2014</title><link href="http://iferminmontilla.com/reporte-de-peliculas-libros-y-series-octubre-2014.html" rel="alternate"></link><updated>2014-10-18T00:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-10-18:reporte-de-peliculas-libros-y-series-octubre-2014.html</id><summary type="html">&lt;p&gt;Bueno, octubre fue un mes no muy activo en cuanto
a películas, agregué unas nuevas al watchlist de las
cuales vi algunas, pero no taché ninguna de las viejas.&lt;/p&gt;
&lt;p&gt;A ver, la cosa va así&lt;/p&gt;
&lt;div class="section" id="listas-de-peliculas"&gt;
&lt;h2&gt;Listas de películas&lt;/h2&gt;
&lt;p&gt;Lo más fácil es verlo por separado&lt;/p&gt;
&lt;div class="section" id="no-vistas-ultimo-lote"&gt;
&lt;h3&gt;No vistas último lote&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0080455/"&gt;The Blues Brothers (1980)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0111161/"&gt;The Shawshank Redemption (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0068646/"&gt;The Godfather (1972)&lt;/a&gt;  ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0071562/"&gt;The Godfather: Part II (1974)&lt;/a&gt;  ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0099674/"&gt;The Godfather: Part III (1990)&lt;/a&gt;  ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0060196/"&gt;The Good, the Bad and the Ugly (1966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0050083/"&gt;12 Angry Men (1957)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0109830/"&gt;Forrest Gump (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0073486/"&gt;One Flew Over the Cuckoo's Nest (1975)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0099685/"&gt;Goodfellas (1990)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0133093/"&gt;The Matrix (1999)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0047478/"&gt;Seven Samurai (1954)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0317248/"&gt;City of God (2002)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0114369/"&gt;Se7en (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0114814/"&gt;The Usual Suspects (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0102926/"&gt;The Silence of the Lambs (1991)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0038650/"&gt;It's a Wonderful Life (1946)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0064116/"&gt;Once Upon a Time in the West (1968)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0110413/"&gt;Léon: The Professional (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0082971/"&gt;The Raiders of the Lost Ark (1981)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0034583/"&gt;Casablanca (1942)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0118799/"&gt;Life Is Beautiful (1997)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="nuevas-no-vistas"&gt;
&lt;h3&gt;Nuevas no vistas&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0110570/"&gt;The Monster (1994)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0256408/"&gt;Startup.com (2001)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1584131/?ref_=wl_li_tt"&gt;The Last Godfather (2010)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1859650/?ref_=wl_li_tt"&gt;To Rome with Love (2012)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0499004/?ref_=wl_li_tt"&gt;Code Rush (2000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0168122/?ref_=wl_li_tt"&gt;Pirates of Silicon Valley (1999)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0118971/?ref_=wl_li_tt"&gt;Devil's Advocate (1997)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0209144/?ref_=wl_li_tt"&gt;Memento (2000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0180093/?ref_=wl_li_tt"&gt;Requiem for a Dream (2000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0364569/?ref_=wl_li_tt"&gt;Oldboy (2003)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1321511/?ref_=wl_li_tt"&gt;Oldboy (2013)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0047396/?ref_=wl_li_tt"&gt;Rear Window (1954)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1345836/?ref_=wl_li_tt"&gt;The Dark Knight Rises (2012)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0120815/?ref_=wl_li_tt"&gt;Saving Private Ryan (1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0093058/?ref_=wl_li_tt"&gt;Full Metal Jacket (1987)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0066921/?ref_=wl_li_tt"&gt;A Clockwork Orange (1971)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0120586/?ref_=wl_li_tt"&gt;American History X (1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0482571/?ref_=wl_li_tt"&gt;The Prestige (2006)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0097576/?ref_=wl_li_tt"&gt;Indiana Jones and the Last Crusade (1989)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0372784/?ref_=wl_li_tt"&gt;Batman Begins (2005)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0262021/?ref_=wl_li_tt"&gt;E-Dreams (2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0120689/?ref_=wl_li_tt"&gt;The Green Mile (1999)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0094012/?ref_=wl_li_tt"&gt;Spaceballs (1987)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0102164/?ref_=wl_li_tt"&gt;Johnny Stecchino (1991)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0086250/?ref_=wl_li_tt"&gt;Scarface (1983)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0117951/?ref_=wl_li_tt"&gt;Trainspotting (1996)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0361862/?ref_=wl_li_tt"&gt;The Machinist (2004)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0208092/?ref_=wl_li_tt"&gt;Snatch (2000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2279353/?ref_=wl_li_tt"&gt;The Startup Kids (2012)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0118747/?ref_=wl_li_tt"&gt;Blues Brothers 2000 (1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0361748/?ref_=wl_li_tt"&gt;Inglourious Basterds (2009)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0167404/?ref_=wl_li_tt"&gt;The Sixth Sense (1999)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1279942/?ref_=wl_li_tt"&gt;Hackers are People Too (2008)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1027718/?ref_=wl_li_tt"&gt;Wall Street: Money Never Sleeps (2010)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0268978/?ref_=wl_li_tt"&gt;A Beautiful Mind (2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1285016/?ref_=wl_li_tt"&gt;The Social Network (2010)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1232207/?ref_=wl_li_tt"&gt;Capitalism: A Love Story (2009)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="vistas-en-octubre"&gt;
&lt;h3&gt;Vistas en Octubre&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;The Godfather (10/10):&lt;/strong&gt; creo que de las películas que vi en octubre
fue la mejor, es como un &lt;em&gt;Breaking Bad&lt;/em&gt; pero con la mafia italiana y hecho
película, de héroe de guerra a capo de la mafia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Godfather: Part II (8/10):&lt;/strong&gt; no me gustó tanto, cuenta la historia de
cómo &lt;em&gt;Vito Corleone&lt;/em&gt; llegó a donde estaba, mientras cuentan cómo su hijo,
&lt;em&gt;Michael Corleone&lt;/em&gt; quien se hace cargo del &lt;em&gt;negocio familiar&lt;/em&gt; luego que el viejo
muere, trata de expandir y hacer legal el dinero de su familia. La cosa es que
entre tantos saltos entre el &lt;em&gt;presente&lt;/em&gt; y el &lt;em&gt;pasado&lt;/em&gt; a veces la película se
vuelve un poco confusa.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Godfather: Part III (9/10):&lt;/strong&gt; es bastante buena, aunque algo lenta, al final,
una vez que estás en ese mundo, es imposible salir de él y es lo que se ve en la
tercera parte.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Monster (9/10):&lt;/strong&gt; es una película italiana, con Roberto Benigni, además, dirigida
por él mismo. Es súper cómica, es sobre un asesino serial y maniático sexual que anda suelto
y, por una serie de coincidencias, &lt;em&gt;Loris&lt;/em&gt;, el personaje que interpreta Roberto Benigni, es
el principal sospechoso.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Startup.com (7/10):&lt;/strong&gt; es un documental sobre uno de los primeros startups a finales de los
90, govworks.com, era una manera de pagar tus tickets de estacionamiento, multas, etc, vía
internet, quebró en el 2000 y &lt;em&gt;Startup.com&lt;/em&gt; cuenta la historia de cómo consiguieron financiamiento,
los problemas internos que tuvieron y luego cómo llegaron al punto final.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="listas-de-series"&gt;
&lt;h2&gt;Listas de series:&lt;/h2&gt;
&lt;div class="section" id="viejas-no-vistas"&gt;
&lt;h3&gt;Viejas no vistas&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0060028/"&gt;Star Trek (1966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0092455/"&gt;Star Trek The Next Generation (1987)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0244365/"&gt;Star Trek Enterprise (2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0112178/"&gt;Star Trek Voyager (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2732442/"&gt;Star Trek Continues (2013)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1582457/"&gt;The Borgias (2011)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;Nuevas no vistas&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0207264/?ref_=wl_li_tt"&gt;Nerds 2.0.1: A Brief History of the Internet (1998)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0758790/?ref_=wl_li_tt"&gt;The Tudors (2007 - 2010)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2234222/?ref_=wl_li_tt"&gt;Orphan Black (2013 - )&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2372162/?ref_=wl_li_tt"&gt;Orange is the new Black (2013 - )&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;Vistas en Octubre&lt;/h3&gt;
&lt;p&gt;Ninguna, sí, he estado flojo para ver series&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="reporte-de-libros"&gt;
&lt;h2&gt;Reporte de libros&lt;/h2&gt;
&lt;p&gt;Terminé de leer &lt;em&gt;Effective Programming&lt;/em&gt; de Jeff Atwood, es genial,
muy buena compilación de artículos sobre temas diversos del mundo
del software relacionados o no a la programación.&lt;/p&gt;
&lt;p&gt;Ahora estoy leyendo &lt;em&gt;Padre Rico, Padre Pobre&lt;/em&gt;, no tiene nada que ver
con programación ni mucho menos es una novela, simplemente lo veo
como una manera de organizar mis finanzas porque soy un desastre
administrando mi propio dinero y, cuando estás viviendo solo,
aprender a administrarte y masterizar ese arte es algo poco más
que de vida o muerte.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="películas"></category><category term="cine"></category><category term="series"></category><category term="tv"></category><category term="libros"></category></entry><entry><title>Algo hemos hecho mal en Venezuela, ¿qué?</title><link href="http://iferminmontilla.com/algo-hemos-hecho-mal-en-venezuela-que.html" rel="alternate"></link><updated>2014-10-12T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-10-12:algo-hemos-hecho-mal-en-venezuela-que.html</id><summary type="html">&lt;p&gt;Voy ya para cinco meses viviendo fuera del país y
empiezo a ver las cosas de otra manera, quizás estando
en Venezuela todo estaba tan caótico que me impedía pensar
&amp;quot;fuera de la caja&amp;quot;, quizás llegó el momento en el que
dejó de importarme y me enfoqué en mis asuntos y en
ayudar en lo que estuviera en mis manos, lo que sí
estoy seguro es que desde afuera y conociendo otra
cultura veo las cosas desde otra perspectiva.&lt;/p&gt;
&lt;p&gt;Quizás uno ya ve todo como normal, pero, ciertamente
no lo es, me pregunto, ¿por qué?, ¿qué está mal en
latinoamética?, ¿seremos los latinos?, ¿será verdad
que la culpa la tienen los españoles por mandar puros
vagos, borrachos y piratas a conquistarnos?, no lo se,
lo que sí se es que tengo demasiadas preguntas similares
y dudo que pueda responderlas todas, pero bueno, acá vamos.&lt;/p&gt;
&lt;p&gt;Creo que &lt;strong&gt;todos&lt;/strong&gt; sabemos que &lt;a class="reference external" href="http://en.wikipedia.org/wiki/List_of_countries_by_proven_oil_reserves"&gt;Venezuela tiene una de las
reservas petroleras más grandes del mundo&lt;/a&gt;, ¿no?, no es
secreto para nadie, estamos acampando, nos dieron ganas de
ir al baño, cavamos una letrina y &lt;em&gt;BOOM&lt;/em&gt;, conseguimos petróleo
mágicamente, bueno, quizás exagero, pero estamos de primeros
en la lista, seguidos de cerca por Arabia Saudita.&lt;/p&gt;
&lt;p&gt;No compararé Venezuela con Arabia Saudita por varias razones&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Están de segundos en el listado de países con más reservas
de petróleo en el mundo, muy cerca de Venezuela.&lt;/li&gt;
&lt;li&gt;Son una de las cuatro monarquías absolutas en la actualidad,
con todos los avances en esta era moderna, considero que estan
atrasados en lo político y lo social, o eso es lo que mi mente
occidental piensa.&lt;/li&gt;
&lt;li&gt;Hay muchas cosas básicas que no están permitidas o están
realmente censuradas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Voy a comparar con los Emiratos Árabes Unidos (UAE) pues es una experiencia
que puedo contar de primera mano pues, a la fecha, llevo casi 5
meses viviendo en Dubai.&lt;/p&gt;
&lt;p&gt;Empecemos por las reservas petroleras, Venezuela es el primero,
UAE el séptimo, es decir, estamos, por mucho, encima de UAE
en cuanto a reservas de petróleo.&lt;/p&gt;
&lt;p&gt;El petróleo, sigue siendo el principal combustible para &lt;strong&gt;casi todo&lt;/strong&gt;,
y sus derivados también están presentes en casi todo lo que vemos, así
que parece ser un buen negocio.&lt;/p&gt;
&lt;p&gt;Venezuela inició su carrera independentista del imperio español
el 19 de abril 1810, cuando se llevó a cabo el primer referendum
de nuestra historia, aquel en el que el Capitán General Vicente Emparam
va al balcón a preguntarle al pueblo si quieren que él siga gobernando,
el Padre José Cortés de Madariaga, chileno de nacimiento, agitaba la mano
por detrás del Capitán General, algunos dicen que estaba espantando una
mosca, otros dicen que le hacía una señal negativa al pueblo, lo cierto
es que el pueblo gritó un rotundo &amp;quot;NO!&amp;quot; y así empezó nuestra agitada
carrera hacia la independencia, la cual sellamos el 24 de junio de 1821
con la victoria de nuestro ejército patriota, Forjador de Libertades[1],
en Carabobo. O eso es lo que dicen los textos de historia que estudié
en el liceo.&lt;/p&gt;
&lt;img alt="La famosa escena del 19 de abril" src="https://dl.dropboxusercontent.com/u/3437671/blog/vedubai/emparan.jpg" /&gt;
&lt;p&gt;Por su parte, UAE logró su independencia del Reino Unido en 1971
no he leído mucho de su historia aún, pero lo que sí se es que hasta principios
de la década de los 90, &lt;a class="reference external" href="http://www.forocoches.com/foro/showthread.php?t=1243603"&gt;esto era un desierto&lt;/a&gt;, y hablo de Dubai, en 13 años
levantaron rascacielos, para 2008 o 2009, ya tenían incluso islas artificiales,
hoy día el edificio más alto del mundo queda en Dubai (&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Burj_Khalifa"&gt;Burj Khalifa&lt;/a&gt;), los
edificios 100% resicenciales más altos del mundo también (&lt;a class="reference external" href="http://en.wikipedia.org/wiki/23_Marina"&gt;23 marina&lt;/a&gt; y
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Princess_Tower"&gt;Princess Tower&lt;/a&gt;) e incluso uno de los hoteles más lujosos del mundo, contruido
en una isla artificial (&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Burj_Al_Arab"&gt;Burj al Arab&lt;/a&gt;).&lt;/p&gt;
&lt;img alt="Dubai en 1990" src="https://dl.dropboxusercontent.com/u/3437671/blog/vedubai/dubai-desierto.jpg" /&gt;
&lt;img alt="Misma calle en 2003" src="https://dl.dropboxusercontent.com/u/3437671/blog/vedubai/dubai2003.jpg" /&gt;
&lt;p&gt;Ahora bien, todo esto fue a punta de petróleo, acá no hay bellezas ni muchos recursos naturales,
sí, hay playas muy bonitas, pero ¿montañas?, ¿nieve?, ¿picos?, ¿sabana?, pues no,
acá donde no hay rascacielos y edificios enormes, hay arena, no estoy seguro
cómo obtenemos agua potable acá porque según me han dicho, son contadas las veces
que llueve durante el año, así que no creo que haya embalses naturales como en Venezuela,
¿turismo? hoy claro que sí, hay maravillas arquitectónicas y de ingeniería, invirtieron
sus ganancias petroleras en infraestructura, servicios y crecimiento.&lt;/p&gt;
&lt;p&gt;En Venezuela, ¿qué hemos hecho con el petróleo?, desde que estudiaba primaria, mi maestra
de &lt;em&gt;sociales&lt;/em&gt; siempre decía &amp;quot;Venezuela es un país monoproductor de petróleo&amp;quot; y eso mismo
fue repetido por distintos profesores hasta que salí de bachillerato y luego durante
la Universidad, en una que otra materia social (recuerden que estudié Ingeniería), también,
el mismo cuento y las mismas palabras. Todo, lo que se hace en Venezuela, es también
&lt;em&gt;a punta de petróleo&lt;/em&gt;, entonces, por qué hay rascacielos, islas artificiales y autopistas
de 16 canales en Dubai, mientras que en Venezuela aún hay que pasar por carreteras de tierra
para llagar a algunos pueblos en los que llega señal celular de Movistar, pero no una línea
telefónica de tierra de CANTV, y ni hablemos de internet de banda ancha. Mientras en un país
se levantan rascacielos, en el otro tardan &lt;strong&gt;años&lt;/strong&gt; para reparar una torre quemada
de Parque Central.&lt;/p&gt;
&lt;img alt="Parque central en 2004" src="https://dl.dropboxusercontent.com/u/3437671/blog/vedubai/parque-central-quemado.jpg" /&gt;
&lt;p&gt;Y eso que Venezuela tiene más tiempo en el mercado petrolero que UAE, Venezuela
es uno de los países fundadores de la OPEP (Organización de Paises Exportadores de
Petróleo) en 1960, mientras que los Emiratos Árabes, ingresaron en 1967, y en un país
las escuelas parecen universidades americanas (sí, las escuelas, colegios, liceos), y
en el otro el sistema de educación pública y gratuita a veces sufre para iniciar el año
escolar por falta de pupitres, goteras o fugas de agua en los baños.&lt;/p&gt;
&lt;p&gt;No comprendo, además, cómo en un país es normal ver tasas de homicidios de 60 o 70
por semana, mientras que en el otro le roban el bolso a un amigo en la playa (ayer)
con la ropa, el celular y las llaves del apartamento y &lt;strong&gt;todo el mundo&lt;/strong&gt; está impresionado
por la noticia.&lt;/p&gt;
&lt;p&gt;Cómo UAE teniendo mucho menos petróleo que Venezuela, está en el lugar 28 entre las
&lt;a class="reference external" href="http://www.heritage.org/index/ranking"&gt;economías más estables del mundo&lt;/a&gt;, mientras que Venezuela aparece de cuarto si contamos
de forma regresiva.&lt;/p&gt;
&lt;p&gt;Esas son todas las preguntas que me hago, cualquiera podría decirme &amp;quot;el desarrollo de un país
no se mide por la cantidad de rascacielos que tenga&amp;quot;, es cierto, vamos a verlo por calidad
de vida, en Venezuela, ejerciendo mi profesión, mudarme de casa de mis padres, así fuera a una
habitación, era un sueño. Acá, puedo alquilar algo decente tranquilo, hacer mercado y darme
uno que otro gusto de vez en cuando, y en una posición &amp;quot;de menor jerarquía&amp;quot; en la cadena alimenticia,
en Caracas, era &lt;em&gt;Lead developer / CTO&lt;/em&gt; de un startup de telefonía en la nube, acá soy
&lt;em&gt;Jr. Software Engineer&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No vamos a verlo por cantidad de rascacielos, vamos a verlo por cantidad de recursos naturales,
en Venezuela tenemos Petróleo, Gas, Carbón, Aluminio (Bauxita, creo), Oro, Níquel, Cobre,
Hierro, incluso creo que Diamantes y, además  Energía Hidroeléctrica según recuerdo de las clases de
Geografía del Prof. Tito Calderón.&lt;/p&gt;
&lt;p&gt;No vamos a verlo en cantidad de rascacielos, vamos a verlo en posibilidades de hacer turismo, y digo
turismo natural: tenemos la Isla de Margarita, donde tengo entendido que se puede hacer surf, wind surf y
kite surf y además, las playas más impresionantes que he visto se encuentran contenidas en los más de 4mil
Kilómetros de costa venezolana, los ríos en la sabana, donde se puede hacer Kayak extremo, la Gran Sabana,
los asentamientos indígenas en Amazonas y Delta Amacuro, la caída de agua más alta del mundo, el Salto Ángel,
la Cueva del Guácharo, tenemos sabana, desierto, playa y montaña, todo en un mismo país de poco menás de 900 mil
kilómetros cuadrados, ¿no tan grande eh? y además suelos fértiles por todos lados.&lt;/p&gt;
&lt;p&gt;Cómo es posible que un país, mi país, teniendo todo eso esté en las condiciones que está,
que toda la población joven y profesional está emigrando, literalmente &lt;em&gt;dejando el pelero&lt;/em&gt;.
Dicen que nadie es profeta en su tierra, mi teoría es que Arturo Uslar Pietri es el hombre
que ha estado más claro en la vida cuando escribió su artículo &amp;quot;Sembrar el Petróleo&amp;quot;, mi teoría
es que en algún momento oculto de la historia, se vino de paseo al medio oriente y, como el suelo
es pura arena y es muy difícil hacer crecer plantas, hicieron crecer edificios.&lt;/p&gt;
&lt;p&gt;¿Alguien me puede explicar?&lt;/p&gt;
&lt;img alt="dafuq?" src="https://dl.dropboxusercontent.com/u/3437671/blog/vedubai/jackie-chan-meme.jpg" /&gt;
&lt;p&gt;[1] Hoy, Follador de libertades&lt;/p&gt;
</summary><category term="reflexion"></category><category term="política"></category><category term="personal"></category></entry><entry><title>¿Y si me compro una Mac?</title><link href="http://iferminmontilla.com/y-si-me-compro-una-mac.html" rel="alternate"></link><updated>2014-10-03T12:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-10-03:y-si-me-compro-una-mac.html</id><summary type="html">&lt;p&gt;Llevo ya un par de meses considerando la posibilidad,
sí, YO, Israel Fermín Montilla llevo un par de meses
considerando la posibilidad de comprarme una &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;No, no me hackearon github y subieron este artículo,
tampoco estoy sufriendo de algún tipo de enfermedad
mental, mucho menos considero que he aprendido todo
lo que hay que aprender de Linux, tampoco me fastidié
de Linux, simplemente estoy considerando la posibilidad.&lt;/p&gt;
&lt;p&gt;En Venezuela era impensable e incomprable, pero acá, es algo
que puedo hacer, podría fácilmente adquirir una MacBook Pro
retina display, instalar homebrew y usarla también como máquina
de desarrollo, ¿por qué no probar algo diferente?&lt;/p&gt;
&lt;img alt="Problem?" src="https://dl.dropboxusercontent.com/u/3437671/blog/comprarme-mac/thinkdifferent.jpg" /&gt;
&lt;p&gt;Siempre he sido un crítico de &lt;em&gt;Apple&lt;/em&gt; y de todo lo que
representa, siempre he dicho que es una fábrica de
juguetes y que el único juguete que sirve es el iPod Classic,
porque es fácil de usar, cumple su cometido muy bien y
le cabe una cantidad grosera de música, el mío es de 160GB
y tengo &lt;strong&gt;todos&lt;/strong&gt; mis discos allí metidos y aún le cabe
más música. También siempre me he burlado de los fanáticos
de &lt;em&gt;Apple&lt;/em&gt;, les digo &lt;em&gt;iSheeps&lt;/em&gt; porque, básicamente, así
se comportan.&lt;/p&gt;
&lt;img alt="iSheeps en formación" src="https://dl.dropboxusercontent.com/u/3437671/blog/comprarme-mac/isheeps.jpg" /&gt;
&lt;p&gt;Yo no soy una oveja, creo que soy mejor que eso, pero
luego, pensando al respecto, tener una Mac, no me hace
&lt;em&gt;iSheep&lt;/em&gt;, comprar todo lo que tenga la manzana mordida
y ciegamente decir que es superior aunque técnicamente
sea falso sí, al fin y al cabo, como Ingeniero y como
programador, siento que debería aunque sea probar para
definir si es bueno o malo.&lt;/p&gt;
&lt;p&gt;Algunas de las ventajas que veo respecto de tener una
Mac son:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Software que funciona:&lt;/strong&gt; no es que Linux no funcione
es sólo que a veces requiere de algunos pasos adicionales
de configuración para que funcione como debe ser, en Mac
simplemente instalas y ya, igual que en Windows.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sistema operativo estable:&lt;/strong&gt; no es que Linux no sea estable,
es que Windows, la otra alternativa en cuanto a sistemas operativos
&amp;quot;mainstream&amp;quot;, no lo es tanto, acá Linux y Mac, parecieran estar a
la par pues ambos son sistemas Un*x (o eso es lo que nos hacen creer).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Compatibilidad:&lt;/strong&gt; bueno, no es que en Linux haya problemas con drivers
¿verdad?, uno siempre logra hacer funcionar las cosas, a veces
cuesta un poco más de tiempo, pero no hablemos de drivers y software
técnico, la mayoría de los entornos de desarrollo y servidores de base
de datos, storage no-sql, etc funcionan perfecto en Linux, hablemos de
software para uso diario, &lt;em&gt;Skype&lt;/em&gt;, el plugin de &lt;em&gt;Hangouts&lt;/em&gt; para &lt;em&gt;Chrome&lt;/em&gt;,
estemos claros que &lt;em&gt;LibreOffice&lt;/em&gt; apesta, hay muchas alternativas para
producir documentos, incluso de mayor calidad que con &lt;em&gt;Word&lt;/em&gt;, &lt;em&gt;PowerPoint&lt;/em&gt;
o incluso &lt;em&gt;KeyNote&lt;/em&gt;, está LaTex, por ejemplo, y hay miles de librerías
para producir presentaciones excelentes usando HTML, y JavaScript, pero
muchas veces uno simplemente quiere hacer algo rápido, sin necesidad de
escribir mucho código. Skype, por ejemplo, es imposible de instalar en
&lt;em&gt;Debian&lt;/em&gt;, el paquete está corrupto, el de &lt;em&gt;Ubuntu&lt;/em&gt; y &lt;em&gt;Linux Mint&lt;/em&gt; funciona
perfecto, lo mismo que con los plugins de &lt;em&gt;HangOuts&lt;/em&gt;, incluso el plugin
de &lt;em&gt;Flash Player&lt;/em&gt; me ha dado problemas en &lt;em&gt;Ubuntu&lt;/em&gt; luego de un tiempo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Software de grabación:&lt;/strong&gt; todos saben que toco guitarra, me gustaría empezar
a grabar las cosas que compongo, &lt;em&gt;Audacity&lt;/em&gt; apesta y &lt;em&gt;Ubuntu Studio&lt;/em&gt; a veces
me deja mal. He visto mucha gente trabajar con &lt;em&gt;Garage Band&lt;/em&gt; y hacer cosas
geniales.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esas son algunas de las razones que consigo como para una eventual migración,
según tengo entendido, son geniales como máquinas personales y para realizar
trabajos multimedia, bueno, me consta porque mi hermano es diseñador gráfico
y todo lo hace allí, igual en varios estudios de grabación (claro, ellos usan
&lt;em&gt;Pro Tools&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Mi mayor preocupación al respecto es la ausencia de un gestor de paquetes
nativo, no puedo simplemente hacer &lt;em&gt;aptitude install&lt;/em&gt; y que todo funcione
de maravilla. Todos los usuarios &lt;em&gt;Mac&lt;/em&gt; en la oficina me dicen que &lt;em&gt;homebrew&lt;/em&gt;
hace el trabajo bastante bien, incluso, mi pana de &lt;a class="reference external" href="http://python.org.ve"&gt;PyVE&lt;/a&gt; &lt;a class="reference external" href="https://github.com/satanas"&gt;Wil Álvarez&lt;/a&gt; me
dice que es algo que vale la pena probar y que está súper feliz programando
en su &lt;em&gt;MacBook&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Simplemente lo estoy considerando, necesito leer más al respecto, quizás jugar
un par de días con una a ver qué decido hacer.&lt;/p&gt;
&lt;p&gt;Mientras... les dejo un video con los 66 comerciales de &lt;em&gt;Mac vs PC&lt;/em&gt;.&lt;/p&gt;
&lt;div class="youtube" align="center"&gt;&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/0eEG5LVXdKo" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;</summary><category term="mac"></category><category term="tecnología"></category><category term="laptops"></category></entry><entry><title>En mi watchlist</title><link href="http://iferminmontilla.com/en-mi-watchlist.html" rel="alternate"></link><updated>2014-09-30T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-09-30:en-mi-watchlist.html</id><summary type="html">&lt;p&gt;Bueno, ya dije que estoy &lt;strong&gt;solo&lt;/strong&gt; en otro país, pero
no dije a dónde me fui, emigré a los Emiratos Árabes
Unidos, estoy viviendo en Dubai y llevo ya casi cinco
meses por estos lados.&lt;/p&gt;
&lt;p&gt;Al principio salía, hay muchos bares, pero ya me fastidié
de eso, se gasta mucha plata y al final no te deja nada
en la cabeza más que el ratón[1] al día siguiente, desde
el mes pasado decidí que voy a empezar a ver películas y
series, escuchar música nueva y a retomar el hábito de la
lectura en mis ratos libres, como ya estoy trabajando
en proyectos personales, me viene bien distraerme de vez
en cuando.&lt;/p&gt;
&lt;p&gt;La cosa es que acá casi todos los canales están en árabe o, cuando no,
doblados el hindi y subtitulados en árabe, así que es imposible
entender algo, cuando estaba en el hotel en el que me puso la
compañía cuando llegué, tuve suerte de vez en cuando con algunas
películas que conseguía en inglés, pero no era lo común, en general
acá veo poco o nada de TV, así que opté por reconciliarme con
mi viejo amigo &lt;a class="reference external" href="http://frostwire.com"&gt;FrostWire&lt;/a&gt; desarrollado por el pana &lt;a class="reference external" href="http://gubatron.com"&gt;Gubatrón&lt;/a&gt;
(AKA, Ángel León) para descargar películas, series y música
para entretenerme, soy de los que descarga un montón y luego,
si me gusta, la compro original en línea o en alguna tienda,
hay películas, series y álbumes que vale la pena tener originales
y es una manera de retribuirle al artista por un buen rato disfrutando
de su arte.&lt;/p&gt;
&lt;p&gt;Como buen &lt;em&gt;geek&lt;/em&gt;, necesito siempre alguna herramienta que me ayude
a monitorear las cosas que hago, antes de mudarme, estaba trabajando
en un programa para organizar mi colección de discos (tengo bastantes
en casa, y por casa me refiero a Caracas), para este caso, ¿qué mejor
herramienta que &lt;a class="reference external" href="http://imdb.com"&gt;IMDB&lt;/a&gt;?, me registré y procedí a ver las películas con
mejor puntaje y a agregarlas a mi &lt;em&gt;watchlist&lt;/em&gt;, igual algunas series, acá
va mi conteo:&lt;/p&gt;
&lt;div class="section" id="peliculas"&gt;
&lt;h2&gt;Películas&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0144084/"&gt;American Psycho (2000)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0054215/"&gt;Psycho (1960)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0081505/"&gt;The Shining (1980)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0110912/"&gt;Pulp Fiction (1994)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0080455/"&gt;The Blues Brothers (1980)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0111161/"&gt;The Shawshank Redemption (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0068646/"&gt;The Godfather (1972)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0071562/"&gt;The Godfather: Part II (1974)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0099674/"&gt;The Godfather: Part III (1990)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0060196/"&gt;The Good, the Bad and the Ugly (1966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0060196/"&gt;The Good, the Bad and the Ugly (1966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0050083/"&gt;12 Angry Men (1957)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0109830/"&gt;Forrest Gump (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0073486/"&gt;One Flew Over the Cuckoo's Nest (1975)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0099685/"&gt;Goodfellas (1990)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0133093/"&gt;The Matrix (1999)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0047478/"&gt;Seven Samurai (1954)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0317248/"&gt;City of God (2002)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0114369/"&gt;Se7en (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0114814/"&gt;The Usual Suspects (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0102926/"&gt;The Silence of the Lambs (1991)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0038650/"&gt;It's a Wonderful Life (1946)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0064116/"&gt;Once Upon a Time in the West (1968)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0110413/"&gt;Léon: The Professional (1994)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0082971/"&gt;The Raiders of the Lost Ark (1981)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0034583/"&gt;Casablanca (1942)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0118799/"&gt;Life Is Beautiful (1997)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hay algunas que ya he visto pero hace mucho tiempo y no recuerdo,
por ejemplo, Indiana Jones, La Vida es Bella y The Matrix, es justo
volverlas a ver.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;American Psycho (7/10):&lt;/strong&gt; me gustó, pero no me pareció excelente, tengo que leer
el libro a ver que tal, al final no se si el pana estaba soñando o si de verdad
mató a ese gentío, para mi, estaba soñando y todo lo imaginaba, todos siempre
imaginamos cosas de ese estilo... ¿o soy sólo yo? ¿huh? mejor no sigo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Psycho (10/10):&lt;/strong&gt; de verdad me pareció excelente, y más después de ver &lt;em&gt;Bates Motel&lt;/em&gt;
simplemente brillante, me mantuvo a la expectativa durante una hora y algo
que es lo que dura, es una película vieja (la vi en blanco y negro), pero
es realmente buena, Hitchcock no me ha dejado mal, esta es la cuarta película
de él que veo y las 4 han sido geniales. Las otras tres fueron: &lt;em&gt;The man who knew
too much&lt;/em&gt;, &lt;em&gt;I confess&lt;/em&gt; y &lt;em&gt;The 39 steps&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Pulp Fiction (8/10):&lt;/strong&gt; ¿qué puedo decir?, Quentin Tarantino es de mis favoritos, siendo
sincero, fue todo lo que esperaba, me gustan mucho las películas que empiezan con
una serie de historias que al inicio no tienen sentido, pero que al final entiendes
qué pasó y cómo todas se van entrelazando, sin embargo, creo que tiene demasiadas
escenas de relleno.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="series"&gt;
&lt;h2&gt;Series:&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2188671/"&gt;Bates Motel (2013)&lt;/a&gt; ./&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2741602/"&gt;The Blacklist (2013)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0060028/"&gt;Star Trek (1966)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0092455/"&gt;Star Trek The Next Generation (1987)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0244365/"&gt;Star Trek Enterprise (2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt0112178/"&gt;Star Trek Voyager (1995)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt2732442/"&gt;Star Trek Continues (2013)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.imdb.com/title/tt1582457/"&gt;The Borgias (2011)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;De acá he visto casi toda &lt;em&gt;Star Trek&lt;/em&gt; original o &lt;em&gt;TOS&lt;/em&gt; como
la llaman los &lt;em&gt;Trekers&lt;/em&gt;, pero la tengo algo abandonada. Las
últimas series que vi y me gustaron fueron &lt;em&gt;Breaking Bad&lt;/em&gt; que
me mantuvo enviciado durante todo Diciembre de 2013 y &lt;em&gt;House
of Cards&lt;/em&gt; que las dos temporadas las vi como en dos o tres
semanas, luego de eso no había vuelto a ver series.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Bates Motel (9/10):&lt;/strong&gt; al principio no parece tan buena, pero como al 3er
o 4to episodio te atrapa (como &lt;em&gt;House of Cards&lt;/em&gt;), es un poco como &lt;em&gt;Breaking Bad&lt;/em&gt;, no es que las
esté poniendo al mismo nivel, pero el personaje principal, &lt;em&gt;Norman Bates&lt;/em&gt;,
parece ser una buena persona, tranquilo, no daña ni a una mosca (como &lt;em&gt;Walter
White&lt;/em&gt;, la diferencia es que cuando &lt;em&gt;Normal&lt;/em&gt; hace algo malo, pareciera no estar
consciente de sus acciones, aunque puede llegar a recordar algunas cosas, si ya
viste &lt;em&gt;Psycho&lt;/em&gt;, muchas cosas tendrán sentido, sino, ve primero &lt;em&gt;Bates Motel&lt;/em&gt; que
cuenta toda la historia previa a la película.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No se cuál veré ahora, seguiré agregando series y películas al &lt;em&gt;Watchlist&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="libros"&gt;
&lt;h2&gt;Libros:&lt;/h2&gt;
&lt;p&gt;La última novela que leí fue Drácula, de Bram Stoker, es el primer
y último libro de vampiros que creo que leeré en mi vida, no porque
no me haya gustado, sino porque de verdad dudo mucho que haya alguno
mejor, es brutal, te mantiene en suspenso y es tan descriptivo con las
escenas que asusta en algunos momentos.&lt;/p&gt;
&lt;p&gt;Actualmente estoy leyendo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Effective Programming, more than just writing code - Jeff Atwood&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Está bastante bien, es una recopilación de artículos de su &lt;a class="reference external" href="http://codinghorror.com"&gt;blog&lt;/a&gt; y toca
varios temas, desde programación y algoritmos, pasando por gestión de equipos
y trabajo remoto y hasta algo de psicología del programador. Algunos son
injustificadamente largos, otros son largos pero interesantes y la mayoría con
cortos e interesantes o divertidos, dependiendo del tema.&lt;/p&gt;
&lt;p&gt;Aún no tengo una lista de libros por leer pero apenas la tenga, la colocaré
por acá. Se aceptan recomendaciones en los comentarios de este post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="musica"&gt;
&lt;h2&gt;Música:&lt;/h2&gt;
&lt;p&gt;Lo último que he estado escuchando y, descubrí que me gusta, es bachata y merengue,
pero no cualquiera, he estado pegado con &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Juan_Luis_Guerra"&gt;Juan Luis Guerra&lt;/a&gt;, me parece que es un
genio, la manera como escribe, las composiciones, los arreglos (sobre todo los bajos
y los metales), todo tiene sentido y es arrechísimo[2], claro, tiene que serlo, se graduó
en &lt;a class="reference external" href="http://www.berklee.edu/"&gt;Berklee&lt;/a&gt;. Debe ser que como estoy lejos de mi país, toda la sangre latina se me subió
a la cabeza, he estado escuchando mucho &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Rub%C3%A9n_Blades"&gt;Rubén Blades&lt;/a&gt;, &lt;a class="reference external" href="http://es.wikipedia.org/wiki/H%C3%A9ctor_Lavoe"&gt;Héctor Lavoe&lt;/a&gt; y &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Willie_Col%C3%B3n"&gt;Willie Colón&lt;/a&gt;.
A mi me parece algo normal, porque me recuerda a casa en cierta manera, pero acá parece
ser algo súper exótico, lo cual me parece cool.&lt;/p&gt;
&lt;p&gt;He estado escuchando también mucho &lt;em&gt;Jazz&lt;/em&gt;, sobre todo &lt;em&gt;Vital Information&lt;/em&gt; y &lt;em&gt;John
Scotfield&lt;/em&gt;, y un poco a &lt;em&gt;Alan Holdsworth&lt;/em&gt;, también se aceptan recomendaciones en comentarios
a este post. Quiero escuchar cosas diferentes, algo de &lt;em&gt;Ska&lt;/em&gt;, o fusiones raras, llevo mucho
tiempo escuchando &lt;em&gt;Blues&lt;/em&gt; y rock de los 60 y 70.&lt;/p&gt;
&lt;p&gt;Bueno, además de trabajo, ando en esto. jeje, nos leemos luego.&lt;/p&gt;
&lt;p&gt;[1] Venezolanismo para &amp;quot;resaca&amp;quot;.&lt;/p&gt;
&lt;p&gt;[2] Venezolanismo para algo que es extremadamente bueno. También se usa para indicar molestia.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="películas"></category><category term="emigrado"></category><category term="cine"></category><category term="series"></category><category term="tv"></category></entry><entry><title>Reapareciendo luego de un año</title><link href="http://iferminmontilla.com/reapareciendo-luego-de-un-ano.html" rel="alternate"></link><updated>2014-09-28T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-09-28:reapareciendo-luego-de-un-ano.html</id><summary type="html">&lt;p&gt;Wow, la semana pasado publiqué la segunda parte del artículo sobre
cómo desarrollar aplicaciones web sobre &lt;em&gt;Heroku&lt;/em&gt; y me di cuenta de
que el primero lo publiqué hace ya poco más de un año, además
esa fue la última vez que escribí en el blog.&lt;/p&gt;
&lt;p&gt;Creo que es justo que les cuente un poco lo que ha pasado en un año
de ausencia por estos lados.&lt;/p&gt;
&lt;p&gt;Quienes me conocen, ya saben que emigré, las razones son varias y bien
sabidas por todos, el hecho de si quería emigrar o no, pues, la verdad
&lt;strong&gt;no&lt;/strong&gt;, nadie quiere estar lejos de casa y de sus seres queridos, cuando
mucho uno espera estar al menos en la misma ciudad o en un estado vecino,
nadie quiere irse a otro continente, solo, a hablar otro idioma y a
tener choques con otra cultura, a tener que adaptarse y empezar de cero,
hacer nuevos amigos, o tratar, pues seguramente en su mayoría serán inmigrantes
también y llegado el momento regresarán a casa o se irán a otro país.&lt;/p&gt;
&lt;p&gt;Bueno, a pesar de todo estoy bastante contento, me siento tranquilo, me
encanta mi nuevo trabajo, la tecnología hoy día acorta las distancias
y trato de hablar con mi familia lo más que puedo vía whatsapp y, aunque
no es lo mismo, pues ayuda a mantener el contacto, trato también de llamar
de vez en cuando para que no se olviden de mi y tampoco sientan que uno
se olvida de ellos.&lt;/p&gt;
&lt;p&gt;En lo personal, estoy bastante ansioso por que llegue diciembre, pues
voy de visita a Venezuela, veré a mi familia y me casaré con mi prometida
y novia de hace años ya, bueno, boda eclesiástica pues el civil ya fue.&lt;/p&gt;
&lt;p&gt;En lo profesional, estoy súper contento también, siento que aprendo bastante
en mi nuevo trabajo, estoy rodeado de programadores excelentes y gente que
es realmente buena en lo que hace, sea marketing, finanzas o ingeniería de
software, aún no he conocido al primer compañero de trabajo que no sea un duro
en su área.&lt;/p&gt;
&lt;p&gt;En mi lado geek, estoy feliz, al fin tengo tiempo para hacer contribuciones a
proyectos open source, empezando por &lt;a class="reference external" href="http://turpial.org.ve/"&gt;libturpial&lt;/a&gt; que cloné el repo hace como año
y medio y hace poco fue que empecé realmente a ojearlo y hacer las primeras contribuciones
para familiarizarme con el código, estoy trabajando en un par de proyectos personales,
uno que podría ser material de startup y otro simplemente para probar otros frameworks y
experimentar con algoritmos y, además, no tiene precio la sensación de freelancear
porque quieres y el proyecto te parece interesante y no porque estás urgido por dinero,
realmente, ahora siento que trabajar es un placer más que una obligación,
es raro cuando debo quedarme horas extra para terminar, sólo la última semana (en
ya casi 5 meses) por una campaña para ganar un mercado emergente que era
casi de vida o muerte.&lt;/p&gt;
&lt;p&gt;Esta experiencia me ha hecho abrir un poco los ojos y darme cuenta de lo mucho
que me falta por aprender en muchos aspectos, pero también me ha servido para
crecer en muchos otros y, sobre todo, aprender a cocinar mi propia comida,
sigo vivo, lo que quiere decir que no me ha salido tan mal.&lt;/p&gt;
</summary><category term="personal"></category><category term="emigrar"></category><category term="actitud"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 2)</title><link href="http://iferminmontilla.com/heroku-django-sin-morir-en-el-intento-parte-2.html" rel="alternate"></link><updated>2014-09-20T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2014-09-20:heroku-django-sin-morir-en-el-intento-parte-2.html</id><summary type="html">&lt;p&gt;En el artículo anterior, hablamos de IaaS y de PaaS y de cómo se diferencian
concluimos que &lt;em&gt;Heroku&lt;/em&gt; es PaaS, además, expusimos algunas de las limitaciones
que nos impone la plataforma para desplegar nuestras aplicaciones y cómo trabajar
alrededor de ellas para hacer funcionar todo.&lt;/p&gt;
&lt;p&gt;Muchas veces, quizás por inocentes o inexpertos, tendemos a hacer todo en la vista
(y hablo de vistas de &lt;em&gt;django&lt;/em&gt;), por ejemplo, necesitamos enviar algo al servidor
donde hosteamos las imágenes, simplemente hacemos ejecutamos ese request en la vista,
necesitamos enviar un correo electrónico de confirmación, nada, lo enviamos en la vista,
necesitamos procesar una imagen para reducir la calidad y que ocupe menos espacio en
el servidor donde la vamos a hostear, dale... en la vista.&lt;/p&gt;
&lt;p&gt;Bueno, exagero un poco, quizás no en la vista, si somos estrictos con nuestro código,
escribiremos una función que suba la foto al servidor, otra que envíe el correo y otra
que procese la imagen para reducir el tamaño y llamaremos todo desde la vista. Este
enfoque sigue estando errado y, a continuación, voy a explicar por qué.&lt;/p&gt;
&lt;p&gt;Todos venimos de hacer proyectos en la universidad, algunos más difíciles que otros,
en algún proyecto, seguramente nos tocó realizar llamadas a alguna &lt;em&gt;API REST&lt;/em&gt;, o
enviar algún archivo a un servidor remoto, en todos los casos, estoy seguro de que
todos hicimos lo mismo, una función que se ejecuta cuando enviamos el formulario y
hace todo en línea: llamadas remotas, envío de archivos, envío de correos, etc.&lt;/p&gt;
&lt;p&gt;No es incorrecto, funciona, pero ¿cuánto tardó la página siguiente en cargar?, la
pregunta más adecuada sería ¿cuánto tiempo tardó la función en redirigirme a la
siguiente página?, calculemos unos 3 a 5 segundos por llamada remota y unos 2 a 3
segundos, total, alrededor de 15 segundos en redirigir, a eso hay que sumarle
el tiempo de carga de la página siguiente.&lt;/p&gt;
&lt;p&gt;Particularmente, mi primer trabajo fue en el mundo de los ERP, es una historia
totalmente distinta, si una persona manda a generar un reporte que tarda 4 horas
en ejecutarse y para ello el programa se bloquea y no le permite hacer más nada,
simplemente no tiene otra opción más que esperar las 4 horas sentado en su escritorio,
ir a tomarse un café, bajar a fumar un cigarrillo hasta que esté listo.&lt;/p&gt;
&lt;p&gt;Cuando programas para web, debes tomar en cuenta que debes ser gentil con el usuario
y no hacerlo esperar, tu página debe responder rápido, sino, hay muchas otras páginas
que hacen lo mismo y el usuario simplemente tiene que regresar a la pestaña del navegador
donde está su búsqueda en google y seleccionar otro resultado. Una buena &lt;em&gt;rule of thumb&lt;/em&gt;
a la hora de ejecutar operaciones pesadas, como todas las que incluyan llamadas remotas
o procesamiento de imágenes, es realizarlas de manera asíncrona, para ello debemos
valernos de &lt;em&gt;algo&lt;/em&gt; que nos permita retrasar la ejecución de una tarea.&lt;/p&gt;
&lt;p&gt;Por un lado, necesitaremos algo que nos sirga para mantener una cola de tareas pendientes
por ejecutar, por otro lado necesitamos algo que vaya leyendo esas tareas y ejecutándolas,
la manera más simple de hacerlo en &lt;em&gt;Python&lt;/em&gt; es con una librería llamada &lt;em&gt;python-rq&lt;/em&gt; y
usando &lt;em&gt;Redis&lt;/em&gt; como backend de tareas, es muy fácil de configurar y súper sencilla de usar
para la mayoría de proyectos pequeños a medianos funcionará bastante bien. Para proyectos
a mayor escala, quizás lo mejor sea utilizar &lt;em&gt;celery&lt;/em&gt; con &lt;em&gt;RabbitMQ&lt;/em&gt; como broker de mensajes.
Hay muchas herramientas que podemos usar como backend de mensajes: Redis, RabbitMQ, ZeroMQ,
Kafka, HornetQ... es cuestión de evaluarlas y ver cuál se ajusta más al proyecto en cuestión
en el cual estamos trabajando.&lt;/p&gt;
&lt;p&gt;Como todo en &lt;em&gt;django&lt;/em&gt;, tenemos un paquete llamado &lt;em&gt;django-rq&lt;/em&gt; que nos ayuda a organizar
el código de una mejor manera y nos hace la vida más fácil, empecemos por descargar
las librerías y paquetes necesarias:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo aptitude install redis-server
pip install django-rq django
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si estamos en &lt;em&gt;Heroku&lt;/em&gt;, no es necesario instalar &lt;em&gt;redis&lt;/em&gt;, simplemente agregar los nuevos
paquetes Python al &lt;em&gt;requirements.txt&lt;/em&gt; para que sean instalados al hacer &lt;em&gt;push&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para poder agregar trabajos a las colas, debemos declararlas para que &lt;em&gt;django-rq&lt;/em&gt; las
reconozca, simplemente agregamos una nueva variable en nuestro &lt;em&gt;settings.py&lt;/em&gt;. A continuación
un ejemplo de configuración para &lt;em&gt;django_rq&lt;/em&gt;, la cola &lt;em&gt;default&lt;/em&gt; es un ejemplo para desarrollo,
la cola &lt;em&gt;high&lt;/em&gt; es un ejemplo de configuración para Heroku si estamos usando el &lt;em&gt;add on&lt;/em&gt; de
&lt;em&gt;Redis To Go&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;RQ_QUEUES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;HOST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;REDISTOGO_URL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;PORT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6379&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;DB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Ahora, las funciones sumamente pesadas pueden ser encoladas en cualquiera de las dos
colas que hemos declarado en &lt;em&gt;settings.py&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lo que haremos en nuestra vista es, en vez de llamar a la función directamente, le diremos
a &lt;em&gt;django_rq&lt;/em&gt; que agregue el trabajo en la cola que consideremos conveniente.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
    &lt;span class="n"&gt;queue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;django_rq&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_queue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;# si no indicamos una cola, retorna la cola &amp;#39;default&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enqueue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;También decorar las funciones que queremos encolar, esto hace que el código se vea un poco más
limpio, pero el efecto es el mismo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django_rq&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;job&lt;/span&gt;

&lt;span class="nd"&gt;@job&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;high&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumentos&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Y luego, en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
    &lt;span class="n"&gt;funcion_sumamente_pesada&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argumento&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lo que rq hace es tomar el &lt;em&gt;objeto función&lt;/em&gt;, serializarlo usando &lt;em&gt;pickle&lt;/em&gt; y guardar ese objeto
serializado en redis. Ahora que tenemos el trabajo encolado, necesitamos &lt;em&gt;algo&lt;/em&gt; para leerlo de
redis, des-serializarlo y ejecutarlo.&lt;/p&gt;
&lt;p&gt;RQ, viene con un worker que podemos ejecutar en un &lt;em&gt;dyno&lt;/em&gt; aparte (recuerden agregar la entrada
correspondiente en el &lt;em&gt;Procfile&lt;/em&gt; de Heroku), simplemente corremos el siguiente comando
en el terminal para probar localmente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python manage.py rqworker high default
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En la consola, podemos ver cómo los trabajos se van ejecutando, incluso, si apagamos el worker y
mandamos a encolar algunos trabajos, al ejecutar de nuevo el worker de rq podemos ver como los
va leyendo de redis y los ejecuta.&lt;/p&gt;
&lt;div class="section" id="consideraciones-con-objetos-persistentes-en-base-de-datos"&gt;
&lt;h2&gt;Consideraciones con objetos persistentes en base de datos&lt;/h2&gt;
&lt;p&gt;Bueno, ya sabemos que rq hace un &lt;em&gt;pickle&lt;/em&gt; de la función y sus argumentos y envía esa información
a &lt;em&gt;Redis&lt;/em&gt; para luego ser leído por el worker, hacer el &lt;em&gt;unpickle&lt;/em&gt; y ejecutar el trabajo.&lt;/p&gt;
&lt;p&gt;A menudo, necesitamos hacer &lt;em&gt;delay&lt;/em&gt; de un trabajo que actúa sobre objetos que persisten en la base
de datos, nuestra primera tentación es simplemente pasar los objetos como argumentos al trabajo.&lt;/p&gt;
&lt;p&gt;Ahora, veamos, analicemos qué ocurrirá. Al encolar el trabajo tanto la función como sus argumentos
serán serializados, estos argumentos son objetos que pueden ser modificados. Luego de encolar, supongamos
que modifico uno de los atributos del objeto y lo guardo en la base de datos, luego, al ejecutarse mi trabajo
la función también modifica otro atributo y guarda el objeto en la base de datos.&lt;/p&gt;
&lt;p&gt;Lo que va a ocurrir es que, como la referencia que fue serializada al momento de encolar está desactualizada,
la modificación que se hizo luego de encolar no estará reflejada en el objeto luego de ejecutar el trabajo.&lt;/p&gt;
&lt;div class="section" id="la-solucion"&gt;
&lt;h3&gt;La solución&lt;/h3&gt;
&lt;p&gt;Simplemente no pasar objetos persistentes como argumentos, es mucho mejor simplemente dar los
&lt;em&gt;id&lt;/em&gt; de base de dato al trabajo y que dentro de la función se ejecute un query para traerlos,
de esta manera evitamos conflictos y dolores de cabeza como el antes descrito.&lt;/p&gt;
&lt;p&gt;Espero que esto sea de ayuda, es buena práctica trabajar con colas para trabajos pesados
en cualquier proyecto web, no sólo si estamos corriendo nuestra app en Heroku.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="heroku"></category><category term="herramientas"></category><category term="tecnología"></category><category term="programación"></category></entry><entry><title>Heroku + Django sin morir en el intento (Parte 1)</title><link href="http://iferminmontilla.com/heroku-django-sin-morir-en-el-intento-parte-1.html" rel="alternate"></link><updated>2013-09-23T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-09-23:heroku-django-sin-morir-en-el-intento-parte-1.html</id><summary type="html">&lt;p&gt;Antes, para tener tu sistema web en línea, debías contratar
un servicio de Servidor Dedicado o mínimo un VPS y administrarlo,
si tenías más presupuesto, comprabas un servidor y lo acondicionabas
o alquilabas un rack en algún centro de datos para tenerlo colocado allí.&lt;/p&gt;
&lt;p&gt;Ahora, con el boom de &lt;em&gt;Infraestructura como Servicio&lt;/em&gt; (IaaS) y &lt;em&gt;Plataforma
como Servicio&lt;/em&gt; (PaaS), ya no es necesario tener servidores propios y, dependiendo
del servicio, es decir, si es &lt;em&gt;IaaS&lt;/em&gt; o &lt;em&gt;PaaS&lt;/em&gt;, tampoco debes tener conocimientos de
administración de servidores.&lt;/p&gt;
&lt;div class="section" id="iaas-vs-paas"&gt;
&lt;h2&gt;IAAS vs PAAS&lt;/h2&gt;
&lt;p&gt;En general, un proveedor de &lt;em&gt;IaaS&lt;/em&gt; te da el hardware para que tú lo configures
y ensambles el ambiente en el que va a correr tu aplicación, esto es instalar
todos los paquetes de software necesarios par que el proyecto corra: servidor de
base de datos, servidor web, intérpretes, bibliotecas, storages adicionales y un
largo &lt;em&gt;end of thinking capacity&lt;/em&gt; (etc). La ventaja de un proveedor de este tipo
es que hacen que escalar tu infraestructura de manera horizontal es realmente fácil
y no tienes que construir un centro de datos para albergar tu granja de servidores
ni mucho menos configurar todo lo que eso implica, un ejemplo de servicios de este tipo
es el &lt;em&gt;Elastic Compute Cloud&lt;/em&gt; de &lt;em&gt;Amazon Web Services&lt;/em&gt; (AWS EC-2).&lt;/p&gt;
&lt;p&gt;Por otra parte, un proveedor de &lt;em&gt;PaaS&lt;/em&gt;, hace exactamente lo mismo, pero con un nivel más
de abstracción, te proveen toda la infraestructura y el ambiente para que simplemente
deposites tu código allí y pongas tu aplicación a correr con configuraciones mínimas y sin
ser un experto en administración y configuración de servidores, de hecho, es transparente
para ti toda la nube que hay por detrás. &lt;a class="reference external" href="http://www.heroku.com/"&gt;Heroku&lt;/a&gt; es un proveedor de este tipo de servicio
que además cumple con el &lt;a class="reference external" href="http://12factor.net/"&gt;12 factor app&lt;/a&gt; por lo que además hace que sea súper fácil
ajustar tu código para correr allí y que tome los parámetros de configuración que define
la plataforma sin mucho problema.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ahora-heroku"&gt;
&lt;h2&gt;Ahora, Heroku&lt;/h2&gt;
&lt;p&gt;El modelo de trabajo en &lt;em&gt;Heroku&lt;/em&gt; se basa en add-ons, que básicamente integran tu sistema con
un DBMS, un sistema de alertas en caso de fallos o de monitoreo
para ver el rendimiento, detectar cuellos de botella y tomar correctivos al respecto, todo esto
con unos cuantos clicks (y una tarjeta de crédito), sin configurar absolutamente nada a nivel de
servidores sino todo a nivel de aplicación.&lt;/p&gt;
&lt;p&gt;Todo esto suena como un sueño hecho realidad y, en muchos casos, lo es, pero nada es perfecto y
&lt;em&gt;Heroku&lt;/em&gt;, aunque facilita muchísimas cosas a nivel de despliegue, te complica muchas otras a nivel
de desarrollo, esto puede ser bueno, te obliga a optimizar y a aprender, pero a veces, el esquema de
plugins y addons puede volverse insostenible, sobre todo cuando debes pagar por varios y el presupuesto
es limitado, además, desde el punto de vista de aplicación, &lt;em&gt;Heroku&lt;/em&gt; impone varias limitaciones acerca
de cómo debe comportarse, el tiempo en que debe responder, el tiempo que debe durar el deploy y
cuánto debe pesar.&lt;/p&gt;
&lt;div class="section" id="algunas-limitaciones"&gt;
&lt;h3&gt;Algunas limitaciones&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;El app debe iniciar en 60 segundos o menos:&lt;/em&gt; si este tiempo se excede, el deploy falla.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku duerme dynos cada cierto tiempo:&lt;/em&gt; cada cierto tiempo Heroku reinicia los dynos, esto es un proceso
totalmente aleatorio, por eso se recomienda tener al menos 2, si uno es reiniciado el otro sigue aceptando
requests. Cuando esto ocurre, el proceso recibe un &lt;em&gt;SIGTERM&lt;/em&gt;, al recibir la señal, se tienen 10 segundos de
gracia para terminar lo que se estaba haciendo antes de recibir un &lt;em&gt;SIGKILL&lt;/em&gt; y reiniciar.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app no puede pesar más de 300MB:&lt;/em&gt; de lo contrario, el deploy falla, es recomendable usar el .slugignore
para excluir archivos que sólo se usan para desarrollo y que no hacen falta en producción, lo mismo con las
librerías para testing, no deberían incluirse en el requirements.txt que va a producción.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;El app debe responder a los requests en 30 segundos:&lt;/em&gt; de lo contrario se levanta un error H12 (Worker Timeout)
y la respectiva pantalla de &lt;em&gt;Application Error&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Heroku es stateless:&lt;/em&gt; esto quiere decir que no guarda estado, para conservar estado del app es necesario valerse
de otras herramientas, como una base de datos, memcached, y servicios de almacenamiento externos.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="algunos-de-los-golpes"&gt;
&lt;h3&gt;Algunos de los golpes&lt;/h3&gt;
&lt;p&gt;Con esas limitaciones se puede vivir, pero hay que darle la vuelta para no desesperarse, hay algunas cosas que
capaz son obvias, pero que uno no las ve sino hasta que empieza a trabajar y se consigue con un problema, basta
con volver sobre las limitaciones antes expuestas y encontraremos una respuesta o al menos una posible razón.&lt;/p&gt;
&lt;p&gt;Ahora voy a empezar a listar los problemas que he tenido en &lt;em&gt;RingTu&lt;/em&gt; y cómo los solucioné. Recuerden que
estoy trabajando con &lt;strong&gt;Django&lt;/strong&gt;, por lo que todo lo he resuelto utilizando herramientas para este framework.&lt;/p&gt;
&lt;div class="section" id="no-es-bueno-para-servir-assets"&gt;
&lt;h4&gt;No es bueno para servir assets&lt;/h4&gt;
&lt;p&gt;Cuando digo assets, me refiero a los archivos estáticos que dan forma a la interface web:
css, js, imágenes, gradientes, ¿gifs animados?, tipografías y demás cosas bonitas que hacen los diseñadores
por nosotros.&lt;/p&gt;
&lt;p&gt;Por defecto, nuestro dyno sirve todos estos archivos, además de servir nuestra aplicación, aceptando peticiones
de nuestros clientes, procesándolas y decidiendo qué es lo que va a enviarse de vuelta.&lt;/p&gt;
&lt;p&gt;Servir los archivos estáticos o &lt;em&gt;static assets&lt;/em&gt; resulta en requests adicionales que van a mantener ocupado nuestro
dyno y esto nos cuesta tiempo y, si ya estamos pagando, dinero. Esos requests adicionales se podrían invertir en
responder y procesar solicitudes nuevas y no en entregar archivos estáticos, además, la &lt;strong&gt;buena práctica&lt;/strong&gt; con &lt;em&gt;django&lt;/em&gt;
es delegar la entrega de contenido estático a un &lt;strong&gt;servidor web&lt;/strong&gt; como &lt;em&gt;Apache&lt;/em&gt; o &lt;em&gt;NGinx&lt;/em&gt; y así evitar procesamiento
adicional a nivel de &lt;em&gt;views&lt;/em&gt; (los &lt;em&gt;controladores&lt;/em&gt; de &lt;em&gt;django&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;La solución acá es, simplemente, almacenar los archivos estáticos &lt;em&gt;en otro lado&lt;/em&gt;, puede ser incluso un &lt;em&gt;VPS&lt;/em&gt; con &lt;em&gt;Apache&lt;/em&gt;
o &lt;em&gt;NGinx&lt;/em&gt; instalado, pero hay varios servicios que pueden hacerlo mejor y optimizar la entrega de contenidos como &lt;em&gt;Cloudfile&lt;/em&gt;
de &lt;strong&gt;Rackspace&lt;/strong&gt; y, el que opté por usar, &lt;em&gt;Simple Storage Service&lt;/em&gt; de &lt;strong&gt;Amazon&lt;/strong&gt;. Si ya tus assets no cambian mucho, lo mejor
es servirlos a través de una &lt;em&gt;CDN&lt;/em&gt; (Content Delivery Nerwork o Red de Entrega de Contenidos), como &lt;em&gt;Cloudfront&lt;/em&gt;, también de
&lt;strong&gt;Amazon&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ahora, &lt;strong&gt;¿Cómo se resuelve esto en django?&lt;/strong&gt;, bueno, hay varias librerías que te permiten sincronizar los archivos estáticos
con un servicio de almacenamiento remoto, la que decidí usar fue &lt;a class="reference external" href="https://github.com/jamstooks/django-s3-folder-storage"&gt;django-s3-folder-storage&lt;/a&gt;, una pequeña librería que se vale
de otra más compleja (y completa, soporta múltiples servicios) llamada &lt;a class="reference external" href="https://github.com/iserko/django-storages"&gt;django-storages&lt;/a&gt; para organizar tu contenido en directorios
dentro de un &lt;em&gt;bucket&lt;/em&gt; de &lt;em&gt;S3&lt;/em&gt;, es necesario agregar parámetros de configuración en nuestro &lt;em&gt;settings.py&lt;/em&gt;, sería algo como esto:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;AWS_QUERYSTRING_AUTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;AWS_ACCESS_KEY_ID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;AWS_SECRET_ACCESS_KEY&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;AWS_STORAGE_BUCKET_NAME&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Expires 20 years in the future at 8PM GMT&lt;/span&gt;
&lt;span class="n"&gt;tenyrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;365&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;AWS_HEADERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;Expires&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tenyrs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%a, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %b %Y 20:00:00 GMT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;s3_folder_storage.s3.StaticStorage&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.s3.amazonaws.com/static/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;
&lt;span class="n"&gt;STATIC_S3_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;static/&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;El parámetro de configuración AWS_QUERYSTRING_AUTH colocado en &lt;em&gt;False&lt;/em&gt; es para que &lt;em&gt;S3&lt;/em&gt; no nos genere urls firmadas
para los assets sino que nos permita acceso público permanente. Si lo dejamos en &lt;em&gt;True&lt;/em&gt;, su valor por defecto, nos va
a generar un url válido por 5min y, como son archivos estáticos, esta url no se va a refrescar nunca, así que nuestra página
se verá &lt;strong&gt;bien&lt;/strong&gt;, con todos sus estilos y efectos sólo mientras duren las urls vigentes.&lt;/p&gt;
&lt;p&gt;Los demás son simplemente parámetros de configuración de S3, deben recordar añadir las variables de configuración en &lt;em&gt;Heroku&lt;/em&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;heroku config:add &lt;span class="nv"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;EL_KEY_ID_DE_AWS_S3
heroku config:add &lt;span class="nv"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;EL_SECRET_KEY_ID_DE_AWS_S3
heroku config:add &lt;span class="nv"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;EL_NOMBRE_DEL_BUCKET
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recuerden también colocar &lt;em&gt;s3_folder_storage&lt;/em&gt; entre los &lt;em&gt;INSTALLED_APPS&lt;/em&gt; del proyecto y activar la opción de &lt;em&gt;Heroku&lt;/em&gt; para que
reconozca las variables de configuración en tiempo de compilación, de otra manera, el deploy fallará.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;heroku labs:enable user-env-compile
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con esto, ya deberíamos poder sincronizar los &lt;em&gt;assets&lt;/em&gt; a &lt;em&gt;S3&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;heroku run python manage.py collectstatic
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Dependiendo de qué tantos archivos estáticos tengamos, va a tardar más o menos, va a enviar todo lo que esté
en nuestro &lt;em&gt;STATIC_ROOT&lt;/em&gt; al &lt;em&gt;bucket S3&lt;/em&gt; que configuramos anteriormente.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="no-puedes-utilizar-el-sistema-de-archivos"&gt;
&lt;h4&gt;No puedes utilizar el sistema de archivos&lt;/h4&gt;
&lt;p&gt;Había dicho al principio que &lt;em&gt;Heroku&lt;/em&gt; es &lt;em&gt;stateless&lt;/em&gt;, es decir, no conserva el estado de tu aplicación. Entonces
ellos implementaron algo llamado &lt;em&gt;Ephemeral Filesystem&lt;/em&gt;, es decir, un sistema de archivos &lt;em&gt;efímero&lt;/em&gt;, que se reinicia
cada vez que los dynos son reiniciados por cualquier razón, sea un deploy o sea porque heroku los reinició.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;¿Qué significa esto?&lt;/strong&gt;, pues que &lt;strong&gt;no puedes escribir a disco&lt;/strong&gt; como lo harías en cualquier servidor &lt;em&gt;normal&lt;/em&gt;,
si lo haces, debes saber que cuando tu app sea reiniciada, perderás todos los archivos, tiene un poco de sentido,
cuando usas más de un dyno y escribes a disco, cuando el usuario quiera recuperar lo que subió, no tenemos manera de
saber cuál dyno atendió aquella solicitud y no sabremos dónde buscar, así que, de una manera u otra, lo mejor es almacenar
los archivos de nuestros usuarios en un lugar seguro y de donde podamos recuperarlos luego sin problemas.&lt;/p&gt;
&lt;p&gt;Nuevamente podemos utilizar &lt;em&gt;AWS-S3&lt;/em&gt; para ello, con algunas configuraciones adicionales, podemos hacer que por defecto
nuestros &lt;em&gt;media files&lt;/em&gt;, para usar la terminología de &lt;em&gt;django&lt;/em&gt;, sean almacenados en nuestro &lt;em&gt;bucket&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Es necesario agregar las siguientes líneas a nuestro &lt;em&gt;settings.py&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_FILE_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;s3_folder_storage.s3.DefaultStorage&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_S3_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;media/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.s3.amazonaws.com/media/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con esto, todo lo que suban nuestros usuarios irá a la carpeta &lt;em&gt;media/&lt;/em&gt; de nuestro bucket.&lt;/p&gt;
&lt;p&gt;Hay que tener en cuenta que todo se está subiendo al mismo &lt;em&gt;bucket&lt;/em&gt; y la política que se definió en principio para
poder almacenar los archivos estáticos da acceso público a todo el contenido por defecto, por lo que hay que tomar
previsiones &lt;em&gt;de alguna manera&lt;/em&gt; para que no todo el mundo pueda ver los archivos de nuestros usuarios de manera directa.&lt;/p&gt;
&lt;p&gt;Acá expondré la estrategia que uso:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Sobre-escritura del método save():&lt;/strong&gt; en los modelos que tengan un &lt;em&gt;ImageField&lt;/em&gt; o un &lt;em&gt;FileField&lt;/em&gt;, la idea de esto es
sobreescribir la política de control de acceso particular para el archivo una ves que fue subido. Para esto utilizaremos
una librería llamada &lt;a class="reference external" href="https://github.com/boto/boto"&gt;boto&lt;/a&gt; que es un wrapper en Python para el API de &lt;em&gt;AWS&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FileField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upload_to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;user_videos/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VoiceMessage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;connection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;bucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULTS3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_acl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con esto tenemos el archivo privado en &lt;em&gt;S3&lt;/em&gt;, ahora, necesitamos una manera de darle acceso al usuario que es propietario
del archivo.&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;strong&gt;Escribiendo una vista para acceder al archivo privado:&lt;/strong&gt; la mejor manera que conseguí para darle acceso al usuario a su
archivo fue escribiendo una vista de &lt;em&gt;django&lt;/em&gt; que revisara que el usuario que origina el request es realmente el propietario
del objeto y redirigirlo a la ubicación de su archivo en &lt;em&gt;S3&lt;/em&gt;. Escribiremos un pequeño helper, además, para encapsular la
generación del URL, como es un archivo privado, el url debe ir firmado y sólo será válido por el tiempo que nosotros indiquemos,
en este caso, lo haremos por una hora.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En el helper colocamos lo siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;boto.s3.connection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;

    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;S3Connection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_secure&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AWS_STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;force_http&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;y en la vista:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login_required&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;

&lt;span class="nd"&gt;@login_required&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_user_video&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.helpers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;
        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
        &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;video_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;filepath&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settinga&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT_S3_PATH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_s3_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filepath&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ttl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponseRedirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;403&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con esto generamos una url firmada y válida por 3600 segundos (una hora) si el usuario que origina la solicitud
es el propietario del objeto que contiene el archivo (video) que se desea obtener, caso contrario retornamos
403 ya que la persona no tiene permisos para ver ese contenido.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="heroku"></category><category term="herramientas"></category><category term="tecnología"></category><category term="programación"></category></entry><entry><title>Ahora soy lead developer y no tengo mucha idea: anécdotas y reflexión</title><link href="http://iferminmontilla.com/ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html" rel="alternate"></link><updated>2013-09-21T01:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-09-21:ahora-soy-lead-developer-y-no-tengo-mucha-idea-anecdotas-y-reflexion.html</id><summary type="html">&lt;p&gt;Primero que nada, me gustaría pedir disculpas (o permiso xD) si
cometo algún error ortográfico en este artículo, se me olvidó pasar
el &lt;a class="reference external" href="http://aspell.net/"&gt;aspell&lt;/a&gt;, el hecho es que, para ponerlos un poco en contexto, vengo
de un rato un poco etílico.&lt;/p&gt;
&lt;p&gt;Bueno, para empezar, quienes me conocen y están pendientes de mi desarrollo
como profesional, saben que ahora estoy en un puesto de &lt;em&gt;líder de proyecto&lt;/em&gt;
en un startup de telefonía en la nube. Además, quien me conozca
sabe que los temas &lt;em&gt;gerenciales&lt;/em&gt; siempre me han dado ladilla, como decimos
acá en Venezuela.&lt;/p&gt;
&lt;p&gt;El tema es que siempre, desde que tengo personal a mi cargo, me he esforzado
en hacerles entender que &lt;strong&gt;no&lt;/strong&gt; trabajan para mi, &lt;strong&gt;sino conmigo&lt;/strong&gt;, es decir,
&lt;strong&gt;no soy&lt;/strong&gt; su jefe, sino alguien que los debe ayudar a cumplir con sus obligaciones
a tiempo y a quien le pueden preguntar en caso de alguna duda, en fin, alguien
quien puede enseñarles, una especia de mentor o profesor o como quieran verlo.
Para mi, la definición de un líder, debe ser alguien a quien respetas profesional
y personalmente, alguien de quien consideras que puedes aprender y a quien no le molesta
aprender de ti. Eso, para mi, es un líder.&lt;/p&gt;
&lt;p&gt;Luego, está otro tema, uno que se remonta a cuando estaba estudiando en la UCAB
y discutía temas diversos con mi pana &lt;a class="reference external" href="http://gerardobarcia.com/blog/"&gt;Gerardo Barcia&lt;/a&gt;, gran fanático de los temas
que tienen que ver con Gerencia de Proyectos. Uno de los temas que siempre causó controversia
fue el del papel del Ingeniero en un proyecto: gerente o ejecutor.&lt;/p&gt;
&lt;p&gt;Siempre abogué por el papel del Ingeniero como &lt;em&gt;ejecutor&lt;/em&gt; de un proyecto, es decir
si estudias &lt;em&gt;supuestamente&lt;/em&gt; 5 años en una Universidad y te enseñan a programar y
diversos conceptos de sistemas operativos y distribuidos, es para que los apliques
en los sistemas que vas a implementar o en los proyectos que vayas a desarrollar, además,
en el mundo de la informática se aplica mucho lo que yo llamo la &lt;em&gt;cultura hacker&lt;/em&gt;, que es
el hecho de &lt;em&gt;respetar&lt;/em&gt; a alguien que sabe más que tú y que de verdad puedes comprobar que
es así, es decir, alguien quien sabe de qué habla y de quien puedes aprender o, quizás no,
quizás es simplemente alguien que está a tu mismo nivel pero que tiene las mismas ganas
que tu de aprender y tiene la misma &lt;em&gt;curiosidad científica&lt;/em&gt; por descubrir cosas y, quizás
&lt;em&gt;reinventar la rueda&lt;/em&gt; sólo para ver cómo funciona.&lt;/p&gt;
&lt;p&gt;Por otra parte, mi pana Gerardo siempre pensó que el rol del Ingeniero en un proyecto
es el del Gerente. Decirle a los técnicos qué hacer y cómo hacerlo, estimar el tiempo
que deberían tardarse, supervisarlos, ver que lo que hacen cumple y aceptarlo o rechazarlo
y dar directrices de cómo y por dónde debe encaminarse el proyecto, es decir, el rol del
gerente de proyectos o, quizás, consultor.&lt;/p&gt;
&lt;div class="section" id="quien-tenia-la-razon"&gt;
&lt;h2&gt;¿Quién tenía la razón?&lt;/h2&gt;
&lt;p&gt;Pues creo que ambos, un Ingeniero en un proyecto debe cumplir ambos roles, sin embargo
para poder liderar un equipo, &lt;strong&gt;siempre&lt;/strong&gt; he dicho que debes tener experiencia suficiente
como para poder decirle a alguien lo que debe hacer con total confianza, es decir, poder
tener la habilidad, el conocimiento y la experiencia para conocer y prever imprevistos
dentro del proceso y advertir a la persona acerca de &lt;em&gt;con qué se podría encontrar&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;El punto es que a mi pana Gerardo, le ha tocado programar, y programar &lt;strong&gt;duro&lt;/strong&gt;, al igual que
a mi. Desarrollar sistemas en los que &lt;em&gt;alguien&lt;/em&gt; nos dice qué hacer y cuáles son las necesidades
y debemos escribir software que las cubra o que las automatice de la mejor manera posible y
sin poder tomar muchas decisiones acerca del &lt;em&gt;cómo&lt;/em&gt; implementar las cosas.&lt;/p&gt;
&lt;p&gt;Ahora a mi, aunque considero, &lt;em&gt;quizás&lt;/em&gt;, no tener la experiencia necesaria, me toca liderar un equipo
de programadores. Mi equipo me respeta profesionalmente y nos llevamos &lt;strong&gt;muy bien&lt;/strong&gt; personalmente,
de hecho, me parece que mi equipo está conformado por las mejores personas que alguien podría
querer, todos le ponen muchísimas ganas e incluso han resuelto problemas en los que no tenía ni idea
ni tiempo de revisar a fondo cómo solventarlos, obviamente, todos estamos aprendiendo, ellos porque aún
están estudiando en la Universidad y el trabajo les sirve de experiencia y yo porque es mi primer trabajo
al frente de un equipo.&lt;/p&gt;
&lt;p&gt;Como &lt;em&gt;persona a cargo&lt;/em&gt; de un equipo, he metido la pata y &lt;strong&gt;mucho&lt;/strong&gt;, desde estimando tareas que toman más
de lo que pensé, porque en realidad no eran una tarea sino &lt;strong&gt;muchas&lt;/strong&gt; que eran necesarias para cumplir un
objetivo, causando que quizás la persona se frustrara porque se tardó mucho haciéndola, hasta viendo
dependencias entre tareas que eran obvias y asignándolas de manera errada con prioridades distintas y
retrasando algunas entregas, sí, lo se, &lt;strong&gt;terrible&lt;/strong&gt;. Pero el colmo, y lo que me hace escribir este artículo
es que ocurrió algo en una reunión que me hizo cuestionarme a mi mismo como líder de proyecto y como Ingeniero
a cargo de un proyecto:&lt;/p&gt;
&lt;p&gt;Hace más o menos un mes y medio, se discutió el flujo de un proceso y cómo debía ser implementado yo dije que
debía ser de &lt;em&gt;X&lt;/em&gt; forma y el CEO dijo que debía ser de &lt;em&gt;Y&lt;/em&gt; forma, al final, se hizo de la forma &lt;em&gt;Y&lt;/em&gt;, pero el tiempo
demostró que la forma &lt;em&gt;X&lt;/em&gt; era la correcta, entonces, tiempo y esfuerzo &lt;em&gt;quizás&lt;/em&gt; perdidos. No me duele mi tiempo
y mi esfuerzo, sino el de mi equipo porque fue &lt;strong&gt;mi culpa&lt;/strong&gt; que las cosas no se hicieran bien desde el principio,
no se, capaz me faltó liderazgo o capacidad de &lt;em&gt;algo&lt;/em&gt; en el momento de la primera discusión, no lo se, el punto es
que, reflexionando, capaz producto de las bebidas espirituosas de hoy, he empezado a pensar que quizás no estoy listo
para asumir responsabilidades de este calibre aún, quizás sea algo de actitud o quizás sea algo de aptitud. Ustedes, ¿qué
piensan?.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="carrera"></category><category term="actitud"></category><category term="personal"></category></entry><entry><title>Clientes SOAP en Python</title><link href="http://iferminmontilla.com/clientes-soap-en-python.html" rel="alternate"></link><updated>2013-08-18T08:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-08-18:clientes-soap-en-python.html</id><summary type="html">&lt;p&gt;Como todos saben, y algunos me chalequean por eso, en la
primera mitad de 2013 cambié de trabajo dos veces, estaba
algo aburrido en Metamax y decidí aceptar una oportunidad
en 4geeks, junto con una serie de proyectos para una empresa
en el extranjero que pintaban bastante bien, una vez que terminé
los proyectos de la otra empresa, terminé enamorándome del proyecto
que desarrollaba desde 4geeks y uniéndome al startup a tiempo completo.&lt;/p&gt;
&lt;p&gt;La historia en 4geeks es muy graciosa, un tal Saúl Lustgarten
llevaba tiempo escribiendo en todas las listas de correo donde
estoy pidiendo un desarrollador Python, incluso me contactó personalmente
varias veces vía email y a través de &lt;em&gt;LinkedIn&lt;/em&gt; para desarrollar su
&lt;em&gt;startup&lt;/em&gt;, una central telefónica en la nube llamada &lt;em&gt;RingTu&lt;/em&gt;, el tema
era que no me resultaba atractivo, así que en ese momento acepté la oferta
de 4geeks.&lt;/p&gt;
&lt;p&gt;El primer día en 4geeks, me informan acerca del proyecto que iba a desarrollar,
&amp;quot;vas a hacer uno de los startups de Wayra, es una central telefónica en la nube&amp;quot;
y yo &amp;quot;¿RingTu?&amp;quot;, &amp;quot;sí ese mismo&amp;quot;, vaya, al parecer hasta se las arregló para que
desde 4geeks desarrollara su startup, jajajajajajaja.&lt;/p&gt;
&lt;p&gt;Básicamente lo que debía hacer era unos wrappers para unos servicios web
que ellos consumen, ese era sólo el inicio del proyecto, pensé que sería
divertido, ya había hecho wrappers para otros servicios web, y en Python
es muy fácil hacer clientes para servicios web, sin importar si hablan JSON o
XML o algún protocolo propio, la cosa se puso esotérica cuando vi que todos
los URL de los servicios con los que iba a trabajar terminaban en .wsdl.&lt;/p&gt;
&lt;p&gt;¿SOAP?, con el boom de REST ¿quién usa SOAP?, en fin, ¿qué tan difícil puede ser?,
en Java es realmente fácil escribir clientes y servicios web usando SOAP y en
Python no debe ser la excepción, hay librerías para todo, dejé de hacerme
preguntas acerca del sentido de la vida, el universo y todo lo demás y puse manos
a la obra a investigar alguna buena librería que me facilitara el trabajo.&lt;/p&gt;
&lt;p&gt;Luego de unos minutos leyendo en &lt;em&gt;StackOverflow&lt;/em&gt;, vi que al parecer suds era
la mejor opción, no se veía tan abandonada y, comparada a las demás opciones,
tenía una documentación decente.&lt;/p&gt;
&lt;p&gt;Lo primero es, obviamente, instalarla:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install suds
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Recuerden que siempre es buena práctica trabajar con virtualenvs y, además, es muy
buena opción el hecho de utilizar virtualenvwrapper para gestionarlos.&lt;/p&gt;
&lt;p&gt;Una vez que tenemos suds ya instalado, es sólo cuestión de empezar a utilizarla,
para hacer clientes, que es de lo que hablaré en este post, sólo nos interesa la
clase definida en &lt;em&gt;suds.client.Client&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Si repasamos un poco de teoría acerca de los servicios web sobre el protocolo SOAP,
veremos que se convirtió en la capa subyacente para servicios complejos basados en
WSDL, que es una manera de especificar los objetos y métodos que expone un servicio web
y a los que el cliente puede tener acceso. WSDL es un acrónimo que significa &lt;em&gt;Web Service
Description Language&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Toda la definición de servicios web SOAP se hace en un documento WSDL, que no es mas que un
XML donde se define todo lo que este servicio expone para ser consumido por sus clientes.
De igual manera, el pase de mensajes (soap messages) entre el cliente y el servidor, se hace
en formato XML.&lt;/p&gt;
&lt;p&gt;A continuación un ejemplo de documento WSDL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;description&lt;/span&gt; &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl&amp;quot;&lt;/span&gt;
             &lt;span class="na"&gt;xmlns:tns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
             &lt;span class="na"&gt;xmlns:whttp=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/http/&amp;quot;&lt;/span&gt;
             &lt;span class="na"&gt;xmlns:wsoap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://schemas.xmlsoap.org/wsdl/soap/&amp;quot;&lt;/span&gt;
             &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Tipos Abstractos --&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;types&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;xs:schema&lt;/span&gt; &lt;span class="na"&gt;xmlns:xs=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2001/XMLSchema&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;xmlns=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.tmsws.com/wsdl20sample&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;targetNamespace=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/wsdl20sample&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

         &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;xs:element&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; ... &lt;span class="nt"&gt;&amp;lt;/xs:element&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/xs:schema&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/types&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Interfaces abstractas --&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;interface&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;fault&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Error1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Opp1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;pattern=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/in-out&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;In&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:request&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
         &lt;span class="nt"&gt;&amp;lt;output&lt;/span&gt; &lt;span class="na"&gt;messageLabel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Out&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;element=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/operation&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/interface&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Interface concreta sobre HTTP --&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/http&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Get&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;whttp:method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- Interface concreta sobre SOAP --&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;binding&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapBinding&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/ns/wsdl/soap&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;wsoap:protocol=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/bindings/HTTP/&amp;quot;&lt;/span&gt;
            &lt;span class="na"&gt;wsoap:mepDefault=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap/mep/request-response&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;operation&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Ge99t&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/binding&amp;gt;&lt;/span&gt;


&lt;span class="c"&gt;&amp;lt;!-- Endpoints que ofrecen el servicio --&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;service&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Service1&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;interface=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:Interface1&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;HttpEndpoint&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:HttpBinding&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/rest/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;endpoint&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;SoapEndpoint&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;binding=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;tns:SoapBinding&amp;quot;&lt;/span&gt;
                &lt;span class="na"&gt;address=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.com/soap/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;/service&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;La sección &lt;em&gt;types&lt;/em&gt; describe los tipos de dato a los que da soporte el servicio web
que se está describiendo. Las &lt;em&gt;interfaces&lt;/em&gt;, definen un servicio como tal, es decir,
las operaciones que pueden ser realizadas y los mensajes que son soportados para realizar
cada operación. Los &lt;em&gt;bindings&lt;/em&gt; especifican la interface y cómo deben ser pasados los mensajes
e incluso el protocolo que debe ser utilizado para el transporte. Finalmente, los &lt;em&gt;endpoints&lt;/em&gt;,
definen los puntos de conexión con el servicio web.&lt;/p&gt;
&lt;p&gt;Por otra parte, un mensaje SOAP debería verse de la siguiente manera:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;POST /InStock HTTP/1.1
Host: www.example.org
Content-Type: application/soap+xml; charset=utf-8
Content-Length: 299
SOAPAction: &amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;

&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;soap:Envelope&lt;/span&gt; &lt;span class="na"&gt;xmlns:soap=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.w3.org/2003/05/soap-envelope&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;soap:Header&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/soap:Header&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;soap:Body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;m:GetStockPrice&lt;/span&gt; &lt;span class="na"&gt;xmlns:m=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;http://www.example.org/stock&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;m:StockName&amp;gt;&lt;/span&gt;IBM&lt;span class="nt"&gt;&amp;lt;/m:StockName&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/m:GetStockPrice&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/soap:Body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/soap:Envelope&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;En un mensaje, el &lt;em&gt;envelope&lt;/em&gt; es lo que identifica el XML como un mensaje SOAP,
el &lt;em&gt;header&lt;/em&gt; contiene información de encabezado, como por ejemplo, llaves de autenticación
o tokens de acceso. Finalmente, el &lt;em&gt;body&lt;/em&gt; o cuerpo del mensaje, es el que contiene
el mensaje como tal que se está enviando, ya sea en solicitud o respuesta del servicio.&lt;/p&gt;
&lt;p&gt;En este caso, se está invocando una función remota &lt;em&gt;GetStockPrice&lt;/em&gt; definida en un namespace &lt;em&gt;m&lt;/em&gt;
del wsdl que describe este servicio. A esta función remota se le está enviando un argumento llamado
&lt;em&gt;StockName&lt;/em&gt; y el valor de este argumento es &lt;em&gt;IBM&lt;/em&gt;, el servicio debería retornar el precio del producto
cuyo &lt;em&gt;StockName&lt;/em&gt; sea &lt;em&gt;IBM&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Para que pueda darse el intercambio de información entre un cliente y un servidor SOAP, ambos deben tener
conocimiento de lo que está definido en el descriptor del servicio, es decir, ambos deben tener acceso
al WSDL, es por ello que lo usual es que el proveedor del servicio web exponga el documento en un URL accesible.&lt;/p&gt;
&lt;p&gt;Para este tutorial, usaremos este servicio web: &lt;a class="reference external" href="http://www.webservicex.com/globalweather.asmx?WSDL"&gt;http://www.webservicex.com/globalweather.asmx?WSDL&lt;/a&gt;, que es un
servicio web de clima. Acá: &lt;a class="reference external" href="http://www.service-repository.com/operation/operations?id=4"&gt;http://www.service-repository.com/operation/operations?id=4&lt;/a&gt; podemos observar
las operaciones y sus parámetros en un formato amigable al humano :-).&lt;/p&gt;
&lt;p&gt;Lo primero es, en nuestro caso, construir una instancia de suds.client.Client que tenga conocimiento
del WSDL que describe el servicio que vamos a usar:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.webservicex.com/globalweather.asmx?WSDL&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Listo, ya tenemos un cliente SOAP listo para consumir el servicio desde Python.&lt;/p&gt;
&lt;p&gt;Lo que nos queda es revisar la documentación del servicio o, si no la hay, el WSDL
para ver cuáles objetos pueden ser pasados como mensajes, construir el request e
invocar el método remoto, para ello nos interesan: Client.factory y Client.service.&lt;/p&gt;
&lt;p&gt;Por ejemplo, obtengamos el tiempo para Caracas - Venezuela:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;tns:GetWeather&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Caracas&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Venezuela&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Listo, así de fácil, explorando la documentación o el WSDL veremos que hay un objeto
llamado &lt;em&gt;GetWeather&lt;/em&gt; definido en el namespace &lt;em&gt;tns&lt;/em&gt;, este objeto tiene dos campos &lt;em&gt;string&lt;/em&gt;:
&lt;em&gt;CityName&lt;/em&gt; y &lt;em&gt;CountryName&lt;/em&gt;, también, si vemos la definición de la respuesta en el WSDL, podremos
observar que es un texto plano (es decir, viene un objeto primitivo &lt;em&gt;string&lt;/em&gt; como SOAPResponse).
Vamos a ver cómo maneja suds ambos casos:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;GetWeather&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="n"&gt;CityName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Caracas&amp;quot;&lt;/span&gt;
   &lt;span class="n"&gt;CountryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Venezuela&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;suds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="n"&gt;xml&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-16&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Caracas&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;Maiquetia&lt;/span&gt; &lt;span class="n"&gt;Aerop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Intl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Simon&lt;/span&gt; &lt;span class="n"&gt;Bolivar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Venezuela&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SVMI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt; &lt;span class="mo"&gt;066&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt; &lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Location&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Aug&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;PM&lt;/span&gt; &lt;span class="n"&gt;EDT&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2013.08&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="mo"&gt;0100&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Time&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Calm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Wind&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;greater&lt;/span&gt; &lt;span class="n"&gt;than&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;mile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Visibility&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;partly&lt;/span&gt; &lt;span class="n"&gt;cloudy&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;SkyConditions&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;82&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Temperature&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="n"&gt;F&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;DewPoint&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;94&lt;/span&gt;&lt;span class="o"&gt;%&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;RelativeHumidity&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;29.88&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Hg&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1012&lt;/span&gt; &lt;span class="n"&gt;hPa&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Pressure&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;Success&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;CurrentWeather&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Como veremos, suds nos crea un objeto Python a partir de la definición que obtuvo del
WSDL en el caso del &lt;em&gt;request&lt;/em&gt; que se construye a partir de la fábrica del cliente usando
el objeto remoto &lt;em&gt;tns:GetWeather&lt;/em&gt; como plantilla.&lt;/p&gt;
&lt;p&gt;En el caso del response, que está declarada como string, nos envía un objeto suds.sax.text.Text,
que puede ser tratado como un objeto string o unicode Python normalmente.&lt;/p&gt;
&lt;p&gt;Suds, no sólo nos hace más fácil la interacción con servicios SOAP, sino que también nos abstrae
del hecho de que tratamos con objetos remotos, convirtiendo todo a objetos Python por nosotros.&lt;/p&gt;
&lt;p&gt;En algunos casos es necesario autenticarse contra un servicio web para poder utilizar sus métodos
remotos, usualmente eso se hace a través de un método público de autenticación que revisa los
permisos y retorna un token de acceso encapsulado en un objeto, este objeto debe colocarse en el
header de los requests que van dirigidos a los métodos privados.&lt;/p&gt;
&lt;p&gt;Debido a que no conseguí ningún servicio web que me permitiera hacer un ejemplo de esto, simplemente
haré un ejemplo &lt;em&gt;dummy&lt;/em&gt; de cómo sería en código:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;

&lt;span class="n"&gt;auth_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.servicio.com/authservice.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ns:AuthObjectRequest&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;MiUsuarioParaElServicio&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;MiClaveSuperSegura&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;auth_object&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;auth_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;service&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GetAccessToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;https://www.servicio.com/otras_cosas.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_options&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;soapheaders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;auth_object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Algunas veces, basta sólo con un objeto que contenga el usuario y el password para
el servicio (como el request de este ejemplo) en el soapheaders del client y listo.&lt;/p&gt;
&lt;p&gt;La única desventaja que vi al trabajar con suds es que no viene con soporte nativo
para attachments, sin embargo, es relativamente fácil añadir esta funcionalidad en
&lt;a class="reference external" href="https://gist.github.com/iferminm/6265400"&gt;este gist&lt;/a&gt; podemos ver el código para hacerlo.&lt;/p&gt;
&lt;p&gt;La manera de utilizarlo es la siguiente:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;suds.client&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;soap_attachments&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://www.servicio.com/wsdl/servicio.wsdl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/home/user/music/panama.mp3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rb&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;mime_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;audio/mpeg&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;bin_param&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mime_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;factory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ns0:RequestConAttachment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;usuario&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;iferminm&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nombre_audio&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;with_soap_attachment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subir_pista&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bin_param&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;endpoint&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Básicamente lo que se hace es leer los bytes que conforman el archivo y colocarlos en el
cuerpo del mensaje SOAP (eso hace with_soap_attachment), lo único que hay que saber acá
es que el endpoint (que se ve como parámetro en la llamada a with_soap_attachment) es el
punto de conexión al servicio web especificado en el WSDL.&lt;/p&gt;
&lt;p&gt;De esta manera, colocamos un archivo adjunto al mensaje SOAP para que sea subido al servidor
vía SOAP.&lt;/p&gt;
&lt;p&gt;Para más información recomiendo revisar la documentación de la librería &lt;a class="reference external" href="https://fedorahosted.org/suds/wiki/Documentation"&gt;acá&lt;/a&gt;, sin embargo, para
hacer clientes para servicios SOAP básicos, con este tutorial debería ser suficiente.&lt;/p&gt;
</summary><category term="python"></category><category term="web services"></category><category term="soap"></category></entry><entry><title>Y al fin!, me estrené como ponente</title><link href="http://iferminmontilla.com/y-al-fin-me-estrene-como-ponente.html" rel="alternate"></link><updated>2013-08-10T21:00:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-08-10:y-al-fin-me-estrene-como-ponente.html</id><summary type="html">&lt;p&gt;Bueno, esto ya es tema viejo, pero no había tenido
tiempo de escribir al respecto. Desde que organicé el
&lt;em&gt;PyConVE2012&lt;/em&gt; había tenido la idea de probar cómo me
iba dando alguna ponencia o algún tutorial, ya en la
Universidad era preparador y miembro del &lt;em&gt;Sun Team
University&lt;/em&gt;, una de las iniciativas académicas de &lt;em&gt;Sun
Microsystems&lt;/em&gt; que &lt;em&gt;Oracle&lt;/em&gt; mató luego de la compra. En
el &lt;em&gt;Sun Team&lt;/em&gt; daba charlas y también como preparador
hablaba en público, pero es muy diferente el ámbito académico
de hablar en una conferencia ante otros especialistas quizás
con más experiencia o mejor preparados que yo.&lt;/p&gt;
&lt;p&gt;Desafortunadamente, en el &lt;em&gt;PyCon&lt;/em&gt; sabía lo que me esperaba
pues éramos pocos organizando e iba a tener que estar corriendo
de un lado a otro de la sede (la UCAB) resolviendo problemas
de última hora, así que decidí no postular ninguna charla.&lt;/p&gt;
&lt;p&gt;Este año, mi buen amigo &lt;a class="reference external" href="http://twitter.com/kadaba"&gt;Jin Kadaba&lt;/a&gt; estaba organizando el
&lt;a class="reference external" href="http://flisol.org.ve"&gt;FLISOL 2013&lt;/a&gt;, y me invitó a dar una charla. Como es una
conferencia de Software Libre y se acepta cualquier tema relacionado,
decidí iniciarme con una charla no-técnica, hablé sobre Comunidades
de Software Libre y mi experiencia en &lt;em&gt;PyVE&lt;/em&gt; y organizando el &lt;em&gt;PyCon&lt;/em&gt;.
Al parecer a la gente le gustó.&lt;/p&gt;
&lt;p&gt;Luego de un par de meses, Mimia Lo, una buena amiga de la Universidad,
estaba de nuevo organizando las &lt;a class="reference external" href="http://joincic.com.ve"&gt;JOINCIC&lt;/a&gt; y me invitó a proponer
alguna charla, confieso que tengo un poco de miedo a hablar en público,
así que decidí no pararme en la tarima del Aula Magna, sino más bien
dar un taller práctico, propuse un par de mesas de trabajo a ver si aprobaban
al menos una, para mi sorpresa me pidieron dar las dos :-) y estaba
muy contento.&lt;/p&gt;
&lt;p&gt;Tanto el FLISOL como las JOINCIC fueron muy gratas experiencias
para mi, tuve la oportunidad de compartir y conocer a otras personas
entusiastas del Software Libre en el FLISOL y de compartir con viejos
amigos de la Universidad en las JOINCIC, sin mencionar que pude
dar a conocer algo de Python en ambos eventos.&lt;/p&gt;
&lt;p&gt;Acá les dejo los slides de las tres presentaciones, espero sean de su agrado:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FLISOL&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Comunidad: orden dentro del caos, caos dentro del orden&lt;/em&gt;
&lt;a class="reference external" href="http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos"&gt;http://www.slideshare.net/iferminm/comunidad-caos-dentro-del-orden-orden-dentro-del-caos&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JOINCIC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Testing: la etapa olvidada&lt;/em&gt;
&lt;a class="reference external" href="http://www.slideshare.net/iferminm/testing-etapa-olvidada"&gt;http://www.slideshare.net/iferminm/testing-etapa-olvidada&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Iniciación a las artes marciales con Python&lt;/em&gt;
&lt;a class="reference external" href="http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python"&gt;http://www.slideshare.net/iferminm/iniciacin-a-las-artes-marciales-con-python&lt;/a&gt;&lt;/p&gt;
</summary><category term="personal"></category><category term="anécdota"></category></entry><entry><title>Carta abierta al DIPUTADO Leomagno Flores</title><link href="http://iferminmontilla.com/carta-abierta-al-diputado-leomagno-flores.html" rel="alternate"></link><updated>2013-03-14T08:44:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-03-14:carta-abierta-al-diputado-leomagno-flores.html</id><summary type="html">&lt;p&gt;Quienes me conocen saben que llevo un buen rato alejado
del oscuro mundo de la política o, más bien, politiquería
venezolana. Las razones son muy diversas, pero luego de ver el
video que coloco a continuación, simplemente no pude sino
estallar en furia por motivos que expondré a lo largo de
este artículo:&lt;/p&gt;
&lt;div class="youtube" align="left"&gt;&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/KI5rYjd12iI" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;Les ruego que ven al video anterior antes de continuar la lectura&lt;/p&gt;
&lt;p&gt;Ahora bien, antes de continuar, quiero explicar un poco mi posición
en cuando a la política. Todo aquel que me pregunta recibirá
la misma respuesta: &lt;em&gt;me criaron con muchos valores como para ser
chavista, pero tengo demasiada autoestima como para llamarme de oposición&lt;/em&gt;,
declaraciones como esta, no hacen más que reafirmar mi postura aunque, todos
los que me conocen, saben que mis votos siempre van a &lt;em&gt;alguno&lt;/em&gt; de los dos lados.&lt;/p&gt;
&lt;p&gt;Para mi, el problema de Venezuela no es de forma, sino de fondo. ¿Qué quiero decir
con esto?, no importa la forma que tenga el gobierno, si el pueblo que está
de fondo no cambia, no iremos a ningún lado ni progresaremos jamás. Pero este
es otra historia, ahora sí, a lo que vine, decidí publicar esto por acá pues, a pesar
de que busqué algún correo electrónico por el cual comunicarme con la persona en cuestión,
no hay &lt;strong&gt;ninguno&lt;/strong&gt; publicado, a pesar de que hay una ficha de contacto en el portal de la
Asamblea Nacional.&lt;/p&gt;
&lt;p&gt;Señor Leomagno Flores, Diputado a la Asamblea Nacional y, además,
&lt;strong&gt;Presidente de la Comisión Permanente de Ciencia, Tecnología e Innovación&lt;/strong&gt;,
permítame decirle que es usted un tremendo idiota, un inepto y que luego
de esa intervención debería &lt;strong&gt;renunciar&lt;/strong&gt; por lo menos a la comisión que
preside porque dejó en evidencia el &lt;em&gt;poco&lt;/em&gt; conocimiento que tiene en el área,
por no decir inexistente. Esto lo digo con todo el respeto del mundo hacia
su posición de Diputado ante la Asamblea Nacional de la República Bolivariana
de Venezuela, pero no hacia su ignorancia como persona que, además,
para tener el cargo que tiene &lt;em&gt;debería&lt;/em&gt; al menos haber leído un par de libros
referentes a tecnología y sus modelos de negocio y distribución, por no decir
cosas más técnicas como Ingeniería del Software, Protocolos de Comunicación y
Sistemas Operativos que no tiene, ciertamente, por qué conocer a profundidad.&lt;/p&gt;
&lt;p&gt;Ahora bien, mis palabras iniciales se que fueron algo fuertes, pero no me cabe
en la cabeza cómo alguien puede llamar &lt;em&gt;dictadura&lt;/em&gt; al &lt;em&gt;Software Libre&lt;/em&gt;, y mucho
menos, cómo puede decir que &amp;quot;uno pensaría que software libre pudiera ser mucho
software que la gente pudiera a su libre albedrío tomar uno y no...&amp;quot;. Pero bueno
vamos por partes.&lt;/p&gt;
&lt;div class="section" id="el-software-libre-es-una-dictadura"&gt;
&lt;h2&gt;El software libre es una dictadura&lt;/h2&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que existen licencias de software que prohíben al
licenciado hacer públicos los errores de programación que encuentre en el
producto?, es decir, te vendo una licencia, cara además, para que uses algo
que está &lt;em&gt;mal hecho&lt;/em&gt; (porque esta programado por humanos y los humanos nos equivocamos),
pero además, si le dices a alguien que tiene un error (que es de las cosas más normales
en el mundo de la computación), &lt;strong&gt;puedo demandarte&lt;/strong&gt;. Si
quisiera tener el &lt;em&gt;derecho&lt;/em&gt; a reportar bugs (o errores de programación), debo &lt;strong&gt;pagar&lt;/strong&gt;
un contrato de soporte y reportarlo &lt;strong&gt;directamente&lt;/strong&gt; a ellos y &lt;em&gt;rogarle a Dios&lt;/em&gt; que
lo reparen para la versión que uso, sino, debo comprar la actualización.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que hay licencias de software que prohíben que el licenciado
ejerza alguna actividad de negocio en la que pudiera competir con la compañía dueña del
producto?, es decir, si yo compro un programa de la empresa A, y el programa sirve
para &lt;em&gt;hacer pastelitos&lt;/em&gt; y la empresa A, además de fabricar el programa, también &lt;em&gt;hace pastelitos&lt;/em&gt;,
esa empresa podría &lt;em&gt;demandarme&lt;/em&gt; por competir por ellos y usar su producto.&lt;/p&gt;
&lt;p&gt;Señor Diputado, ¿sabía usted que &lt;strong&gt;ninguna empresa&lt;/strong&gt; que le venda un programa
bajo el esquema &lt;strong&gt;privativo&lt;/strong&gt; va a permitirle
a usted o a algún especialista de su empresa/estado que lea, estudie o audite el código
fuente del software por el cual pagó?, eso es el equivalente a que usted compre un carro y
en el contrato que usted firma con el concesionario diga que &lt;strong&gt;es ilegal&lt;/strong&gt; que usted
&lt;strong&gt;abra el capot&lt;/strong&gt; y observe el motor, aún cuando el automóvil deje de funcionar en plena
autopista y usted quiera intentar repararlo para seguir su camino, podrían &lt;strong&gt;demandarlo&lt;/strong&gt;
por ello.&lt;/p&gt;
&lt;p&gt;Sí, todo esto ocurre, han &lt;strong&gt;cerrado&lt;/strong&gt; portales web y &lt;strong&gt;demandado&lt;/strong&gt; a sus dueños por
publicar errores de seguridad (graves) en &lt;em&gt;Java&lt;/em&gt;, por ejemplo. Hay personas a las que
las han hecho pagar $5 para reportar un bug en el &lt;em&gt;X&lt;/em&gt; sistema operativo que no voy a
mencionar, hay noticias en todo internet de casos de errores &lt;strong&gt;graves&lt;/strong&gt; de seguridad
que las compañías han dicho &amp;quot;está solucionado en la próxima versión&amp;quot; y todo esto
ocurre en el mundo del &lt;strong&gt;Software Privativo&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Si todo lo anterior no le suena a &lt;strong&gt;dictadura&lt;/strong&gt;, entonces puede dejar de leer aquí,
sino, siga:&lt;/p&gt;
&lt;div class="section" id="entonces-que-es-el-software-libre"&gt;
&lt;h3&gt;Entonces, ¿qué es el Software Libre?&lt;/h3&gt;
&lt;div class="section" id="gratis-no-es-libre-es-una-limosna-ernesto-hernandez-novich"&gt;
&lt;h4&gt;&lt;em&gt;Gratis no es libre, es una limosna&lt;/em&gt; - Ernesto Hernández-Nóvich&lt;/h4&gt;
&lt;p&gt;El &lt;em&gt;Software Libre&lt;/em&gt; es aquel que permite tres libertades fundamentales que enumeraré
a continuación:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt; libertad de uso, es decir, debo poder utilizar el software para lo que yo quiera,
sin importar si voy a competir o no. Puedo utilizarlo en mi casa, en mi empresa, vender una instalación
o soporte sobre ese software, no importa, simplemente la licencia libre me permite hacer lo que desee
con el software.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt; libertad de estudiar cómo funciona por dentro el software, es decir, revisar
el código fuente y, además, adaptarlo a mis necesidades particulares. De nada me sirve tener
libertad de uso si al final el programa como viene &lt;em&gt;out of the box&lt;/em&gt; no me sirve, por ello, debo
poder modificarlo a mi gusto o según lo que me haga falta.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2:&lt;/strong&gt; libertad de hacer copias &lt;strong&gt;sin ningún problema&lt;/strong&gt;, es decir, instalarlo en cuantos
equipos quiera, sin necesidad de pagar &lt;em&gt;licencias extra&lt;/em&gt; por hacerlo, esto, además, me permite
distribuir copias del software &lt;strong&gt;sin incurrir en delito alguno&lt;/strong&gt;. Si algo es bueno, queremos que más
gente lo utilice.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad para modificar/mejorar el software y distribuir las mejoras a la comunidad,
si me beneficio de un desarrollo de la comunidad, estoy en la obligación moral de
retribuirle con algo de mi trabajo y, de esta
manera, ayudo a que el software evolucione y mejore cada día.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Respecto a esta última libertad, ¿sabía usted, señor Diputado, que Apple basó el núcleo de su MacOS X
en &lt;em&gt;FreeBSD&lt;/em&gt;, un Sistema Operativo &lt;em&gt;libre&lt;/em&gt;, y no han liberado ni una sola línea de lo que hicieron con
&lt;em&gt;Darwin&lt;/em&gt; (el núcleo de MacOS X)?. ¿Le parece esto justo?, ¿le parecen estas libertades los preceptos
de una &lt;em&gt;dictadura tecnológica&lt;/em&gt;?.&lt;/p&gt;
&lt;p&gt;Cuando hablo de &lt;em&gt;Software Libre&lt;/em&gt; y las 4 libertades, me gusta muchísimo incluir una quinta libertad,
es quizás la más importante de todas: la &lt;strong&gt;Libertad de Elegir&lt;/strong&gt;, nadie me obliga a usar cierta herramienta,
puedo probarlas &lt;strong&gt;todas&lt;/strong&gt; y quedarme con la que más me guste. Eso me lleva a mi segundo punto.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hay-poco-software-libre"&gt;
&lt;h2&gt;Hay poco Software Libre&lt;/h2&gt;
&lt;p&gt;Acá no puedo más que remitirme a la realidad. Si alguna vez ha visitado una página web,
ha usado &lt;strong&gt;Software Libre&lt;/strong&gt; indirectamente. Muchas de las páginas son servidas gracias a
Apache o NGinx, dos de los servidores web más populares de hoy. Una gran cantidad de las
páginas dinámicas están programadas en PHP, Python o Ruby, algunas en Perl, todos lenguajes
&lt;strong&gt;libres&lt;/strong&gt;. Es también bastante probable que todo esto corra sobre un servidor con sistema operativo
Linux, también &lt;strong&gt;libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Sin ir muy lejos, este blog llega a ustedes gracias a Pelican y Python, una herramienta
y un lenguaje, ambos &lt;strong&gt;Software Libre&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Es poco lo que tengo que agregar acá, simplemente invitarles a colocar &lt;em&gt;Linux distro list&lt;/em&gt; o
&lt;em&gt;alternativas de software libre&lt;/em&gt; en Google y evaluar ustedes mismos si hay poco &lt;em&gt;Software Libre&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ahora-mi-reflexion"&gt;
&lt;h2&gt;Ahora, mi reflexión&lt;/h2&gt;
&lt;p&gt;La política es uno de los campos más sucios que existen entre todas las actividades
del ser humano, por ello, todo lo que se politiza generará discordia. Para mi, el gobierno
cometió un error al politizar acerca del &lt;em&gt;Software Libre&lt;/em&gt;. La dinámica de la &lt;em&gt;Asamblea Nacional&lt;/em&gt;
Venezolana puede resumirse en: &lt;em&gt;Si eres de mi partido, aplaudo todo lo que digas, sin importar que
sea la idiotez más grande que haya escuchado, debo apoyarte. Pero si eres del contrario, debo llevarte
la contraria y decir que lo que dices está mal, sin importar que sea la mejor idea de los últimos 20 años&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Así se maneja el debate político en Venezuela y así se manejará cualquier cosa que se politice, las leyes
de infogobierno deberían ser discutidas con Ingenieros, Programadores y Especialistas en tecnología o, al menos,
deberían ser consultados pues como hemos visto en la discusión intervienen entes que no saben de informática y,
por lo que han demostrado en los últimos años, mucho menos saben gobernar.&lt;/p&gt;
&lt;p&gt;Los dejo ahora con una charla que dio Ernesto Hernández-Nóvich acerca del &lt;em&gt;Estado&lt;/em&gt; y el &lt;em&gt;Software Libre&lt;/em&gt;,
&lt;strong&gt;La libertad no admite grises&lt;/strong&gt;&lt;/p&gt;
&lt;div class="youtube" align="left"&gt;&lt;iframe width="420" height="315" src="http://www.youtube.com/embed/Jukl9gBvSS8" frameborder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</summary><category term="informática"></category><category term="política"></category><category term="personal"></category><category term="opinión"></category></entry><entry><title>Querido amigo usuario</title><link href="http://iferminmontilla.com/querido-amigo-usuario.html" rel="alternate"></link><updated>2013-02-03T23:39:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-02-03:querido-amigo-usuario.html</id><summary type="html">&lt;p&gt;En algunas carreras me llama muchísimo la atención el hecho de que
todos tus amigos, familiares, vecinos e incluso gente que acaba de
conocerte piensan que estudiaste para proveerles servicio gratis y que,
además, debes saberlo todo de todo o no sirves.&lt;/p&gt;
&lt;p&gt;Si eres médico, nunca falta salga con cosas como &lt;em&gt;sabes que tengo un
dolorcito aquí en el brazo desde hace días, ¿qué será que puedo tomar?&lt;/em&gt;,
o el típico &lt;em&gt;¿qué le puedo dar al chamo para que se le pase el malestar?&lt;/em&gt;,
si eres fotógrafo, nunca falta el que te diga &lt;em&gt;chamo, tomame una foto ahí
pal' féijbu&lt;/em&gt;. Si eres computista, la cosa es realmente difícil.&lt;/p&gt;
&lt;p&gt;Sí, soy &lt;strong&gt;Ingeniero&lt;/strong&gt; en &lt;strong&gt;Informática&lt;/strong&gt;, al igual que muchos otros
colegas por ahí, pero eso no me convierte automáticamente en tu soporte
técnico personal para repararte el &lt;em&gt;Güindows&lt;/em&gt; cada ves que le entra un
virus, configurarte la impresora cada ves que compras una nueva o colocarle
clave a tu &lt;em&gt;wifi&lt;/em&gt;. Claro que me gusta hablar de tecnología, pero no conozco
todos los modelos de &lt;em&gt;smartphone&lt;/em&gt; ni mucho menos se cómo arreglarte el
&lt;em&gt;blackberry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Pero, sin lugar a dudas, los peores son los que llegan diciendo &lt;em&gt;mira,
necesito hackear esta cuenta de correo, ¿será que me puedes hacer el favor?&lt;/em&gt;.
Bueno, yo necesito dinero, ¿robarías un banco por mi?, creo que no. Estos últimos
no aceptan un educado &lt;strong&gt;no se&lt;/strong&gt; por respuesta, sino que luego de eso te dicen
&lt;em&gt;ay, pero tú deberías saber, ¿no les enseñan en la universidad?&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Querido amigo, familiar, vecino, en fin, usuarios todos, &lt;strong&gt;no&lt;/strong&gt;,
&lt;strong&gt;no me lo enseñan en la universidad&lt;/strong&gt;, vi muchísimas materias entre Cálculos,
Físicas, algunas Matemáticas Discretas, muchos Algoritmos y materias de Programación,
Sistemas Operativos y Redes de Computadoras, pero ninguna de &lt;em&gt;Hackear Hotmail&lt;/em&gt; I, II o II
ni ninguna electiva de &lt;em&gt;Configuraciones Avanzadas de Impresoras&lt;/em&gt;, mucho menos
&lt;em&gt;Detección y reparación de Virus en Windows&lt;/em&gt;, y ni hablar de &lt;em&gt;Gestión avanzada de equipos
BlackBerry&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Claro, me agrada ayudar a la gente, no tengo problema en ayudarte a solventar
tus necesidades tecnológicas de vez en cuando, pero &lt;strong&gt;no abuses&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Con cariño
Israel.&lt;/p&gt;
</summary><category term="Personal"></category><category term="Carrera"></category></entry><entry><title>Resumen del 2012 (y propuestas para el 2013)</title><link href="http://iferminmontilla.com/resumen-del-2012-y-propuestas-para-el-2013.html" rel="alternate"></link><updated>2013-01-14T08:00:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2013-01-14:resumen-del-2012-y-propuestas-para-el-2013.html</id><summary type="html">&lt;p&gt;Bueno, ya se nos fue otro año, un año en el que
supuestamente se acababa el mundo pero no fue así
(lo siento mayas y adventistas).&lt;/p&gt;
&lt;p&gt;Lo que realmente querían decir los mayas era que
se completaba un ciclo, una era del universo,
una etapa de la raza humana, en ese sentido, quiero
hacer un resumen personal de las cosas buenas que me
dejó este 2012 y una propuesta personal, pero pública
de lo que quiero hacer en 2013.&lt;/p&gt;
&lt;div class="section" id="mi-2012"&gt;
&lt;h2&gt;Mi 2012&lt;/h2&gt;
&lt;p&gt;Este año empezó con varios altibajos en materia personal,
luego de que a finales de 2011 me comporté como un patán
y ciertamente rompí varias veces el corazón de una persona
especial, me di cuenta de todo lo que hice mal y de que
no todo era malo, caí en cuenta de lo bien que me sentía
con esa persona y decidí volver, y ella me aceptó de vuelta.&lt;/p&gt;
&lt;p&gt;Digo que empecé con varios altibajos pues todo enero y febrero
fue un período largo de adaptación el uno al otro, asimilando
cambios de ella y míos que se dieron en un período de ocho
meses que estuvimos separados. Muchas cosas mejoraron
de parte y parte y creo que fue el inicio de una nueva etapa
para ambos, estábamos redescubriendo cómo convivir, entre
discusiones y peleas ocasionales y períodos en los que todo
era lindo y color de rosas.&lt;/p&gt;
&lt;p&gt;A inicios de año también defendí mi tesis de grado, obteniendo
mención honorífica, con esto iniciaba mi año con balance positivo
en el área académica/profesional.&lt;/p&gt;
&lt;p&gt;Tuve que tomar un par de decisiones en el área profesional,
la más notable fue no volver a Vauxoo por motivos de metas
personales. Luego de varias entrevistas, terminé trabajando
junto a un equipo de excelentes programadores en Zava, terminé
asociándome con ellos e involucrándolos un poco en uno de mis
proyectos (PyConVE).&lt;/p&gt;
&lt;p&gt;Creo que el evento que marcó mi 2012 fueron las elecciones
presidenciales. La victoria de Hugo Chávez por n-ésima vez
me hizo ver que, quizás, al pueblo le gusta y no hay nada
que se pueda hacer al respecto, fue cuando tomé la decisión
de dejar todo y empezar a buscar mi camino, dejé mi trabajo
en Zava por una oferta bastante buena en Metamax, buscando
poder ahorrar un poco más.&lt;/p&gt;
&lt;div class="section" id="cosas-que-siento-que-logre-este-ano"&gt;
&lt;h3&gt;Cosas que (siento que) logré este año:&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mejorar mis habilidades de programación.&lt;/li&gt;
&lt;li&gt;Obtener una buena calificación en mi tesis de grado.&lt;/li&gt;
&lt;li&gt;Conseguir un buen trabajo (de hecho conseguí dos).&lt;/li&gt;
&lt;li&gt;Mejorar mi relación con mi novia (la clave acá fue
el entendimiento mútuo).&lt;/li&gt;
&lt;li&gt;PyConVE2012: algo de lo que me siento orgulloso (gracias
a PyVE, a Giselle por su apoyo y a todos quienes asistieron)&lt;/li&gt;
&lt;li&gt;Mejorar mi relación de familia (ya hablo más :-) ).&lt;/li&gt;
&lt;li&gt;Enfocarme en lo que realmente me importa (tuve que dejar
mi banda, fue difícil, pero no me arrepiento).&lt;/li&gt;
&lt;li&gt;Recuperar contacto con viejos amigos: Luis y Henoc acá,
también mi pana Juan Hernández.&lt;/li&gt;
&lt;li&gt;Mejorar un poco mi capacidad de concentración.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En el camino conocí gente muy valiosa: Carlos Zager, Mauricio Reyes
Keny Vivas y Horacio Gouveia en Zava, Jin Kadaba y Sebastián Magrí en PyVE (gracias al
PyCon), Érico Andrei y Facundo Batista (ponentes del PyCon),
Moisés Fernández, Camila Pacheco, José P. Bruno y Manuel Ferrer en
mi ex-banda &lt;em&gt;Teorema&lt;/em&gt; y, hacia el final del año en mi nuevo trabajo,
a Alexander Cabezas, Clareana Colina y Oscar Mata en Metamax.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="cosas-que-espero-lograre-en-2013"&gt;
&lt;h3&gt;Cosas que (espero) lograré en 2013:&lt;/h3&gt;
&lt;p&gt;Acá puedo dividirlo en dos campos:&lt;/p&gt;
&lt;div class="section" id="en-lo-personal"&gt;
&lt;h4&gt;En lo personal&lt;/h4&gt;
&lt;p&gt;Me gustaría continuar profundizando en mi relación
familiar y terminar de formalizar mi relación con
mi novia, algo de lo que venimos hablando desde
hace ya algún tiempo.&lt;/p&gt;
&lt;p&gt;Me gustaría mejorar también ciertos aspectos de mi
personalidad y autoestima, creo que debo valorar más
lo que hago en todo sentido, también, quiero seguir
enfocándome.&lt;/p&gt;
&lt;p&gt;Parecieran pocas metas &lt;em&gt;personales&lt;/em&gt; pero se que son
cosas que me llevarán algún tiempo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="en-lo-profesional"&gt;
&lt;h4&gt;En lo profesional&lt;/h4&gt;
&lt;p&gt;Lograr convertirme en pieza clave del equipo
del que formo parte actualmente y continuar
mejorando mis habilidades como desarrollador
e ingeniero. Quizás aprender un nuevo lenguaje,
podría ser Ruby o capaz continúe con Perl.&lt;/p&gt;
&lt;p&gt;Finalmente, terminar de lanzar alguno de mis proyectos
personales pero, como siempre, debo enfocarme en uno
a la vez.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="personal"></category></entry><entry><title>Mi experiencia en el PyConVE 2012 y otros cuentos</title><link href="http://iferminmontilla.com/mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html" rel="alternate"></link><updated>2012-11-18T08:58:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-11-18:mi-experiencia-en-el-pyconve-2012-y-otros-cuentos.html</id><summary type="html">&lt;p&gt;Bueno, ya ha pasado una semana y alguito desde que terminó la
primera Conferencia del Lenguaje Python de Venezuela
(PyConVE), he tenido algo de tiempo para reflexionar
y pensar acerca de varias cosas que me ocurrieron antes
del evento, es decir, mientras se estaba organizando, durante
el evento y después del mismo, es decir, los días siguientes
a que la conferencia finalizó.&lt;/p&gt;
&lt;div class="section" id="como-comenzo"&gt;
&lt;h2&gt;¿Cómo comenzó?&lt;/h2&gt;
&lt;p&gt;Creo que es justo &lt;em&gt;echar el cuento&lt;/em&gt; de cómo surgió la idea
de organizar un PyCon en Venezuela, algo que para muchos,
dentro de la comunidad incluso, resultaba una locura hace
un par de años.&lt;/p&gt;
&lt;p&gt;Todo comenzó por allá en febrero de 2011, yo empezaba mis
pasantías cortas de la Universidad en &lt;a class="reference external" href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt;, me iniciaba
en Python con aquel trabajo, era toda una nueva manera de
programar y me encantaba, por referencia de Nhomar Hernández
terminé metido en la lista python-caracas y, posteriormente,
en la de Python Venezuela en coactivate. Recuerdo algunos
mensajes en la lista de python-caracas se estaba hablando de
que sería una buena idea organizar un &lt;em&gt;Día Python&lt;/em&gt; para vernos
las caras, yo era joven e ingenuo, me ofrecí para organizarlo y
en marzo de 2011 tuvimos nuestro primer &lt;em&gt;PyDay Caracas&lt;/em&gt;, en el
auditorio de la biblioteca de la Universidad Católica Andrés Bello.&lt;/p&gt;
&lt;p&gt;Luego de ese primer &lt;em&gt;PyDay&lt;/em&gt;, que se repitió en Mérida unos
días después, Francisco Palm decía por la lista que se debería
aprovechar el impulso para organizar algo más grande: un &lt;em&gt;PyCon&lt;/em&gt;.
La idea, por esos días, no caló mucho entre la gente de la comunidad,
las cosas se fueron enfriando poco a poco y con el tiempo, sólo
había uno que otro mensaje ocasional en la lista y nos veíamos
una vez cada alineación planetaria.&lt;/p&gt;
&lt;p&gt;Luego, por allá en diciembre de 2012, conversando con Francisco Palm,
la idea de un &lt;em&gt;PyCon&lt;/em&gt; no me pareció tan descabellada,
había posibles patrocinantes, la sede podría ser la UCAB,
se asomaba la idea de invitar ponentes internacionales, yo
por mi parte, acababa de renunciar en &lt;a class="reference external" href="http://vauxoo.com"&gt;Vauxoo&lt;/a&gt; para dedicarme
a mi tesis de grado, entonces, también trabajaba en mi tesis,
seguía siendo joven e ingenuo y acepté lanzarme de frente
con la organización del evento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="el-comienzo"&gt;
&lt;h2&gt;El comienzo&lt;/h2&gt;
&lt;p&gt;Justo empezando, nos dividimos un poco las tareas,
decidimos que el evento sería en Caracas y que la sede
sería la Universidad Católica Andrés Bello, al ser &lt;em&gt;casi egresado&lt;/em&gt;
de allí, ya se cómo se mueven las cosas dentro, conozco
a varias autoridades y se también con quién hablar o dónde
dirigirme.&lt;/p&gt;
&lt;p&gt;Había algo que para mi resultaba vital, tener apoyo de mi Escuela,
la Escuela de Ingeniería Informática de la UCAB. Lamentablemente,
aunque el Prof. Ricardo Casanova tenía instrucciones de apoyarme
en lo que pidiera, no hizo más que decirme que &amp;quot;los auditorios
y los laboratorios no pueden reservarse con tanta antelación&amp;quot;,
de resto, resolví escribiéndole a las unidades funcionales correspondientes
y reservando laboratorios y el auditorio &amp;quot;con mucha antelación&amp;quot;.
Me hubiera gustado contar con un mayor apoyo por parte de mi Escuela,
pero supongo que aquello de &amp;quot;nadie es profeta en su tierra&amp;quot; es cierto.&lt;/p&gt;
&lt;p&gt;Una vez asegurados los espacios para alojar el evento,
me dediqué a buscar ponentes, ya había unos nacionales más que
confirmados a quienes no había siquiera que preguntarles: Francisco Palm,
Nhomar Hernández, Carlos Gustavo Ruíz, Carlos Zager y Juan Hernández,
pero para atraer más personas al evento, hacían falta ponentes
internacionales, me dediqué a escribirle a &lt;strong&gt;Guido Van Rossum&lt;/strong&gt; y a
&lt;strong&gt;Wesley Chun&lt;/strong&gt; a ver si estarían interesados en participar, eso sí,
teniendo presente que tocar la puerta no es entrar.&lt;/p&gt;
&lt;p&gt;De parte de Guido, obtuve una respuesta negativa, él dice que
prefiere no viajar porque es malo para su familia y es totalmente
entendible, ya tiene su agenda y va al &lt;em&gt;PyConUS&lt;/em&gt; y al &lt;em&gt;EuroPython&lt;/em&gt; casi
exclusivamente.&lt;/p&gt;
&lt;p&gt;Por su parte Wesley también me dijo que no, sin embargo me
facilitó una larga lista de contactos, me puso en contacto con
José Montes de Oca (venezolano en Google) y me pidió que lo mantuviera
al tanto del evento. Gracias a Wesley Chun, pude contactar con
Facundo Batista y Érico Andrei, los dos ponentes &lt;strong&gt;internacionales&lt;/strong&gt;
del primer &lt;em&gt;PyConVE&lt;/em&gt;, la invitación incluía &lt;strong&gt;pasaje y hospedaje&lt;/strong&gt; en
Caracas, ambos aceptaron y yo, en ese momento, &lt;strong&gt;no&lt;/strong&gt; tenía patrocinantes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="tomando-forma-y-sintiendo-la-presion"&gt;
&lt;h2&gt;Tomando forma y sintiendo la presión&lt;/h2&gt;
&lt;p&gt;Bien, en enero ya tenía cuatro cosas: una fecha para el &lt;em&gt;PyConVE&lt;/em&gt;,
dos invitados internacionales &lt;strong&gt;confirmados&lt;/strong&gt; (Facundo y Érico), un invitado
internacional &lt;strong&gt;por confirmar&lt;/strong&gt; (José Montes de Oca) y la preocupación de
conseguir el dinero para cumplir la promesa del pasaje y el alojamiento
en Caracas para los invitados, bastante ¿no?&lt;/p&gt;
&lt;p&gt;Empecé a escribir a mediados de enero a la Escuela de Ingeniería Informática (EII)
para pedirles &lt;strong&gt;apoyo&lt;/strong&gt; en la logística interna, especialmente la reserva de los
auditorios, la Prof. Susana García, directora de la EII, designó al Prof. Ricardo Casanova
para que me ayudara en lo que fuera necesario. Procedí entonces a contactarlo para
la reserva del auditorio y los laboratorios, su respuesta fue, en resumen, &amp;quot;no puedes
reservar &lt;em&gt;con tanta antelación&lt;/em&gt; en este momento estoy muy ocupado y no puedo&amp;quot;, este
personaje y yo tenemos en el pasado un problema originado por una discusión
&lt;em&gt;de esos temas religiosos&lt;/em&gt; Mac vs Linux del que, aparentemente, no ha podido sobreponerse.&lt;/p&gt;
&lt;p&gt;Dada la negativa de apoyo o, más bien, intento de retrasarme las cosas, decidí contactar
directamente a la Dirección del Cultura y a la Dirección de Tecnologías de Información (DTI)
para reservar los espacios. Como era de esperarse, todo fluyó con normalidad y ya a finales de
enero tenía algo mas: el Auditorio Hermano Lanz y los laboratorios A613 y A553 de la UCAB
&lt;strong&gt;reservados&lt;/strong&gt; para albergar el &lt;em&gt;PyConVE&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Las cosas se durmieron un poco hasta finales de febrero, que los organizadores de &lt;em&gt;PyConAR&lt;/em&gt;
lanzaron su página web con el llamado a charlas, inscripciones, información del evento,
invitados internacionales y demás información del evento. Acá no teníamos siquiera un
&lt;em&gt;En Construcción&lt;/em&gt; y, en pocas palabras, &lt;strong&gt;me asusté&lt;/strong&gt; (sintiendo la presión). Corrí a la lista
&lt;em&gt;Conferences&lt;/em&gt; de &lt;em&gt;python.org&lt;/em&gt; para pedir ayuda con el dominio oficial &lt;em&gt;ve.pycon.org&lt;/em&gt; y, mientras,
compré el dominio &lt;em&gt;pyconve.com&lt;/em&gt; a través de &lt;em&gt;GoDaddy&lt;/em&gt;. Aprovecho acá para agradecerle a M.A. Lemburg
por su ayuda configurando el dominio.&lt;/p&gt;
&lt;p&gt;Ya que las cosas no fluían con la velocidad que quería con la página web, pedí ayuda en la oficina,
en ese momento trabajaba en &lt;a class="reference external" href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, nos dedicamos 4 desarrolladores a sacar la página y en una tarde
ya teníamos algo visual y semi-funcional, al final de la semana ya teníamos una página bastante
completa y &lt;em&gt;apta para el público&lt;/em&gt;, la hospedamos en el VPS de la empresa y listo. Posteriormente
la empresa me dejaría tiempo para atender bugs y añadir características nuevas, esto fue en abril.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="empezando-a-tranquilizarme"&gt;
&lt;h2&gt;Empezando a tranquilizarme&lt;/h2&gt;
&lt;p&gt;Conversando con Francisco, me di cuenta de que las cosas no iban tan atrasadas como pensé,
él había conseguido patrocinio para afiches, agua y almuerzos para los organizadores y
ponentes durante el evento, yo había conseguido ponentes internacionales, sede y página web
así que lo demás, iría llegando poco a poco.&lt;/p&gt;
&lt;p&gt;Todavía tenía una preocupación más: &lt;strong&gt;LOS PASAJES&lt;/strong&gt;, me dispuse a escribirle a Nhomar Hernández
a ver si desde Vauxoo o algún cliente/socio de negocios podrían patrocinar los pasajes. La respuesta
fue afirmativa y, ya a mediados de septiembre, estaba enviándole a Érico y a Facundo sus tickets electrónicos,
en cuanto a José, el ponente de Google, tenía tiempo sin noticias hasta que confirmó, pero para cuando
confirmó los pasajes habían subido de precio de manera astronómica y, difícilmente, un patrocinante
iba a querer pagarlo, así que llegamos al acuerdo de que sería por videoconferencia a través
de un &lt;em&gt;Google HangOut&lt;/em&gt;, escribí al DTI para que realizaran las configuraciones pertinentes.&lt;/p&gt;
&lt;p&gt;Mientras tanto, teníamos unas 35 ponencias inscritas y alrededor de 150 personas registradas
para asistir al evento, esto me tenía súper contento, sinceramente no esperaba tanta receptividad.
Francisco consiguió organizar un evento en el CIDA en Mérida y logró que un patrocinante
pagara pasaje Caracas - Mérida para que Facundo participara en ese evento, el &lt;em&gt;PyTatuy&lt;/em&gt;. Todo
parecía ir viento en popa.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="imprevistos-imprevistos-imprevistos"&gt;
&lt;h2&gt;Imprevistos, imprevistos, IMPREVISTOS!!!&lt;/h2&gt;
&lt;p&gt;Bueno, nada es perfecto, los imprevistos en este tipo de cosas están a la orden del día, recordemos
que &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Ley_de_Murphy"&gt;Murphy&lt;/a&gt; existe. Previendo que, quizás, no llegara el agua a tiempo el primer día. Facundo decidió
venir con su familia, ahora debía buscarle una habitación en un Hotel cerca de la Universidad, tienen un
hijo pequeño, así que debía ser un buen hotel y, además, debía buscar un patrocinante para eso, la habitación
no se concretó sino hasta tres días antes de que llegaran el patrocinante fue &lt;a class="reference external" href="http://echandocodigo.com"&gt;EchandoCódigo&lt;/a&gt; (Gracias Osledy Bazó!!!).&lt;/p&gt;
&lt;p&gt;En la madrugada del 27 de octubre recibo una llamada a mi celular, era un número internacional y atendí. Del otro lado
decían &lt;em&gt;&amp;quot;Ché ¿Israel?, Facundo Batista aquí, estoy en el aeropuerto y no me dejan abordar acá&amp;quot;&lt;/em&gt;, había un problema
con el nombre, para enterarse del cuento completo, click &lt;a class="reference external" href="http://www.taniquetil.com.ar/plog/post/1/583"&gt;acá&lt;/a&gt;. Inmediatamente llamé a Nhomar a ver si estaba
despierto (y si no, pues que se despertara), estuvimos conversando un rato y luego Facundo me informó que ya
le habían liberado los boletos, pero que era necesario corregir los boletos para el regreso.&lt;/p&gt;
&lt;p&gt;El 27 de octubre en la noche, voy con Giselle, mi novia, al aeropuerto a buscar a Facundo y familia, pero
al llegar, me consigo únicamente a Facundo, la familia se había quedado varada en Lima, les habían cancelado
el segundo tramo del viaje. Bueno, subimos a Caracas y lo dejé en el Hotel para que pudiera descansar
y al día siguiente ya se resolvería lo del vuelo de la familia, afortunadamente llegaron en domingo 28
al mediodía.&lt;/p&gt;
&lt;p&gt;Francisco Palm había quedado en traer los afiches para pegarlos por la universidad cuando
viniera a Caracas con Facundo luego del &lt;em&gt;PyTatuy&lt;/em&gt;, pero los dejó en el carro y el carro
lo dejó en Mérida (sorry!, tenía que contarlo, no lo tomes a descarga, jajajajaja).&lt;/p&gt;
&lt;p&gt;Con respecto a Érico, todo fluyó de maravilla, se quedó en mi casa, comió arepas, aprendió a moverse
en Metro, andaba solo por la ciudad!!!, eso me preocupaba enormemente, pero luego entendí
que él es muy independiente cuando viaja.&lt;/p&gt;
&lt;p&gt;Hubo cancelaciones tardías: Ernesto Crespo sufrió una caída que le imposibilitó viajar
(espero se encuentre bien ya), Roldan Vargas tampoco podría venir a Caracas, Edwind Ocando
iba a ser operado y tuvo que cancelar también, Efraín Valles no pudo venir por razones laborales.
Hubo otras más, pero no recuerdo, afortunadamente varios miembros saltaron al rescate, Gerardo Curiel
cubrió varias charlas canceladas con temas interesantísimos de desarrollo web y vim para pythonistas,
Leonardo Caballero cubrió una de las charlas de Plone que fueron canceladas y Érico Andrei también
dió una charla adicional muy orientada al público estudiantil.&lt;/p&gt;
&lt;p&gt;Bien, llegó el primer día del &lt;em&gt;PyConVE&lt;/em&gt; y, como era de esperarse, fue un desastre, había
una cola insoportable en la Av. Páez, ergo, llegué tarde con Érico, Gigi (bueno, Giselle, mi novia)
ya había llegado y me ayudó a ir organizando todo, ya estaban Sebastián Magrí y Leonardo Caballero en
la UCAB, Rafael Andara (del DTI) me había estado esperando para darme los datos de configuración
para poder realizar la videoconferencia con José Montes de Oca, muchísimas gracias a Gigi y a los
muchachos por ir alistando todo, el evento arrancó casi una hora y media tarde (perdonen todos el retraso).&lt;/p&gt;
&lt;p&gt;Las aguas llegaron tarde (menos mal fui precavido), los almuerzos también así que se convirtieron en la cena
de varias personas (incluyéndome).&lt;/p&gt;
&lt;p&gt;Vale acotar que pasé &lt;strong&gt;toda la semana&lt;/strong&gt; del PyCon enfermo del estómago y sobreviviendo a base de Loperán
y Alcaseltzer.&lt;/p&gt;
&lt;p&gt;El último día del evento, el DTI no me abrió los laboratorios porque no tenían la llave y la oficina donde están
no abre los sábados (mal!) y, supuestamente, hay una persona los sábados que tiene las llaves pero ese día
no fue (terrible!!), por lo que todos los talleres de ese día (o la mayoría) hubo que darlos como charlas
relámpago en el Auditorio (una manera de resolver y no quedar tan mal).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusiones"&gt;
&lt;h2&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;Bueno, luego del &lt;strong&gt;PyConVE&lt;/strong&gt;, aprendí muchísimas cosas en cuanto a gestión de eventos y otras tantas
de comunidad, sobre todo aprendí a delegar, es imposible que una sola persona pueda hacerlo todo.
Descubrí que hay mucha gente valiosa dentro de la comunidad en quien se pueden delegar cosas de manera
muy confiable, &lt;a class="reference external" href="http://twitter.com/kadaba"&gt;Jin Kadaba&lt;/a&gt;, &lt;a class="reference external" href="http://twitter.com/jackboot7"&gt;Luis Alberto Santana&lt;/a&gt;, &lt;a class="reference external" href="http://twitter.com/carlosgr_arahat"&gt;Carlos Gustavo Ruíz&lt;/a&gt;, &lt;a class="reference external" href="http://twitter.com/macagua"&gt;Leonardo Caballero&lt;/a&gt;, &lt;a class="reference external" href="http://twitter.com/sebasmagri"&gt;Sebastián Magrí&lt;/a&gt;,
&lt;a class="reference external" href="http://twitter.com/nhomar"&gt;Nhomar Hernández&lt;/a&gt; (pero por supuesto!), &lt;a class="reference external" href="http://twitter.com/vladjanicek"&gt;Juan Hernández&lt;/a&gt; (no faltaba más), &lt;a class="reference external" href="http://twitter.com/mapologo"&gt;Francisco Palm&lt;/a&gt;.
y si olvido a alguien, pido disculpas.&lt;/p&gt;
&lt;p&gt;Hay aún mucho trabajo por hacer, es necesaria una figura legal para poder recibir donaciones en calidad de patrocinio
de una manera más formal, actualmente estamos en eso en la comunidad, creo que el PyCon, aunque bien fue algo arriesgado,
fue un catalizador y un activador para muchas personas dentro de la comunidad, está en nosotros no dejar
que la ola muera y continuar trabajando para llevar adelante nuestra comunidad, muchas personas de otros estados
quieren organizar &lt;em&gt;PyDays&lt;/em&gt;, personas que antes no intervenían en la lista de la comunidad
ahora son más activas y sólo leí buenos comentarios del evento. Todo esto y, sobre todo las dos primeras, con
cosas que me hacen decir que &lt;strong&gt;valió la pena&lt;/strong&gt; el esfuerzo, y &lt;strong&gt;lo volvería a hacer&lt;/strong&gt;. Perdonen si me extendí,
creo que este es el artículo más largo que he escrito en muchísimo tiempo, pero eran demasiadas experiencias
que quería compartir, finalmente, muchísimas gracias a Facundo Batista y Érico Andrei por participar, gracias
a &lt;strong&gt;todos&lt;/strong&gt; los ponentes nacionales por apartar esos tres días en sus agendas y movilizarse a la UCAB para
nuestro &lt;strong&gt;primer&lt;/strong&gt; &lt;em&gt;PyCon&lt;/em&gt;, a mi novia por apoyarme en mis locuras y a todos quienes asistieron de Caracas y,
sobre todo, del interior del país, GRACIAS TOTALES!.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="PyCon"></category><category term="Comunidad"></category></entry><entry><title>Ehm, Hola de nuevo!</title><link href="http://iferminmontilla.com/ehm-hola-de-nuevo.html" rel="alternate"></link><updated>2012-11-10T23:39:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-11-10:ehm-hola-de-nuevo.html</id><summary type="html">&lt;p&gt;Saludos a todos, había estado perdido de por estos lados.
Todo tiene una razón de ser, en este caso, fueron varias:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Por un lado, mi blog viejo, hecho en Wordpress, fue
hackeado en repetidas oportunidades y, para ser sincero,
me fastidié de que eso me ocurriera.&lt;/li&gt;
&lt;li&gt;Por otro lado, hace ya unos tres meses que tengo un VPS para
tener respado de algunas cosas y hacer experimentos.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;¿Qué quiero decir con esto?, simplemente, decidí cambiar mi motor
de Blog y, además, hospedarlo en mi VPS, para aprovechar lo que tengo.
Notarán, quizás, que esta página se comporta diferente a mi blog viejo,
esto es, principalmente, porque esta es una pagina estática...&lt;/p&gt;
&lt;p&gt;... Sí!, así es, 100% estática, lo cual quiere decir que no tengo base de datos,
no me preocupo por una interfaz de administración, mucho menos debo ocuparme en
mantener la seguridad de mi Blog a nivel de aplicación (un dolor de cabeza menos)
y, lo mejor de todo, &lt;strong&gt;tampoco debo editar HTML cada vez que quiero publicar&lt;/strong&gt;. Pero,
un momento, es una página estática, entonces:&lt;/p&gt;
&lt;div class="section" id="como-funciona"&gt;
&lt;h2&gt;¿Cómo funciona?&lt;/h2&gt;
&lt;p&gt;Fácil, quienes me conocen saben que estoy muy metido desarrollando en &lt;a class="reference external" href="http://python.org"&gt;Python&lt;/a&gt;
por ello, no tenía sentido para mi aprender a mejorar una herramienta basada en php
como lo es Wordpress. Por mi mente pasaron varios CMS basados en Python, como &lt;a class="reference external" href="http://mezzanine.jupo.org/"&gt;Mezzanine&lt;/a&gt;
&lt;a class="reference external" href="https://www.django-cms.org/"&gt;django-cms&lt;/a&gt; e incluso &lt;a class="reference external" href="http://plone.org/"&gt;Plone&lt;/a&gt; para generar mi Blog, pero ninguno cubrió mis expectativas,
unos por ser muy difíciles de modificar y otros por ser muy complejos de utilizar. Entonces
luego pensé: &amp;quot;hey!, soy programador!, programaré mi blog&amp;quot;, pensé en usar &lt;a class="reference external" href="http://www.cherrypy.org/"&gt;CherryPy&lt;/a&gt; + &lt;a class="reference external" href="http://www.makotemplates.org/"&gt;Mako&lt;/a&gt; +
Algún ORM, pero me iba a tardar demasiado, hasta que mi buen amigo Carlos Gustavo Ruíz me llegó
con la solución definitiva: &lt;a class="reference external" href="http://docs.getpelican.com/en/3.0/"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Pelican es un generador de páginas estáticas, además, basado en Python. Simplemente se le indica un
tema que debe estar desarrollado en el sistema de plantillas &lt;a class="reference external" href="http://jinja.pocoo.org/docs/"&gt;Jinja2&lt;/a&gt;, también Python. El contenido
HTML lo genera a partir de archivos formateados en reStructuredText (.rst), que es un lenguaje de marcado
para dar formato a texto (como LaTeX), asociando el texto y las distintas marcas rst con etiquetas HTML
o clases css.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="y-cuales-son-las-ventajas"&gt;
&lt;h2&gt;Y, ¿cuáles son las ventajas?&lt;/h2&gt;
&lt;p&gt;Bueno, para mi, las ventajas las enumero a continuación. Quizás todo lo que diré acá
no represente problema para otros, pero tal vez yo sea demasiado flojo:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Ya no debo pagar el servicio de hospedaje que tenía en NetQuatro, únicamente pago $9/mes
por mi VPS, que no sólo corre este blog, sino también varias instancias de &lt;a class="reference external" href="http://trac.edgewall.org/"&gt;Trac&lt;/a&gt; para
llevar control de algunos proyectos personales, así que correr todo esto por $9/mes, creo
que es una ganga.&lt;/li&gt;
&lt;li&gt;No dependo de que alguien arregle bugs en un CMS para estar tranquilo de que no me lo van a
hackear&lt;/li&gt;
&lt;li&gt;No debo estar pendiente de bugs en mi aplicación que, seguramente, no tendré tiempo de solucionar&lt;/li&gt;
&lt;li&gt;Mi base de datos está basada en archivos rst, que puedo almacenar en mi computadora personal,
mi disco duro externo, un pen drive, dropbox, google drive, la PC de mi novia y no pesará
absolutamente &lt;strong&gt;nada&lt;/strong&gt; pues son archivos de texto plano.&lt;/li&gt;
&lt;li&gt;Aprendo un nuevo lenguaje (reStructuredText) que, además, me servirá para documentar mis
proyectos Python utilizando &lt;a class="reference external" href="http://sphinx-doc.org/"&gt;Sphinx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Si quiero migrar mi sitio web a otro servicio de hospedaje, basta con copiar los archivos HTML
a la nueva ubicación y listo, sin complicarme haciendo migraciones fastidiosas de base de datos.&lt;/li&gt;
&lt;li&gt;Si quiero activar comentarios, pues agrego un plugin de &lt;a class="reference external" href="http://disqus.com/"&gt;Disqus&lt;/a&gt; y ellos se preocupan por
el tema de la seguridad y el almacenamiento de esos comentarios, mientras que mi VPS sigue
con la misma carga y espacio disponible en disco.&lt;/li&gt;
&lt;li&gt;El tema por defecto es bastante decente y, creo, que no lo cambiaré en un buen tiempo.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Creo que es todo, realmente gracias Carlos por tu recomendación&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Personal"></category><category term="Blog"></category><category term="Retomando"></category></entry><entry><title>Testing: la etapa olvidada.</title><link href="http://iferminmontilla.com/testing-la-etapa-olvidada.html" rel="alternate"></link><updated>2012-07-19T12:50:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-07-19:testing-la-etapa-olvidada.html</id><summary type="html">&lt;p&gt;En esta oportunidad, vengo a hablarles de una etapa del
desarrollo que suele ser olvidada y marginada por la mayoría de los
desarrolladores que conozco: las pruebas. En&amp;nbsp;&lt;a class="reference external" href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, la compañía en
la que trabajo actualmente, llevamos un tiempo hablando acerca de
usar&amp;nbsp;&lt;a class="reference external" href="http://es.wikipedia.org/wiki/Desarrollo_guiado_por_pruebas"&gt;TDD&lt;/a&gt;&amp;nbsp;(Test Driven Development o Desarrollo Guiado por Pruebas)
como metodología de desarrollo, en esta metodología, las pruebas
unitarias juegan un papel principal, incluso hasta protagónico, pues son
el motor del desarrollo del proyecto. Aún cuando no es oficial el hecho
de que desarrollaremos utilizando esta metodología, personalmente me
tomé en serio el hecho de probar suerte ejecutando mis tareas de
programación guiadas por pruebas. En general, el flujo de trabajo en TDD
es el siguiente:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Elegir un requerimiento:&amp;nbsp;&lt;/strong&gt;dependiendo de la metodología de
gestión de proyecto, será distinto este proceso, en nuestro caso,
implementamos una versión modificada de SCRUM, por lo que lo primero
que se hace es tomar uno de los requerimientos seleccionados para el
sprint que está en desarrollo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir las pruebas unitarias:&amp;nbsp;&lt;/strong&gt;normalmente, el requerimiento
tiene unas características que deben ser cumplidas, estas pruebas
deben asegurarse de que dichas condiciones sean cumplidas. Es decir,
una pieza de código lleva el programa de un estado A, a un estado B,
la prueba deba asegurarse de que el estado B sea alcanzado
completamente.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Escribir la implementación:&amp;nbsp;&lt;/strong&gt;lógicamente, si ejecutamos las
pruebas sin la implementación, todas van a fallar. En este paso &amp;quot;se
le pone carne al esqueleto&amp;quot;, es decir, de le agrega cuerpo a las
funcionalidades cuyas pruebas fueron escritas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ejecutar las pruebas automatizadas:&amp;nbsp;&lt;/strong&gt;una vez codificado, se
corren las pruebas y se realizan ajustas hasta asegurarse de que
todas las pruebas pasan de manera satisfactoria.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refactor:&amp;nbsp;&lt;/strong&gt;se realizan ajustes para eliminar la duplicación,
reducir el acoplamiento y aumentar la cohesión.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Actualizar la lista de requerimientos:&amp;nbsp;&lt;/strong&gt;se marca el
requerimiento como terminado.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Usualmente el proceso de desarrollo se lleva a cabo al revés, es decir,
primero se escribe la funcionalidad y luego se prueba. El problema de
este enfoque es el siguiente:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Muchas veces por cuestiones de tiempo y prisa por entregar,
simplemente se codifica la funcionalidad y se prueba de manera
empírica y no se deja alguna garantía de que esa pieza de software
funciona de manera correcta.&lt;/li&gt;
&lt;li&gt;No se validan todos los casos de prueba, ya sea que se pruebe
utilizando la funcionalidad o escribiendo pruebas unitarias una vez
codificada la pieza que se desea probar.&lt;/li&gt;
&lt;li&gt;Quien codifica la funcionalidad sabe lo que está bien y lo que está
mal y, por la prisa de entregar, no validará los casos en los que
sabe que falla pues, dependiendo de la metodología, cuando algo falle
puede retomarse por mantenimiento y bug-fixing.&lt;/li&gt;
&lt;li&gt;En equipos de desarrollo pequeños, es el mismo desarrollador quien
escribe las pruebas y si la carga de trabajo es muy alta, no se
prueba de manera correcta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Personalmente me ha ocurrido que al desarrollar primero y escribir las
pruebas después, termino validando únicamente mis casos base, que es lo
que debería ocurrir la mayor parte del tiempo, pero los casos borde
quedan sin ser validados y, cuando llega el momento en que algún usuario
cae dentro de estos casos y el software falla, debo volver sobre esa
funcionalidad que, usualmente, está poco documentada (la documentación
es otra de las etapas olvidadas por nosotros los desarrolladores), la
escribí hace algún tiempo y no recuerdo bien cuál fue la lógica o, peor
aún, la escribió otro desarrollador y no tengo ni la más remota idea de
qué fue lo que hizo y, además, tengo otras cosas que hacer en el
momento, por lo que simplemente terminaba escribiendo un parche
específico para validar lo que estaba ocurriendo en el momento y
solventar el problema particular. Si existía más de un caso borde sin
validar, este proceso se podía repetir N veces. En el poco tiempo que
tengo probando seguir el esquema que propone TDD, mi manera de
enfrentarme a los problemas de desarrollo ha experimentado varios
cambios y he visto las siguientes ventajas:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;El escribir las pruebas primero, requiere que tenga muy claro el
requerimiento y las condiciones que deben ser satisfechas, por lo
tanto, empiezo a codificar la funcionalidad con una idea más clara de
lo que debo hacer.&lt;/li&gt;
&lt;li&gt;A medida que voy escribiendo las pruebas unitarias y validando los
casos de prueba, surgen casos borde que, quizás, al principio no
había considerado. Al final, tengo una validación completa de mi
código y una mayor seguridad en que lo que hice está bien y funciona.&lt;/li&gt;
&lt;li&gt;Al desarrollar la funcionalidad como tal con una idea más clara de lo
que cubre el requerimiento, puedo separar el código en módulos que
ejecuten cada uno de los pasos necesarios para cubrirlo de manera
satisfactoria.&lt;/li&gt;
&lt;li&gt;Al tener todos los casos de prueba definidos y, con ello, el
requerimiento bien claro y definido, no escribo código de más,
simplemente me concentro en cubrir la funcionalidad y todo el código
que escribí se utiliza para ello.&lt;/li&gt;
&lt;li&gt;La cantidad de bugs en el código que produzco ha reducido
considerablemente.&lt;/li&gt;
&lt;li&gt;A la hora de alguna falla, las mismas pruebas me ayudan a cercar el
error.&lt;/li&gt;
&lt;li&gt;Si agrego código que rompe una funcionalidad previa, las mismas
pruebas me indican qué está fallando y dónde, por lo que puedo hacer
refactor inmediatamente y &amp;nbsp;hacer mis módulos más ortogonales entre
sí.&lt;/li&gt;
&lt;li&gt;Si otro desarrollador debe utilizar lo que yo desarrollé, el código
lo entrego con una garantía de que lo que hace, lo hace bien.&lt;/li&gt;
&lt;li&gt;Cumplo con todas las etapas del desarrollo de software y ninguna
queda incompleta.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En lo personal, la manera de trabajar que propone TDD me ha funcionado
bastante bien, la única desventaja fue que al inicio de mi experimento
no tenía mucha experiencia con frameworks o librerías para el desarrollo
de pruebas, más allá de algunas pruebas unitarias que hice durante la
universidad en los cursos de Ingeniería del Software utilizando JUnit en
Java, por lo que debí cubrir una curva de aprendizaje. Una vez hecho
esto, todo fluyó mucho más rápido y siento que soy más productivo.
Trataré de publicar un par de tutoriales de las herramientas que he
usado recientemente para ver si motivo a alguien más a utilizarlas y a
tomar un poco más en serio las pruebas de software pues, aunque en la
universidad las mencionan como una etapa importante en algunos cursos,
muy pocas personas en la calle toman realmente en serio este recurso tan
útil.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Actitud del Programador"></category><category term="desarrollo de software"></category><category term="informática"></category><category term="metodología"></category><category term="testing"></category></entry><entry><title>Del comportamiento en público y otros males</title><link href="http://iferminmontilla.com/del-comportamiento-en-publico-y-otros-males.html" rel="alternate"></link><updated>2012-07-18T19:57:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-07-18:del-comportamiento-en-publico-y-otros-males.html</id><summary type="html">&lt;p&gt;Mini entrada de desahogo pues estoy realmente molesto por lo que acá
contaré. Lo siento, debía compartirlo. &amp;nbsp;Hoy, viajando en el metro, una
señora cuya mejor descripción es, por sus maneras es, de barrio (sin
ánimos de sonar clasista o racista o algo parecido), iba con su hija,
sentadas en los asientos del vagon, la niña iba comiendo una de esas
bolsas que venden de mango con adobo y otras cosas cuyo olor es, para
mi, repugnante (pero entre gustos y colores...), la cosa es que, no
importa si iba comiendo caviar, el hecho es que comer en el metro está
prohibido. No conforme con eso, a la jóven en cuestión se le cae la
bolsa y bota todo el contenido en el piso del vagón y, para colmo,
cuando la niña hace el ademán de agacharse a recogerlo, la madre la toma
del brazo y le dice &amp;quot;no mija, deje eso ahí...&amp;quot;. Realmente estoy sin
palabras, no conforme con que comes en el metro, que no está permitido,
¿botas basura y no la recoges?, definitivamente el rancho se lleva en la
cabeza.&lt;/p&gt;
</summary></entry><entry><title>Graduado, ¿y ahora?</title><link href="http://iferminmontilla.com/graduado-y-ahora.html" rel="alternate"></link><updated>2012-06-27T10:59:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-06-27:graduado-y-ahora.html</id><summary type="html">&lt;p&gt;Bueno, vengo con otra reflexión respecto a qué ocurre al culminar la
carrera a nivel universitario, quiero empezar aclarando que acá expondré
mi (¿poca?) experiencia personal y este artículo estará marcado por mi
manera particular de ver las cosas que no necesariamente resulta ser la
de todos.&lt;/p&gt;
&lt;p&gt;Realmente no hace mucho que salí de la Universidad al campo
laboral formalmente, aunque durante mis años de estudiante trabajé en un
par de cosas. Parte de mi filosofía y experiencia durante la carrera ya
la he escrito en un&amp;nbsp;artículo anterior, y en&amp;nbsp;otro bastante
reciente, sin embargo, muchas cosas van cambiando a lo largo del
tiempo, no es que sea un profesional muy experimentado, pero, espero que
estas líneas le sirvan a alguien para guiarse, eso si, sin echarme la
culpa.&lt;/p&gt;
&lt;p&gt;Particularmente, mientras estuve estudiando y trabajando, tuve un
pequeño complejo de inferioridad por no estar aún graduado, aquí en
Venezuela, como se dice en criollo, &amp;quot;la gente come mucho título&amp;quot;, es
decir, sin el título no eres nadie, sin el certificado, no sabes. Ahora,
acabando de salir, el complejo es el mismo, pero por estar &amp;quot;recién
graduado&amp;quot;. Esas dos etiquetas son temas sociales muy graves, he
conseguido TSU que saben mucho más que muchos Ingenieros que conozco y estudiantes que
pueden resolver un problema mejor que un profesional ya graduado, por
ello, no hay que acomplejarse por estar en alguna de esas situaciones,
al final, lo que le interesa a la empresa es alguien que haga el trabajo
y que pueda hacerlo bien, mientras, tanto las empresas como los
profesionales, no entiendan esto, el mundo laboral estará plagado de
piratas con título y gente brillante que, o bien está por obtenerlo o,
por alguna razón no les fue posible, la etiqueta de &amp;quot;recién graduado&amp;quot;,
debería significar &amp;quot;soy joven y puedo aprender rápido, contrátame&amp;quot; y no
&amp;quot;no tengo experiencia, explótame&amp;quot;.&lt;/p&gt;
&lt;p&gt;Esos mismos complejos, me llevaron a
aceptar trabajos con poca paga y muchas responsabilidades, cobrar poco
por desarrollar proyectos para algunos clientes y no decir nada, ante
esto, no me queda más que decir, no se dejen explotar, sean pasantes o
profesionales recién graduados, su trabajo vale, no trabajen tiempo
extra gratis, a menos que sea realmente necesario o sea su culpa,
respeten su horario de trabajo, sean los primeros en llegar, pero
también salgan a la hora, tienen familias, amigos, novias con quienes
compartir, quizás puedan dedicar parte de ese tiempo, también, a algún
pasatiempos o a desarrollar algún proyecto personal o para algún cliente
bajo la figura de &amp;quot;freelancer&amp;quot;, utilicen su trabajo como un gimnasio
para poner el forma el músculo de programación, para agarrar experiencia
y conocimiento, pero no lo apliquen sólo allí, citando a mi amigo Nhomar
Hernández, &amp;quot;hay que trabajar cada día como si fuera el último&amp;quot;, pero no
sólo en una cosa, hay que diversificar.&lt;/p&gt;
&lt;p&gt;Una vez graduados, pensamos que
dejaremos de estudiar pero, en realidad, apenas empezamos, cada proyecto
puede enviarnos varios meses a wikipedia o hacernos sumergir en una
serie de libros y conceptos que, si bien puede que no sean técnicos de
computación, forman parte del contexto del sistema y debemos manejarlos,
por ejemplo, durante mi breve paso por el mundo de los ERP cuando
trabajé en&amp;nbsp;&lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt;, tuve que aprender conceptos de contabilidad e
inventarios, incluso características de equipos de refrigeración para un
proyecto, además de estudiar e investigar muchísimo sobre las
herramientas usadas en la empresa pues eran nuevas para mi (Python y
OpenObject, la plataforma de OpenERP). En esta carrera, básicamente,
nunca dejamos de estudiar y aprender, actualmente, en mi actual trabajo
en&amp;nbsp;&lt;a class="reference external" href="http://zava.com.ve"&gt;Zava&lt;/a&gt;, me toca investigar sobre la cultura italiana alrededor del
mundo y las tendencias actuales de la misma, además del framework
utilizado para el desarrollo del proyecto (Django). Finalmente, recuerdo
algo que me dijo un buen amigo, Tomás Henríquez: &amp;quot;los primeros empleos
te definen, mosca con lo que eliges&amp;quot;, ciertamente, los primeros empleos
definen quien serás profesionalmente, por ello, si en los primeros tres
trabajos programaste en Java o en PHP, o administraste servidores, muy
probablemente para el cuarto te busquen para hacer eso mismo.&lt;/p&gt;
&lt;p&gt;Ciertamente, en el mismo orden de ideas de Tomás, &amp;quot;es preferible pasar 3
o 4 meses desempleado que trabajar en algo que no te gusta&amp;quot;. El proceso
de hacer tu &amp;quot;plan de carrera&amp;quot; debe comenzar antes de graduarte, debes
pensar qué quieres hacer, en mi caso, quiero especializarme en
Desarrollo de Software, un campo muy competitivo, por ello, seleccioné
herramientas que no fueran muy comunes en el área, de esta manera te
diferencias del resto, claro que se programar en PHP y Java (en .NET no
por un tema de principios) pero todo el mundo programa en PHP, .NET y
Java, por lo que en un primer momento seleccioné Perl como el lenguaje
en el que me especializaría, empecé a hacer tutoriales, leer libros y
hacer algunos programas utilizando las librerías del CPAN, esto cambió
cuando entré en&amp;nbsp;&lt;a class="reference external" href="http://vauxoo.com/"&gt;Vauxoo&lt;/a&gt;&amp;nbsp;y aprendí Python, mi actual hacha de
batalla, por ahora, mi plan de carrera es especializarme en Desarrollo
Web, en todos sus campos, Back-End y Front-End: desde servicios web y
web semántica, hasta RIA, un buen programador debe ser versátil y
adaptarse a cualquier parte del proyecto. Para cerrar, quiero aclarar
que con esto último no estoy diciendo que se casen con una tecnología o
un lenguaje en particular, aprendan de todo un poco, sean buenos, pero
hay que especializarse y ser excepcionalmente bueno en algo, yo elegí
Desarrollo en Python, y estoy trabajando en ello, también programo en
PHP, Java, Perl y C/C++ si es necesario, pero mi principal herramienta
es Python y, aún así, tengo intenciones de aprender Ruby.&lt;/p&gt;
</summary><category term="Actitud del Programador"></category><category term="carrera"></category><category term="opinión"></category><category term="personal"></category></entry><entry><title>Una nueva etapa se cierra</title><link href="http://iferminmontilla.com/una-nueva-etapa-se-cierra.html" rel="alternate"></link><updated>2012-06-23T01:10:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2012-06-23:una-nueva-etapa-se-cierra.html</id><summary type="html">&lt;p&gt;He tenido un poco abandonado el&amp;nbsp;blog&amp;nbsp;debido a mi trabajo
especial de grado (TEG) y a mi nuevo trabajo en&amp;nbsp;Zava, pero poco a poco
he ido adelantando cosas y hoy conseguí algo de tiempo para escribir las
últimas cosas sobre las que he estado reflexionando las últimas semanas
(o meses).&lt;/p&gt;
&lt;p&gt;Bien, tengo la satisfacción personal de haber desarrollado
una buena tesis, obtuve una calificación de 19 puntos con mención
honorífica, al jurado pareció haberle gustado mucho el trabajo que hice,
mi tutor, el&amp;nbsp;Prof.&amp;nbsp;Wilmer&amp;nbsp;Pereira, también quedó muy satisfecho con el
resultado, igual que mi colaborador/asesor/amigo,
el&amp;nbsp;Prof.&amp;nbsp;Carlos&amp;nbsp;Pérez&amp;nbsp;Díaz, digamos que estoy cerrando otra etapa de mi
vida con broche de oro, a pesar de tardar más de 5 años en culminar mis
estudios de Ingeniería en Informática, estoy muy feliz con todo lo que
aprendí y compartí con mis profesores, algunos, verdaderos maestros, con
mis compañeros y amigos, especialmente
con&amp;nbsp;Ronald&amp;nbsp;Oribio,&amp;nbsp;Khaterine&amp;nbsp;Castellano,&amp;nbsp;Viviana&amp;nbsp;Trujillo,&amp;nbsp;Gerardo&amp;nbsp;Barcia&amp;nbsp;y&amp;nbsp;Jhonatan&amp;nbsp;Trujillo.
También con todos los que les dí clases en mis días de preparador y
asistente docente:&amp;nbsp;Ayleen&amp;nbsp;Posadas,&amp;nbsp;Karen&amp;nbsp;Barreto,&amp;nbsp;Héctor&amp;nbsp;Sam,
Juan&amp;nbsp;Perozo,&amp;nbsp;Alfredo&amp;nbsp;Nava,&amp;nbsp;Oswaldo&amp;nbsp;Bracho, muchísima gente hizo mi paso
por la universidad, una etapa muy especial, sobre todo mi
novia,&amp;nbsp;Giselle&amp;nbsp;Bracamonte, en mi último semestre, puede que quien esté
leyendo esto no conozca a quienes menciono, pero realmente no me
importa.&lt;/p&gt;
&lt;p&gt;Ahora que cierro este ciclo, hay muchas cosas sobre las que
reflexionar, sobre todo ahora cuando tengo ya un poco más de un año
trabajando, desarrollando software, programando,
diseñando/arquitectando&amp;nbsp;soluciones, investigando y, a veces, sufriendo
por la falta de sueño, pero eso será en otro artículo, en este me
gustaría reconocer a aquellos profesores que se ganaron mi respeto
dentro del aula y tuve el gusto de ganarme su amistad fuera de ella.
Salimos de la universidad creyendo que lo sabemos todo y, en realidad,
lo sabemos, pero al mismo tiempo no.&amp;nbsp;Permítanme&amp;nbsp;explicarme, conocemos la
teoría, sabemos lo que es una clase, un objeto, sabemos lo que son
pruebas unitarias, podemos diseñar e implementar un modelo de datos
relacional, podemos, literalmente, &amp;quot;echar código&amp;quot;, pero la habilidad de
&amp;quot;programar&amp;quot;, se va adquiriendo con el tiempo, de la misma manera que la
habilidad de &amp;quot;entonar&amp;quot; un servidor o una red. Acabados de salir de la
universidad, únicamente, tenemos las bases, queda de nuestra parte
terminar de construir el edificio. Para mi, los profesores quienes,
realmente, me ayudaron a afianzar esas bases fueron:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Lúcia&amp;nbsp;Cardoso&lt;/strong&gt;&amp;nbsp;(en Sistemas de Base de Datos I y&amp;nbsp;II), con ella
aprendí que ser un Ingeniero en Informática, no es sólo programar,
esas líneas y secuencias de instrucciones, normalmente, tienen el
objetivo de satisfacer las necesidades de información de &amp;quot;alguien&amp;quot;,
por ello, debemos preocuparnos por cada aspecto de nuestra solución,
desde el modelo de datos hasta la manera de presentarlos para que se
conviertan en información.&amp;nbsp;Un buen modelo de datos da un buen soporte
a la información que manejará nuestro programa y nos facilitará la
vida en capas superiores. Es además, una profesora muy exigente y
tiene fama en los pasillos de ser uno de los filtros de la carrera,
una fama muy bien ganada. Hoy, agradezco enormemente su nivel de
exigencia.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Carlos&amp;nbsp;Barroeta&lt;/strong&gt;&amp;nbsp;(en Ingeniería y Desarrollo del Software), con él
aprendí principios vitales para cualquier programador: especialmente
&amp;quot;No&amp;nbsp;reinventar&amp;nbsp;la rueda&amp;quot;, si hay algo ya probado y funciona, ¿por qué
lo usarlo y ahorrarnos trabajo?. Temas como Patrones de Diseño,
Programación Orientada a Objetos, Pruebas de Software, Separación por
Capas y Metodologías Ágiles fueron el día a día en estas asignaturas.
Es famoso en la Escuela por ser un entusiasta de las nuevas
tecnologías y los Stack-Frameworks que facilitan la vida
del&amp;nbsp;desarrollador, hoy agradezco que haya puesto tanto empeño en
explicar esos conceptos y en asegurarse de que los entendiera (a
través de proyectos prácticos y complejas preguntas en los exámenes),
de no haber sido así, hoy probablemente sería un programador terrible
y sin ganas de superarse.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Darío&amp;nbsp;León&amp;nbsp;&lt;/strong&gt;(en Sistemas de Operación), aprendí cómo funciona a
bajo nivel un sistema operativo. Los conceptos de Cambio de Contexto,
Planificación de Procesos, qué hace&amp;nbsp;el&amp;nbsp;Kernel&amp;nbsp;y cuáles son los
componentes y servicios de un Sistema Operativo, aprendí de
administración básica de sistemas Un*x y, creo que una de las cosas
que hoy me quedan, aprendí a utilizar la herramienta que uso hoy para
escribir cada línea de código que produzco: el editor&amp;nbsp;vim.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rodolfo&amp;nbsp;Campos&amp;nbsp;&lt;/strong&gt;(en Sistemas Distribuidos), aprendí varios
conceptos macro en cuanto a coordinación de sistemas paralelos (como
un&amp;nbsp;clúster) y distribuidos (como un&amp;nbsp;grid): algoritmos de reloj,
sincronización, elección del líder, protocolos de comunicación,
redundancia y tolerancia a fallos. Fue una de las materias que más
disfruté de la carrera, es realmente increíble cómo puede uno, como
ingeniero, hacer posible que dos dispositivos en lugares
geográficamente distintos puedan coordinar acciones para lograr una
tarea en común y, además, que todo sea transparente para el usuario.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wilmer&amp;nbsp;Pereira&lt;/strong&gt;, aunque nunca me dio clases formalmente, fue mi
tutor de tesis y mentor en el área de investigación, siempre lo he
considerado un modelo a seguir por todo el conocimiento que tiene y
por su humildad y sencillez a la hora de hablar con un alumno o con
cualquier otra persona, es realmente una persona brillante que a
veces pareciera vivir en su propio mundo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sus lecciones académicas y personales son muy valiosas, no puedo más que
decirles: MUCHAS GRACIAS!, espero llegar a ser al menos la mitad de
buenos de lo que ustedes son.&lt;/p&gt;
</summary><category term="opinión"></category><category term="universidad"></category></entry><entry><title>¿Por qué flashear un teléfono Android?</title><link href="http://iferminmontilla.com/por-que-flashear-un-telefono-android.html" rel="alternate"></link><updated>2011-12-21T08:00:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-12-21:por-que-flashear-un-telefono-android.html</id><summary type="html">&lt;p&gt;Todo el tiempo escuchamos a los fanáticos de Android (entre los que me
incluyo) diciendo lo bueno que es el sistema operativo, todo lo que
permite, las libertades y potencialidades que ofrece, todo un conjunto
de benefinios y cosas &amp;quot;chéveres&amp;quot; que pueden hacerse con Android,
entonces, ¿por qué cambiar el sistema operativo de tu celular? Bueno,
existen varias razones, voy a listar las que yo, particularmente,
siempre doy a quienes me preguntan:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Funcionalidades bloqueadas:&lt;/strong&gt; muchas veces, los fabricantes
bloquean ciertas funcionalidades propias de Android, ya sea por
seguridad o por cuestiones de marketing. En el caso de Captivate, la
posibilidad de instalar aplicaciones fuera de Android Market (Fuentes
Desconocidas), no sólo viene bloqueada, sino que no aparece en el
menú.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aplicaciones inservibles:&lt;/strong&gt; cuando compramos un celular que fue
configurado para alguna operadora, como AT&amp;amp;T, T-Mobile o Vodaphone,
normalmente viene con varias aplicaciones propias de esa operadora
que, si somos de un país del 3er mundo, al liberarlo no nos servirán.
Algunas corren como servicios y, sean o no servicios, siempre estarán
ocupando un espacio en nuestro teléfono, espacio que podría ser
invertido en otro programa que sí utilicemos pues es normal queel ROM
no permita la desinstalación de esas aplicaciones propias de la
operadora.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mejorar el rendimiento:&lt;/strong&gt; todos los fabricantes producen sus
propios ROM, con características particulares y personalizables según
sea el caso, por ejemplo, la experiencia entre un dispositivo
Samsung, unoHTC y otro Motorola va a variar un poco, aún cuando los
tres dispositivos sean Andoid. Cada ROM es construido para ser
compatible con un número de dispositivos o con todos los dispositivos
de una serie, por ello, hay controladores (drivers) o aplicativos de
backend que nuestro equipo probablemente no esté usando, un ROM, es
específico para un dispositivo. Podemos verlo como que Android es un
Linux recién instalado mientras que el ROM que instalemos es el mismo
Linux, pero una vez que recompilamos el Kernel para que se adapte a
nuestrohardware. Pueden hacer la siguiente prueba: descarguen la
aplicación Quadrant[1] a través del Android Market y corran el
benchmark antes y después de instalar el ROM alternativo, verán una
diferencia radical en los resultados.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tener un sistema totalmente personalizable:&lt;/strong&gt; esto va un poco
alineado con la razón anterior, si bien es cierto que el mismo nivel
de personalización puede lograrse con el ROM de fábrica, es cierto
también que mientras más aplicaciones y temas tengamos instalados y
corriendo al mismo tiempo, se consumirán más recursos en el teléfono,
es por ello que cobra importancia tener un ROM optimizado y que
mejore el rendimiento del equipo, de esa manera, podemos tener
cientos de efectos configurados, modificar el manejador de ventanas y
configurar varias animaciones sin que nuestro telefono se cuelgue.
Además, muchos ROM ya vienen con acceso root activo, lo que nos
permite un mayor control sobre el dispositivo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Porque se puede:&lt;/strong&gt; si ninguna de las razones anteriores te
convencieron, esta quizás tampoco lo haga, es seguramente la más
banal de todas, ¿por qué hacer las cosas en linux por línea de
comandos cuando existe un frontend gráfico?, simplemente porque
puedo!, existen muchos ROM alternativos para cientos de dispositivos,
consigue uno para el tuyo, pruebalo, si no te gusta o note convence,
simplemente busca otra o regresa al ROM original, es lo hermoso del
mundo Android, te permite hacer esas cosas que en &amp;quot;otras plataformas&amp;quot;
no deja de ser simplemente unsueño.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[1] Quadrant es una aplicación que corre pruebas de estrés sobre
nuestro equipo, mide los resultados y nos muestra un gráfico
posicionando el dispositivo en comparación con otros.&lt;/p&gt;
</summary><category term="Android"></category><category term="informática"></category><category term="Software Libre"></category></entry><entry><title>Limpiando la torta e instalando Cyanogenmod 7</title><link href="http://iferminmontilla.com/limpiando-la-torta-e-instalando-cyanogenmod-7.html" rel="alternate"></link><updated>2011-12-20T10:20:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-12-20:limpiando-la-torta-e-instalando-cyanogenmod-7.html</id><summary type="html">&lt;p&gt;Ya en la entrada anterior expliqué cómo hice para,
&amp;quot;inocentemente&amp;quot;, poner la torta mientras instalaba Cyanogenmod, ahora
explicaré paso a paso cómo lo reparé, luego de eso, explicaré cómo
procedí a instalar Cyanogenmod 7 en mi Samsung Captivate (AT&amp;amp;T Galaxy
S). El escenario era este: 2:00am, mucho sueño y ganas de dormir, un
poco frustrado porque mi flamante Captivate no era más que un
pisapapeles muy costoso, la &amp;quot;pantalla negra de la muerte&amp;quot; era una
perturbación en la fuerza realmente fuerte, era hora de invertir las
próximas horas en averiguar cómo solucionar el problema y, además, en
Linux: &lt;strong&gt;Unbricking&lt;/strong&gt; Lo primero que debía hacer era regresar mi
teléfono a su estado de fábrica, por lo que busqué (como un loco) algún
sitio web que tuviera para descargas el ROM original del Captivate, por
fortuna lo conseguí y lo respaldé en mi carpeta pública de Dropbox
(junto con otras cosas que menciono acá, si a alguien le hace falta,
puede pedirmelas y se las mando por mail). El primer reto era &amp;quot;romper el
ladrillo&amp;quot;, por fortuna existe una aplicación, desarrollada en java, que
se llama &lt;em&gt;OneClick Unbricker&lt;/em&gt;, simplemente conecté el teléfono a la
computadora, activé la aplicación y automáticamente el teléfono estaba
en su estado anterior, es decir, no respondía, pero al menos iniciaba y
me permitía entrar a modo de descarga, lo cual me permitió pasar al
siguiente paso. &lt;strong&gt;Instalando el ROM de fábrica&lt;/strong&gt; Luego de descargar el
ROM, hay que flashearlo en el dispositivo, para ello existe un
aplicativo llamado Odín, que sólo corre en Windows pero que no cunda el
pánico, Heimdall, un aplicativo similar, corre perfecto en linux, es un
programa similar a Odín, cuenta con interfaces para línea de comandos y
un frontend gráfico que no da problemas. Al descomprimir el firmware,
debemos conseguir los siguientes archivos:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;boot.bin: que lo colocamos en el campo &lt;em&gt;Primary Bootloader&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Sbl.bin: que corresponde con el campo &lt;em&gt;Secondary Bootloader&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;factoryfs.rfs: que es el sistema de archivos original&lt;/li&gt;
&lt;li&gt;zImage: que corresponde con la imagen del kernel&lt;/li&gt;
&lt;li&gt;param.lfs, dbdata.rfs, cache.rfs y modem.bin que van en los campos
del mismo nombre en el Heimdall&lt;/li&gt;
&lt;li&gt;firmware.xml: que va en el campo &lt;em&gt;recovery&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esto puede cambiar dependiendo de la versión del Heimdall, tengo
entendido que en la última versión se coloca el rar completo y él mismo
extrae los archivos que necesita. Una vez que tenemos todo listo,
iniciamos nuestro Galaxy S Cativate en modo Descarga, para ello
retiramos la batería, conectamos el equipo via USB, presionamos los dos
botones de volúmen y el de encendido mientras colocamos la batería y
luego liberamos el botón de encendido, cuando veamos una pantalla negra
con una señal en amarillo que dice &lt;em&gt;Download,&lt;/em&gt;&amp;nbsp; presionamos &lt;em&gt;Start&lt;/em&gt;en
el Heimdall&amp;nbsp;para flashear el firmware, una vez que la barra de progreso
llegue al final, el teléfono reiniciará y tendrá el firmware de fábrica.
&lt;strong&gt;Instalando Cyanogenmod 7&lt;/strong&gt; Antes de seguir, es recomendable que hagan
un respaldo completo del sistema, para que no les ocurra lo mismo que a
mi en caso de desastre, dicho esto, el procedimiento para instalar
&lt;em&gt;Cyanogenmod 7&lt;/em&gt;&amp;nbsp;es súper sencillo:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Descargamos la versión para nuestro dispositivo, junto con la versión
de google apps pues Cyanogen no las incluye debido a una exigencia de
Google de no incluir sus aplicaciones directamente en el ROM, sino
distribuirlas aparte.&lt;/li&gt;
&lt;li&gt;Descargamos el zImage de ClockWork Recovery y lo flasheamos con
Heimdall en el teléfono (también lo tengo en Dropbox).&lt;/li&gt;
&lt;li&gt;Colocamos ambos zip (si descargamos los dos) en el internal_sd del
teléfono y reiniciamos en modo Recovery, para ello apagamos el
teléfono y presionamos los botones de power, y losdos de volúmen al
mismo tiempo hasta que nos aparezca un menú.&lt;/li&gt;
&lt;li&gt;Hacemos un wipe de la data y del caché con las opciones
correspondientes (utilizamos los botones de volúmen para desplazarnos
por el menú y el botón de encendido para seleccionar).&lt;/li&gt;
&lt;li&gt;Luego, seleccionamos &lt;em&gt;install zip from SD.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Después, &lt;em&gt;choose zip from SD.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Seleccionamos el zip a instalar.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Debemos repetir los pasos 5, 6 y 7 para el zip de Google Apps si
deseamos instalarlo. Al reiniciar el teléfono, empezará a arrancar
Cyanogen, es importante que el teléfono &lt;strong&gt;no se apague&lt;/strong&gt;&amp;nbsp;durante este
proceso, lo digo por experiencia ;-), el primer arranque siempre tardará
un poco así que hay que tener algo de paciencia.&lt;/p&gt;
</summary><category term="Android"></category><category term="Sistemas Operativos"></category><category term="Software Libre"></category></entry><entry><title>Cómo NO instalar un nuevo ROM (Brickeando tu cel)</title><link href="http://iferminmontilla.com/como-no-instalar-un-nuevo-rom-brickeando-tu-cel.html" rel="alternate"></link><updated>2011-12-19T10:20:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-12-19:como-no-instalar-un-nuevo-rom-brickeando-tu-cel.html</id><summary type="html">&lt;p&gt;Bien, en este post pretendo resumir mi primera metida de
pata flasheando mi Samsung Captivate (Galaxy S versión AT&amp;amp;T) con
Cyanogenmod 7.&lt;/p&gt;
&lt;p&gt;Vale destacar, que este es el primero de una serie de
tres artículos sobre qué hacer y qué no hacer al flashear tu teléfono
celular con un mod basado en Android. He metido la pata muchas veces
haciendo tareas de administración con sistemas operativos, sobre todo en
Linux, he puesto la torta múltiples veces recompilando el Kernel,
resolviendo dependencias, instalando paquetes inestables o
experimentales, &amp;quot;limpiando&amp;quot; directorios del sistema, haciendo &lt;em&gt;exec rm
{}&lt;/em&gt;sin probar primero que el &lt;em&gt;find&lt;/em&gt;&amp;nbsp;me retorna el conjunto de datos
correcto, reconfigurando particiones, en fin, muchas novatadas de las
que uno aprende, o quizás no, pero son golpes que te dicen que has hecho
algo terriblemente mal y vas a pagarlo caro en horas nalga[1], pero esta
es la primera vez que me ocurre con un teléfono celular. Les enumero las
cosas que hice mal:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;NO hice Backup:&lt;/strong&gt;todos los foros en los que consulté antes de
embarcarme en esta aventura empezaban con un texto en letras rojas y
con un tamaño de fuente cuyo tamaño si estuviera definido por una
función, el límite tendería a infinito que rezaba lo siguiente:
&amp;quot;ANTES DE EMPEZAR A HACER ALGO RECUERDA HACER BACKUP&amp;quot;, un NAndroid no
quita mucho tiempo y es una muy buena práctica en caso de que ocurra
un desastre. Respaldar el ROM original del teléfono, además, es una
garantía de que puedes regresarlo a su estado de fábrica en caso que
quieras venderlo después o no te guste ningún ROM alternativo. En
fin, ya el desastre ocurrió y no tengo manera de regresar de
inmediato a mi configuración anterior.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Apagué el teléfono&lt;/strong&gt;&amp;nbsp;durante el primer arranque, si te dicen que no
lo hagas, es porque no debes hacerlo, durante el primer arranque
luego de instalar un ROM, el sistema operativo realiza ciertos
ajustes y revisa que todo esté OK antes de levantar, es por ello que
siempre el primer arranque tarda un poco más. Realmente no lo apagué,
lo dejé desconectado y con poca batería y, simplemente, se descargó,
cuando lo encendí de nuevo, me apareció el &amp;quot;Samsung Black Screen of
Death&amp;quot; que aparece en la cabecera de este artículo, mi Captivate no
reaccionaba, no entraba en modo descarga ni en modo de recuperación,
estaba muerto.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Wipe:&lt;/strong&gt;como no iniciaba, le hice un wipe a todo e intenté
nuevamente, esto no funciona, si antes no cargaba, ahora mucho menos,
medidas desesperadas ante situaciones desesperantes en las que, no
cabe duda, se aprende mucho.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Todo se resume en &amp;quot;si lo dicen, es por algo&amp;quot;&lt;/p&gt;
&lt;p&gt;[1] Horas nalga: término acuñado por el Prof. Jesús Darío León (con
quien cursé Sistemas de Operación en la Universidad) para hacer
referencia al tiempo que se invierte en investigar &amp;quot;cómo hacer...&amp;quot; para
luego &amp;quot;hacer&amp;quot;, ese tiempo no se es productivo como tal, por lo que no
pueden llamarse &amp;quot;horas hombre&amp;quot;, y como uno pasa mucho tiempo sentado
leyendo y probando diversas maneras de resolver el problema, quienes
sufren son las posaderas.&lt;/p&gt;
</summary><category term="Android"></category><category term="Sistemas Operativos"></category><category term="Software Libre"></category></entry><entry><title>Cosas que AMO de Python VI: Está en TODAS partes</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-vi-esta-en-todas-partes.html" rel="alternate"></link><updated>2011-11-30T07:40:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-11-30:cosas-que-amo-de-python-vi-esta-en-todas-partes.html</id><summary type="html">&lt;p&gt;Si, resistirse es inútil, donde sea que estés tendrás Python a la mano,
menos en Windows que debes instalarlo, pero lo interesante es que puedes
tenerlo de igual manera.&lt;/p&gt;
&lt;p&gt;Escogí el número 6 romano (VI) de manera
intencional para esta entrada ya que, con Python, pasa igual que con el
editor VI (&amp;quot;vi ai&amp;quot;), lo consigues en todos los ambientes Linux, UNIX y
GNU/Linux, desde Slackware hasta Linux Mint y desde FreeBSD hasta
Solaris, pasando obviamente por el &lt;strong&gt;no-tan-libre&lt;/strong&gt;, MacOS X que al
tomar ciertas cosas de FreeBSD es un sistema UNIX-Like, por lo que
contiente el editor VI y Python. No se resistan, programar en Python no
puede ser más fácil, si usas algún sistema *UN*X , simplemente abre VI
y programa en Python, luego ejecúta tu código utlizando el intérprete en
un terminal. Espero que estas publicaciones acerca de Python básico les
hayan parecido interesantes, hay muchas otras cosas que AMO de Python,
pero es mejor dejar este tópico hasta aquí y que cada quien continúe, si
así lo desea, con su investigación y aprendizaje particular, para
convencerlos creo que 6 es perfecto (chiste geek). Más adelante espero
tener nivel suficiente como para publicarles acerca de tópicos más
avanzados del lenguaje.&lt;/p&gt;
</summary><category term="Lenguajes"></category><category term="Programación"></category><category term="python"></category></entry><entry><title>Cosas que AMO de Python V: Introspección de objetos</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-v-introspeccion-de-objetos.html" rel="alternate"></link><updated>2011-11-29T08:31:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-11-29:cosas-que-amo-de-python-v-introspeccion-de-objetos.html</id><summary type="html">&lt;p&gt;Python, hace trivial lo que en otros lenguajes resulta complejo: la
introspección o reflexión de objetos. La reflexión o introspección de
objetos, es una técnica que permite a un programa cargar objetos que no
conoce, examinarlos y determinar sus variables de instancia y métodos
para trabajar con ellos.&lt;/p&gt;
&lt;p&gt;Python nos ofrece ciertas funciones para
examinar objetos y conocer las variables y métodos que contiene. Una de
ellas ya la he mencionado en un artículo anterior, la función
&lt;em&gt;dir()&lt;/em&gt;que nos devuelve todo lo que tiene expuesto el objeto que le
demos como argumento.&lt;/p&gt;
&lt;p&gt;Recordemos también que, en Python, todo,
absolutamente todo, es un objeto, por lo que el argumento de la función
puede ser, literalmente, cualquier cosa. Adicionalmente, Python cuenta
con funciones para conocer de qué tipo es un objeto y si un objeto es
&amp;quot;llamable&amp;quot; o no, mediante las funciones &lt;em&gt;type()&lt;/em&gt;y
&lt;em&gt;callable(),&lt;/em&gt;también con el atributo &lt;em&gt;__class__&lt;/em&gt;&amp;nbsp;podemos conocer a
cuál clase pertenece,&amp;nbsp;de manera que podemos llevar a cabo ciertas
acciones si un objeto es de cierto tipo, si contiene una función con
cierto nombre o incluso si alguna variable de instancia contiene cierto
valor, podemos llegar a tal nivel de detalle que podríamos evaluar si el
objeto contiene un método de nombre &amp;quot;x&amp;quot;, es del tipo &amp;quot;y&amp;quot; y tiene una
variable de instancia llamada &amp;quot;z&amp;quot; y tiene el valor &amp;quot;casa&amp;quot; y, en base a
eso, llevar a cabo cierta secuencia de acciones con ese objeto
particular. Ahora bien, hasta ahora, con Python, hemos visto que la
manera de acceder a los atributos y métodos de un objeto es, al igual
que en muchos lenguajes, de la forma
&lt;em&gt;objeto.atributo&lt;/em&gt;u&lt;em&gt;&amp;nbsp;objeto.función(),&lt;/em&gt;entonces, ¿cómo puedo llamar
métodos o evaluar variables de instancia si no las conozco previamente?,
que no cunda el pánico, Python me ofrece una función para extraer
atributos de un objeto, simplemente conociendo el nombre e indicándolo
como una cadena de caracteres, la función &lt;em&gt;getattr()&lt;/em&gt; a través de la
función &lt;em&gt;dir()&lt;/em&gt;&amp;nbsp;puedo obtener esa cadena de caracteres y utilizarla.
Pero, ¿qué ocurre con los métodos?, pues repito lo de siempre: &lt;strong&gt;en
Python, todo es un objeto&lt;/strong&gt;, así que puedo utilizar &lt;em&gt;getattr()&lt;/em&gt;para
obtener métodos también y llamarlos, tal como hicimos en un artículo
anterior. Obviamente, no puede ser todo tan caótico, usualmente se
establecen acuerdos de implementación para, posteriormente, hacer que el
programa sea capaz de manejar un dominio acotado de objetos que pueden
ser cargados de manera aleatoria, cada uno, con características
previamente conocidas pero con comportamientos totalmente diferentes,
expliquemos todo esto con un ejemplo simple, tal como hemos venido
haciendo en entradas anteriores.&lt;/p&gt;
&lt;p&gt;Hagamos un ejemplo, programemos un
dispatcher (despachador) sencillo, supongamos que tengo una serie de
objetos que me interesa que, al ser recibidos, realicen cierta acción
determinada, por ejemplo, recibo un objeto y, si puede correr, que corra
sino, reviso si puede caminar y, si puede, que camine, caso contrario,
simplemente imprimo el &lt;em&gt;dir()&lt;/em&gt; del objeto para ver qué puedo hacer con
él.&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=fFSta6aA"&gt;&lt;/script&gt;&lt;p&gt;En el ejemplo, creamos tres clases muy sencillas, obviamente, en el
mundo real, las clases serán mucho más complejas. Mi clase &lt;em&gt;Dispatcher&lt;/em&gt;,
será la encargada de revisar los objetos y &amp;quot;si pueden correr&amp;quot;, entonces
ponerlos a correr, sino, simplemente informarme qué puedo hacer con ese
objeto. Fíjense en la línea 26, que incluso puedo asegurarme de que el
atributo al que se hace referencia sea una función, lo cual me permite
evitar errores en tiempo de ejecusión al intentar invocar una cadena de
caracteres, por ejemplo, como si fuera un objeto &amp;quot;llamable&amp;quot;. Todo esto
es especialmente útil si estamos desarrollando herramientas que trabajan
bajo el principio de &amp;quot;Convention over Configuration&amp;quot;.&lt;/p&gt;
</summary><category term="Lenguajes"></category><category term="Programación"></category><category term="python"></category></entry><entry><title>Configurando réplicas Maestro-Esclavo con Postgres</title><link href="http://iferminmontilla.com/configurando-replicas-maestro-esclavo-con-postgres.html" rel="alternate"></link><updated>2011-11-10T08:44:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-11-10:configurando-replicas-maestro-esclavo-con-postgres.html</id><summary type="html">&lt;p&gt;Muchas veces, por alguna razón, hacemos desde la capa de
aplicación cientos de validaciones y procesos que, si sabemos cómo,
podríamos delegar en el manejador de base de datos. Las validaciones de
reglas de negocio son un ejemplo muy frecuente de ello, tendemos, por
ejemplo, a implementar validaciones redundantes (en el caso de entornos
web) del lado del cliente, utilizando AJAX, y del lado del servidor,
utilizando el lenguaje de programación que más nos agrade. Esto, añade
un nivel de complejidad a nuestro sistema, cuando, muy tranquilamente,
podríamos delegar esa validación en nuestro manejador de base de datos a
través de un Trigger, con la ventaja de que si algún día, otro sistema
necesita conectarse a la base de datos, las reglas de negocio están
implementadas directamente en el manejador y, como ya estamos
acostumbrados, todo corre más rápido en el nivel más bajo. Ahora bien,
¿por qué empiezo diciendo todo eso?, simplemente por hacer referencia a
un ejemplo bastante común, en el que nosotros, programadores,
desarrolladores, ingenieros, o como quieran llamarnos, hacemos uso (o
quizás sub-uso) de un software muy sofisticado, como lo es un Manejador
de Base de Datos y, tendemos a pensar, que es sólo un pote para guardar
datos que, además, habla un lenguaje extraño llamado SQL. Otra de las
cosas que, algunas veces, hacemos y nos hacen parecer novatos es
actualizar dos servidores de base de datos distintos disparando
sentencias hacia los dos, o tres, o cuantos sean. Esto añade un nivel de
complejidad innecesario a nuestra aplicación, además de estar
fuertemente acoplado con la arquitectura física (hardware) del sistema
implementado, si el número de servidores a sincronizar cambia, será
necesario también realizar modificaciones a nivel de código o de
configuración del programa y, además, desaprovechamos la potencia que
nos ofrece un manejador de base de datos. PostgresSQL nos ofrece la
posibilidad de sincronizar dos servidores de base de datos mediante
Replicación. Existen distintos tipos de replicación de servidores, en
este caso, configuraremos un esquema Maestro-Esclavo, en el que mi
servidor Maestro, recibe y ejecuta todas las transacciones y, además,
actualiza a mi servidor Esclavo, que, únicamente, realiza consultas.
Empezamos por instalar la última versión disponible de Postgres,
utilizando el gestor de paquetes de nuestra distribución de Linux
favorita, para este ejemplo, utilicé Debian Wheezy (Testing) y Postgres
9.1.&lt;/p&gt;
&lt;div class="section" id="configurando-el-maestro"&gt;
&lt;h2&gt;Configurando el Maestro&lt;/h2&gt;
&lt;p&gt;El maestro, es el nodo que ejecuta todas las transacciones de base de
datos, digamos que puede realizar todas las operaciones CRUD. Empecemos
por establecer ciertos valores de configuración para el manejador en el
archivo /etc/postgresql/9.1/main/postgresql.conf. Debemos configurar los
siguientes valores:&lt;/p&gt;
&lt;p&gt;`` listen_addresses = '*' wal_level = hot_standby wal_sync_method = fsync max_wal_senders = 2 wal_keep_segments = 8``&lt;/p&gt;
&lt;p&gt;El parámetro &lt;em&gt;listen_addresses&lt;/em&gt; establece las direcciones IP de donde
mi servidor va a aceptar peticiones, este parámetro acepta valores
separados por coma o el caracter asterisco, como en este caso, para
especificar que va a aceptar peticiones de cualquier host, de no ser
así, sólo las IP listadas podrían sincronizar la base de datos. El valor
de &lt;em&gt;wal_level&lt;/em&gt;, donde &amp;quot;wal&amp;quot; quiere decir &amp;quot;Write Ahead Log&amp;quot; y es una
estrategia que implementan los manejadores para cumplir con las
propiedades de Atomicidad y Durabilidad de las transacciones (¿recuerdan
la regla ACID?) y consiste en escribir en un archivo de bitácora todas
las modificaciones realizadas a la base de datos. En Postgres existen
tres: &lt;em&gt;minimal&lt;/em&gt;, que omite algunas operaciones de escritura para hacer
las operacionas más rápido, pero no guarda información suficiente para
reconstruir la base de datos a partir de un archivo inicial y logs de
este tipo, &lt;em&gt;hot_standby&lt;/em&gt; y &lt;em&gt;archive&lt;/em&gt;, almacenan toda la información
necesaria para hacer la reconstrucción completa de los datos, pero
únicamente &lt;em&gt;hot_standby&lt;/em&gt; permite implementar replicación de base de
datos hacia servidores remotos. La opción &lt;em&gt;wal_sync_method&lt;/em&gt; es el
método que utilizará el manejador para forzar las actualizaciones
utilizando WAL. En este caso, utilizamos &lt;em&gt;fsync&lt;/em&gt; que se asegura de que
los cambios sean escritos físicamente en la base de datos copia, más
información sobre los métodos de sincronización disponibles puede
conseguirse en [1]. El parámetro &lt;em&gt;max_wal_senders&lt;/em&gt; establece el número
de sincronizaciones concurrentes que puede ejecutar el servidor.
Finalmente, &lt;em&gt;wal_keep_segments&lt;/em&gt;, establece el número de WAL LOGS que
el servidor guardará en el directorio pg_xlog, estos logs son
utilizados para realizar el las actualizaciones vía streaming. Una vez
hecho lo anterior, tenemos la configuración básica de Postgres para
hacer replicación Maestro-Esclavo vía streaming. Ahora, debemos agregar
una regla más de acceso al pg_hba.conf, para permitir a los esclavos
conectarse al servidor maestro:&lt;/p&gt;
&lt;p&gt;`` host replication all 10.1.1.8/32 trust``&lt;/p&gt;
&lt;p&gt;Con esa línea, estamos
configurando el servidor para que permita conexiones a todos los
usuarios con permiso de replicación desde la sub-red 10.1.1.8/32. Ahora,
generamos los WAL, para ello, ejecutamos lo siguiente:
`` postgres# SELECT pg_start_backup('1')`` Mientras eso esté ocurriendo,
en otro terminal, hacemos lo siguiente:
`` # cd /var/lib/postgresql/9.1 # tar czvf backup.tgz main`` Con esto,
estamos comprimiendo el directorio de datos de Postgres. Una vez hecho
esto, detenemos la generación de WAL:
`` postgres# SELECT pg_stop_backup()`` El asunto general se resume con
la siguiente ecuación: backup inconsistente + WAL = restauración a
estado consistente. Estos WAL, se generan en el directorio pg_xlog, y
debemos tomar el último que fue escrito.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configurando-el-esclavo"&gt;
&lt;h2&gt;Configurando el Esclavo&lt;/h2&gt;
&lt;p&gt;Lo primero que debemos hacer es sustituir el directorio de datos de esta
instancia de Postgres por el directorio de datos del Maestro. Luego,
creamos un directorio &lt;em&gt;recovery&lt;/em&gt;, donde copiaremos el último WAL del
directorio pg_xlog. Adicionalmente, debemos modificar el
postgresql.conf con las siguientes variables:&lt;/p&gt;
&lt;p&gt;`` hot_standby = on wal_level = hot_standby``&lt;/p&gt;
&lt;p&gt;Ahora, creamos un archivo
de configuración en la raíz del directorio de datos establecer las
siguientes opciones:&lt;/p&gt;
&lt;p&gt;`` standby_mode = 'on' primary_conninfo = 'host=[host_ip] port=5432 user=root password=[some_password]' restore_command = 'cp /var/lib/postgresql/9.1/main/recovery/%f %p'``&lt;/p&gt;
&lt;p&gt;Con esto le decimos al servidor que va a esperar réplicas de
&lt;em&gt;primary_conninfo&lt;/em&gt;, además, el &lt;em&gt;restore_command&lt;/em&gt; indica dónde se
encuentra el respaldo inicial inconsistente. Finalmente, nos aseguramos
de que los roles tengan permiso de replicación:&lt;/p&gt;
&lt;p&gt;`` postgres# SELECT * FROM pg_roles``&lt;/p&gt;
&lt;p&gt;y, de no tener permisos de
replicación, alteramos los roles necesarios para ello:&lt;/p&gt;
&lt;p&gt;`` postgres# ALTER ROLE nombre WITH REPLICATION``&lt;/p&gt;
&lt;p&gt;Una vez hecho todo
esto, ya hemos configurado un sistema de replicación Maestro-Esclavo
utilizando Postgres como sistema manejador de base de datos, y no hizo
falta una toalla para eso. Fácil ¿no?.&lt;/p&gt;
&lt;p&gt;[1] &lt;a class="reference external" href="http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html"&gt;http://developer.postgresql.org/pgdocs/postgres/runtime-config-wal.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2]`http://developer.postgresql.org/pgdocs/postgres/runtime-config-replication.html#GUC-HOT-STANDBY`_&lt;/p&gt;
&lt;/div&gt;
</summary><category term="Bases de Datos"></category><category term="informática"></category><category term="Postgres"></category><category term="Software Libre"></category></entry><entry><title>Algo sobre Dennis Ritchie</title><link href="http://iferminmontilla.com/algo-sobre-dennis-ritchie.html" rel="alternate"></link><updated>2011-10-18T12:34:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-10-18:algo-sobre-dennis-ritchie.html</id><summary type="html">&lt;p&gt;Quizás no sepas de quien se trata, es probable que hayas escuchado su
nombre alguna vez si (¿y sólo si?) estudias o estudiaste computación,
informática o alguna carrera similar.&lt;/p&gt;
&lt;p&gt;Aún así, si no eres computista,
seguramente utilizas algo basado en alguno de sus trabajos, sin importar
que utilices Windows, Linux o Mac OS, estás aprovechando algo del legado
de este genio. Dennis Ritchie falleció este 12 de octubre, a la edad de
70 años. Una semana despues de que perdiéramos a otra mente brillante,
pero del mundo de los negocios: el Sr. Steve Jobs. Ritchie, quien era
PhD en Ciencias de la Computación, fue uno de los desarrolladores
principales del sistema operativo UNIX y el diseñador del Lenguaje de
Programación C, co-autor del libro &amp;quot;The C Programming Language&amp;quot; junto
con Brian Kernighan, mejor conocido como &amp;quot;The K&amp;amp;R Book&amp;quot;, uno de los
mejores textos de referencia acerca del lenguaje. Si eres usuario de
UNIX, Linux o Mac OS, estás utilizando algo que se basa en uno de sus
trabajos, de hecho, en ambos. Galardonado en 1999 con el Premio Nacional
de Tecnología en los Estados Unidos, ganador del Turing de 1983, autor
de múltiples publicaciones en el campo de los Lenguajes de Programación
y las Ciencias de la Computación en general, investigador como forma de
vida, realmente hemos perdido a una de las mentes más brillantes del
siglo XX.&lt;/p&gt;
</summary><category term="opinión"></category></entry><entry><title>Cosas que AMO de Python IV: es autodocumentado</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-iv-es-autodocumentado.html" rel="alternate"></link><updated>2011-09-15T07:54:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-15:cosas-que-amo-de-python-iv-es-autodocumentado.html</id><summary type="html">&lt;p&gt;Confieso, confiésense, confesemos todos, todos somos adictos a Internet,
hasta un punto casi enfermizo. No se ustedes, pero si estoy en un lugar
sin Internet, o conexión de datos vía 3G, es como si me faltara el aire,
incluso, cuando se cae el servicio en mi casa o en la oficina, se me
quitan las ganas de trabajar.&lt;/p&gt;
&lt;p&gt;Y es que, sin Internet, ¿dónde rayos voy a
buscar información si me bloqueo?, tengo que usar un módulo nuevo y no
se qué objetos me ofrece, ¿cómo reviso el API en la página?, peor aún,
¿cómo busco en google?. Con Python, se acaba esa frustración de no poder
trabajar si no tengo una conexión a Internet, y la que es peor aún, la
frustración que produce tener una &lt;strong&gt;mala&lt;/strong&gt; conexión, de esas &lt;strong&gt;lentas&lt;/strong&gt;
a las que a veces nos acostumbramos. ¿Cómo?, gracias a las funciones
&lt;em&gt;dir()&lt;/em&gt; y &lt;em&gt;help()&lt;/em&gt;, una complementa a la otra, de hecho, una no tiene
sentido sin la otra. Ahora bien, ¿para qué sirven?, fácil, me dan acceso
a la documentación interna de Python, y por &amp;quot;documentación interna&amp;quot; me
refiero a la que está escrita en el código fuente de los módulos que
importo o en los objetos del core del lenguaje. Voy a detenerme un buen
rato explicando cómo es eso de la Autodocumentación Pythonica.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;dir():&lt;/em&gt; retorna una lista de cadenas de caracteres, que vienen
siendo los nombres de las variables y métodos que son visibles o
invocables, respectivamente, desde el objeto que le pase como
argumento.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;help():&lt;/em&gt; viene siendo el equivalente al &lt;em&gt;man&lt;/em&gt; en la línea de
comandos de Linux (*sh). Me muestra la información acerca del objeto
función que le proporcione como argumento, recordemos que, para
Python, &lt;strong&gt;todo&lt;/strong&gt; es un objeto.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En combinación, estas dos herramientas, junto con el terminal
interactivo de Python, son muy poderosas y de mucha ayuda, sobre todo en
el escenario que dibujé al principio, un lugar con una conexión pobre (o
ninguna) a Internet. Permítanme explicarles cómo: Supongamos que estamos
comenzando a dar nuestros primeros pasos con Python y queremos ver qué
podemos hacer con los tipos básicos en Python, específicamente, uno de
los más útiles: el diccionario. Simplemente, declaramos una variable de
tipo diccionario y le aplicamos &lt;em&gt;dir(),&lt;/em&gt; todo esto a través del terminal
interactivo de Python:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; dict = {}
&amp;gt;&amp;gt; dir(dict)
&lt;/pre&gt;
&lt;p&gt;O simplemente, vamos directo al grano:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; dir({})
&lt;/pre&gt;
&lt;p&gt;Lo anterior debería devolverme por pantalla lo siguiente:
['__class__', '__cmp__', '__contains__', '__delattr__',
'__delitem__', '__doc__', '__eq__', '__format__',
'__ge__', '__getattribute__', '__getitem__', '__gt__',
'__hash__', '__init__', '__iter__', '__le__',
'__len__', '__lt__', '__ne__', '__new__',
'__reduce__', '__reduce_ex__', '__repr__',
'__setattr__', '__setitem__', '__sizeof__', '__str__',
'__subclasshook__', 'clear', 'copy', 'fromkeys', 'get', 'has_key',
'items', 'iteritems', 'iterkeys', 'itervalues', 'keys', 'pop',
'popitem', 'setdefault', 'update', 'values'] Esa es la lista de los
nombres de todos los atributos y métodos que contiene mi clase Dict. Si
quiero leer la documentación de uno en particular, basta con aplicarle
&lt;em&gt;help(),&lt;/em&gt; por ejemplo:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; help({}.fromkeys)
&lt;/pre&gt;
&lt;p&gt;Va a mostrarme la documentación del método &lt;em&gt;fromkeys()&lt;/em&gt; de la clase Dict
del core de Python: Help on built-in function fromkeys: fromkeys(...)
dict.fromkeys(S[,v]) -&amp;gt; New dict with keys from S and values equal to v.
v defaults to None. Normalmente es corta y concisa. Puedo hacer esto no
sólo para clases de la librería estándar de Python, sino también para
módulos completos (incluso un módulo es un objeto, recuerden &lt;strong&gt;todo&lt;/strong&gt; en
Python es un objeto), por ejemplo:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; import pygame
&amp;gt;&amp;gt; dir(pygame)
&lt;/pre&gt;
&lt;p&gt;Va a mostrarme una lista con todo lo que contiene el módulo PyGame,
utilizado para desarrollo de videojuegos con Python: ['ACTIVEEVENT',
'ANYFORMAT', 'ASYNCBLIT', 'AUDIO_S16', 'AUDIO_S16LSB',
'AUDIO_S16MSB', 'AUDIO_S16SYS', 'AUDIO_S8', 'AUDIO_U16',
'AUDIO_U16LSB', 'AUDIO_U16MSB', 'AUDIO_U16SYS', 'AUDIO_U8',
'BIG_ENDIAN', 'BLEND_ADD', 'BLEND_MAX', 'BLEND_MIN', 'BLEND_MULT',
'BLEND_RGBA_ADD', 'BLEND_RGBA_MAX', 'BLEND_RGBA_MIN',
'BLEND_RGBA_MULT', 'BLEND_RGBA_SUB', 'BLEND_RGB_ADD',
'BLEND_RGB_MAX', 'BLEND_RGB_MIN', 'BLEND_RGB_MULT',
'BLEND_RGB_SUB', 'BLEND_SUB', 'BUTTON_X1', 'BUTTON_X2', 'Color',
'DOUBLEBUF', 'FULLSCREEN', 'GL_ACCELERATED_VISUAL',
'GL_ACCUM_ALPHA_SIZE', 'GL_ACCUM_BLUE_SIZE',
'GL_ACCUM_GREEN_SIZE', 'GL_ACCUM_RED_SIZE', 'GL_ALPHA_SIZE',
'GL_BLUE_SIZE', 'GL_BUFFER_SIZE', 'GL_DEPTH_SIZE',
'GL_DOUBLEBUFFER', 'GL_GREEN_SIZE', 'GL_MULTISAMPLEBUFFERS',
'GL_MULTISAMPLESAMPLES', 'GL_RED_SIZE', 'GL_STENCIL_SIZE',
'GL_STEREO', 'GL_SWAP_CONTROL', 'HAT_CENTERED', 'HAT_DOWN',
'HAT_LEFT', 'HAT_LEFTDOWN', 'HAT_LEFTUP', 'HAT_RIGHT',
'HAT_RIGHTDOWN', 'HAT_RIGHTUP', 'HAT_UP', 'HWACCEL', 'HWPALETTE',
'HWSURFACE', 'IYUV_OVERLAY', 'JOYAXISMOTION', 'JOYBALLMOTION',
'JOYBUTTONDOWN', 'JOYBUTTONUP', 'JOYHATMOTION', 'KEYDOWN', 'KEYUP',
'KMOD_ALT', 'KMOD_CAPS', 'KMOD_CTRL', 'KMOD_LALT', 'KMOD_LCTRL',
'KMOD_LMETA', 'KMOD_LSHIFT', 'KMOD_META', 'KMOD_MODE', 'KMOD_NONE',
'KMOD_NUM', 'KMOD_RALT', 'KMOD_RCTRL', 'KMOD_RMETA', 'KMOD_RSHIFT',
'KMOD_SHIFT', 'K_0', 'K_1', 'K_2', 'K_3', 'K_4', 'K_5', 'K_6',
'K_7', 'K_8', 'K_9', 'K_AMPERSAND', 'K_ASTERISK', 'K_AT',
'K_BACKQUOTE', 'K_BACKSLASH', 'K_BACKSPACE', 'K_BREAK',
'K_CAPSLOCK', 'K_CARET', 'K_CLEAR', 'K_COLON', 'K_COMMA',
'K_DELETE', 'K_DOLLAR', 'K_DOWN', 'K_END', 'K_EQUALS', 'K_ESCAPE',
'K_EURO', 'K_EXCLAIM', 'K_F1', 'K_F10', 'K_F11', 'K_F12',
'K_F13', 'K_F14', 'K_F15', 'K_F2', 'K_F3', 'K_F4', 'K_F5',
'K_F6', 'K_F7', 'K_F8', 'K_F9', 'K_FIRST', 'K_GREATER', 'K_HASH',
'K_HELP', 'K_HOME', 'K_INSERT', 'K_KP0', 'K_KP1', 'K_KP2',
'K_KP3', 'K_KP4', 'K_KP5', 'K_KP6', 'K_KP7', 'K_KP8', 'K_KP9',
'K_KP_DIVIDE', 'K_KP_ENTER', 'K_KP_EQUALS', 'K_KP_MINUS',
'K_KP_MULTIPLY', 'K_KP_PERIOD', 'K_KP_PLUS', 'K_LALT', 'K_LAST',
'K_LCTRL', 'K_LEFT', 'K_LEFTBRACKET', 'K_LEFTPAREN', 'K_LESS',
'K_LMETA', 'K_LSHIFT', 'K_LSUPER', 'K_MENU', 'K_MINUS', 'K_MODE',
'K_NUMLOCK', 'K_PAGEDOWN', 'K_PAGEUP', 'K_PAUSE', 'K_PERIOD',
'K_PLUS', 'K_POWER', 'K_PRINT', 'K_QUESTION', 'K_QUOTE',
'K_QUOTEDBL', 'K_RALT', 'K_RCTRL', 'K_RETURN', 'K_RIGHT',
'K_RIGHTBRACKET', 'K_RIGHTPAREN', 'K_RMETA', 'K_RSHIFT',
'K_RSUPER', 'K_SCROLLOCK', 'K_SEMICOLON', 'K_SLASH', 'K_SPACE',
'K_SYSREQ', 'K_TAB', 'K_UNDERSCORE', 'K_UNKNOWN', 'K_UP', 'K_a',
'K_b', 'K_c', 'K_d', 'K_e', 'K_f', 'K_g', 'K_h', 'K_i', 'K_j',
'K_k', 'K_l', 'K_m', 'K_n', 'K_o', 'K_p', 'K_q', 'K_r', 'K_s',
'K_t', 'K_u', 'K_v', 'K_w', 'K_x', 'K_y', 'K_z', 'LIL_ENDIAN',
'MOUSEBUTTONDOWN', 'MOUSEBUTTONUP', 'MOUSEMOTION', 'Mask', 'NOEVENT',
'NOFRAME', 'NUMEVENTS', 'OPENGL', 'OPENGLBLIT', 'Overlay', 'PREALLOC',
'PixelArray', 'QUIT', 'RESIZABLE', 'RLEACCEL', 'RLEACCELOK', 'Rect',
'SCRAP_BMP', 'SCRAP_CLIPBOARD', 'SCRAP_PBM', 'SCRAP_PPM',
'SCRAP_SELECTION', 'SCRAP_TEXT', 'SRCALPHA', 'SRCCOLORKEY',
'SWSURFACE', 'SYSWMEVENT', 'Surface', 'SurfaceType',
'TIMER_RESOLUTION', 'USEREVENT', 'UYVY_OVERLAY', 'VIDEOEXPOSE',
'VIDEORESIZE', 'YUY2_OVERLAY', 'YV12_OVERLAY', 'YVYU_OVERLAY',
'__builtins__', '__doc__', '__file__', '__name__',
'__package__', '__path__', '__rect_constructor',
'__rect_reduce', '__version__', '_check_darwin',
'_numericsndarray', '_numpysndarray', '_numpysurfarray', 'base',
'bufferproxy', 'cdrom', 'color', 'colordict', 'constants', 'cursors',
'display', 'draw', 'error', 'event', 'fastevent', 'font', 'get_error',
'get_sdl_byteorder', 'get_sdl_version', 'image', 'init', 'joystick',
'key', 'mask', 'mixer', 'mouse', 'movie', 'msg', 'numpyarray',
'overlay', 'packager_imports', 'pixelarray', 'quit', 'rect',
'register_quit', 'scrap', 'segfault', 'sndarray', 'sprite', 'string',
'surface', 'surfarray', 'sysfont', 'threads', 'time', 'transform',
'ver', 'vernum', 'version'] Incluso, Python me provée facilidades de
documentar el código que escribo bajo este formato mediante
&lt;em&gt;docstrings&lt;/em&gt;, estos strings de documentación son almacenados en el
atributo __doc__, presente en todo objeto Python, los docstrings de
Python, son análogos al Javadoc de Java, con la diferencia que no
necesito &amp;quot;compilar&amp;quot;[1] mi programa para generarlo, basta con importar mi
objeto en algún programa Python o en el terminal interactivo. Hagamos un
ejemplo sencillo para incluir contenido de documentación en mis objetos.
Definamos una clase básica:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=dXQL4DwU"&gt;&lt;/script&gt;&lt;p&gt;Ahora, simplemente hagamos:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; a = calculadora()
&amp;gt;&amp;gt; dir(a)
&amp;gt;&amp;gt; help(a.eleva)
&lt;/pre&gt;
&lt;p&gt;y veamos los resultados. Todo esto es muy útil, sobre todo cuando se
desarrolla en equipos o en comunidades de espíritu colaborativo, además,
evita pasar horas buscando a otro programador para que nos explique qué
rayos hizo o cómo funciona su algoritmo. ---- [1] Todo el que conoce
Java, sabe que en realidad el código no se compila como tal, es decir,
no produzco un código objeto ejecutable directamente, sino un &lt;em&gt;bytecode&lt;/em&gt;
que es interpretado por la máquina virtual. Por ello, se dice que Java
es un lenguaje &lt;em&gt;Precompilado/Semi-interpretado&lt;/em&gt;. Python funciona de
manera similar, cada archivo .py, al invocar el intérprete genera un
archivo .pyc, que contiene un &lt;em&gt;bytecode&lt;/em&gt; que es lo que realmente ejecuta
el intérprete.&lt;/p&gt;
</summary><category term="Lenguajes"></category><category term="Programación"></category><category term="python"></category></entry><entry><title>Cosas que AMO de Python III: todo es un objeto</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-iii-todo-es-un-objeto.html" rel="alternate"></link><updated>2011-09-14T15:50:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-14:cosas-que-amo-de-python-iii-todo-es-un-objeto.html</id><summary type="html">&lt;p&gt;Python, al igual que Java, es un lenguaje que soporta Orientación a
Objetos. Con la diferencia de que en Java, aún tenemos tipos primitivos
(bool, int, float, double) y sus respectivas clases envoltorio (Integer,
Float...). En Python, no existe tal cosa como &amp;quot;clases envoltorio&amp;quot;,
Python &lt;strong&gt;todo&lt;/strong&gt; lo ve como un objeto, cualquier variable que uno
inicialice, es un objeto, sin importar si es una cadena de caracteres,
un número, una instancia de una clase, &lt;strong&gt;todo&lt;/strong&gt; es un objeto, incluso
una función o un método de una clase pueden ser asignados a una variable
pues, al fin y al cabo, también son objetos. Esto me permite hacer cosas
como lo siguiente:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=wSsXG6Tw"&gt;&lt;/script&gt;&lt;p&gt;En el código anterior, escribí una función con la definición recursiva
de la sucesión de fibonacci (por ser un algoritmo ya bien conocido por
la mayoría de quienes estudiamos algún curso de programación en la
universidad). Posteriormente, asigno esa función a una variable (nótese
que no utilicé los paréntesis cuando hice referencia a la función) y,
simplemente, para llamar a mi función &lt;em&gt;fibo&lt;/em&gt;, le paso los parámetros al
objeto &lt;em&gt;función&lt;/em&gt;, referenciado por la variable &lt;em&gt;f&lt;/em&gt;. Una vez que
internalizamos el hecho de que, para Python, &lt;strong&gt;todo&lt;/strong&gt; es un objeto,
ganamos un poder increíble a la hora de escribir nuestros programas y
tratamos de darle a las cosas un enfoque diferente. ¿Para qué puede
servir eso?, en otro artículo les cuento ;-)&lt;/p&gt;
</summary><category term="Lenguajes"></category><category term="python"></category></entry><entry><title>Cosas que amo de Python II: Su Filosofía</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-ii-su-filosofia.html" rel="alternate"></link><updated>2011-09-13T09:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-13:cosas-que-amo-de-python-ii-su-filosofia.html</id><summary type="html">&lt;p&gt;Cada lenguaje y cada herramienta vienen con una filosofía y, al parecer,
con una manera de pensar. Los que usamos Linux pensamos de una manera,
por ejemplo, estamos muy orientados al software libre.&lt;/p&gt;
&lt;p&gt;Quienes usan
Windows piensan de otra manera muy distinta y quienes son usuarios de
las herramientas de Apple (Mac OS, siguiendo con los Sistemas
Operativos), tienen su propia manera especial de pensar y ver la vida.
Lo mismo ocurre con los lenguajes de programación, cada programador,
dependiendo del lenguaje, desarrolla una manera de ver las cosas
diferente, adaptada, quizás, a cómo implementa los conceptos su
herramienta de trabajo diario (y a veces de entretenimiento ocasional).&lt;/p&gt;
&lt;p&gt;La filosofía de Python, está resumida en el &lt;em&gt;Zen de Python&lt;/em&gt;. Para
leerlo, sólo basta abrir un Terminal de Python y escribir: &lt;em&gt;import
this.&lt;/em&gt;Al presionar &amp;quot;enter&amp;quot; parecerá el siguiente texto:&lt;/p&gt;
&lt;p&gt;The Zen of Python, by Tim Peters&lt;/p&gt;
&lt;p&gt;Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently. Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never. Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!&lt;/p&gt;
&lt;p&gt;Lo que traducido al español, para quienes no hablan inglés,
rezaría de la siguiente manera:&lt;/p&gt;
&lt;p&gt;El Zen de Python, por Tim Peters&lt;/p&gt;
&lt;p&gt;Hermoso es mejor que feo.
Explícito es mejor que implícito.
Simple es mejor que complejo.
Complejo es mejor que complicado.
Plano es mejor que anidado.
Disperso es mejor que denso.
La legibilidad es importante.
Los casos especiales no son lo suficientemente especiales como para romper las reglas.
Sin embargo, la practicidad prevalece ante el purismo.
Los errores no deben pasar silenciosamente. A no ser que sean explícitamente silenciados.
En caso de ambigüedad, evita la tentación de adivinar.
Debería haber una-- y preferiblemente una --manera obvia de hacer las cosas.
Sin embargo, esa manera puede no ser tan obvia, a menos que seas holandés.
Ahora es mejor que nunca.
Sin embargo, nunca puede ser mejor que *ahora mismo*.
Si la implementación es difícil de explicar, entonces es mala idea.
Si la implementación es fácil de explicar, puede ser una buena idea.
Los namespaces son una excelente idea -- hagamos más de esos!&lt;/p&gt;
&lt;p&gt;Realmente es una filosofía excelente y, una vez que la
internalizas, tu código cambia de manera radical. Mi recomendación es:
tómenla como forma de vida y traten de aplicarlo en todo y piensen en
eso mientras programan. Háganlo su propio mantra y ténganlo siempre en
cuenta, no sólo a la hora de &amp;quot;echar código&amp;quot;.&lt;/p&gt;
</summary><category term="Actitud del Programador"></category><category term="Lenguajes"></category><category term="Programación"></category></entry><entry><title>Cosas que amo de Python I: Lists Comprehensions</title><link href="http://iferminmontilla.com/cosas-que-amo-de-python-i-lists-comprehensions.html" rel="alternate"></link><updated>2011-09-11T21:28:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-11:cosas-que-amo-de-python-i-lists-comprehensions.html</id><summary type="html">&lt;p&gt;Bueno, ya que estoy trabajando con Python, he podido ir, poco a poco,
explorando las capacidades de ese lenguaje, es realmente poderoso y, tal
como una droga, su uso excesivo produce adicción. No pretendo
convertirlo en &lt;em&gt;el único lenguaje que usaré&lt;/em&gt;pero si me enfocaré en
explorarlo y explotarlo por un tiempo -- creo -- bastante largo. Haré
una serie de artículos explicando algunas de las características que más
me gustan de Python utilizando algunos ejemplos básicos. Una de las
cosas que descubrí que existía cuando empecé a programar en Python, fue
el concepto de List Comprehension que nunca lo llegué a ver y aunque
puede llegar a implementarse, resulta un poco rebuscado y complicado. y
&lt;strong&gt;nunca&lt;/strong&gt;&amp;nbsp;tan intuitivo como en Python. El concepto de Comprensión de
Listas (Lists Comprehension en inglés) viene de la Programación
Funcional y consiste en generar una lista a partir de filtros y una
expresión generadora, tal cual como se definen, en Matemáticas, los
Conjuntos por Comprensión. Empecemos con un ejemplo sencillo, supongamos
que quiero generar una lista que contenga los números hasta el número
300.000. En Java o en C, necesitaría iterar con un for, revisar si el
número es par (número % 2 == 0) e incluirlo en la lista resultado para
luego retornar, unas 5 o 6 líneas de código, podría hacerlo así también
en Python, pero teniendo una característica &lt;strong&gt;tan poderosa&lt;/strong&gt;como la
comprensión de listas, no tiene mucho sentido. El mismo ejercicio en
Python, utilizando Comprensión de listas, quedaría de la siguiente
manera:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=u57Rapqm"&gt;&lt;/script&gt;&lt;p&gt;No hace falta ser un experto en Programación Funcional, ni mucho menos
haber programado en Haskell o Erlang para darse cuenta de lo que ocurre
en esa simple línea de código. Simplemente &lt;em&gt;generamos&lt;/em&gt;&amp;nbsp;una lista de
valores desde el 0 hasta el 300.000 e incluímos el valor en nuestra
nueva lista sólo si es par. Ahora bien, en la Programación Funcional, un
algoritmo deja de verse como una &lt;em&gt;sucesión de pasos&lt;/em&gt; y empieza a verse
como una &lt;em&gt;transformación sucesiva de datos&lt;/em&gt;, es decir, las funciones
hacen &lt;em&gt;mapping&lt;/em&gt; de los los datos que manipula mi programa hacia otros,
derivados de la manipulación de la información del programa a través de
ciertas operaciones de cómputo. Lo que quiero decir con esto es que, a
través de comprensión de listas, puedo también tomar los elementos de la
lista que voy a generar y aplicarles una función antes de retornarlos.
La función &lt;em&gt;map&lt;/em&gt; en Python, aplica una función pasada como argumento a
un conjunto de datos, pasado también como argumento:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=budst575"&gt;&lt;/script&gt;&lt;p&gt;En este ejemplo, la lista &lt;em&gt;a&lt;/em&gt; contendrá una nueva lista con las
longitudes de las cadenas contenidas en &lt;em&gt;words&lt;/em&gt;, mientras que la lista
&lt;em&gt;b&lt;/em&gt; contendrá las mismas cadenas pero con todos los caracteres en
mayúscula sostenida. La manera de realizar ese ejercicio utilizando
Comprensión de Listas, es la siguiente:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=dPiGUE0u"&gt;&lt;/script&gt;&lt;p&gt;Es el mismo resultado, pero aplicando una función a una Comprensión de
Listas. Finalmente, podemos generar Listas por Comprensión tan complejas
como queramos, la imaginación es el límite, veamos este último ejemplo
sencillo, utilizando todos los elementos que me permite una comprensión
de listas (también puedo anidarlas): aplicar una función al retorno, una
expresión generadora y una expresión filtro:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=Afn0JFsK"&gt;&lt;/script&gt;&lt;p&gt;A manera de ejercicio, hagan lo mismo pero utilizando ciclos, verán que
es mucho más complicado una vez que conocen ya la magia de la
Comprensión de Listas.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Lenguajes"></category><category term="Programación"></category><category term="python"></category></entry><entry><title>¿Por qué aprender un nuevo lenguaje?</title><link href="http://iferminmontilla.com/por-que-aprender-un-nuevo-lenguaje.html" rel="alternate"></link><updated>2011-09-11T20:56:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-11:por-que-aprender-un-nuevo-lenguaje.html</id><summary type="html">&lt;p&gt;Java, C, C#, ,C++, PHP, Perl, Ruby, SQL, SmallTalk, Erlang, Python,
Haskell... Existen muchísimos lenguajes de programación, cada uno con
sus fortalezas y debilidades, ya aprendí Java en la Universidad, también
C, he hecho uno que otro proyecto web en PHP, &amp;quot;¡con JQuery y todo!&amp;quot;.
¿Por qué debería aprender un lenguaje nuevo?, todos hacen lo mismo al
final, ¿o no?.&lt;/p&gt;
&lt;p&gt;Ciertamente, lo que puedes hacer en Java, puedes hacerlo
en C# o C++, por ejemplo. De igual manera, lo que puedes hacer
utilizando PHP, puedes hacerlo programando en Ruby o en Perl o en
Python. El detalle está en que al pasar mucho tiempo programando en un
mismo lenguaje, dejamos de ser programadores y empezamos a convertirnos
en &amp;quot;usuarios de un lenguaje&amp;quot;, y pretendemos solucionar todo
utilizándolo, aún cuando, quizás, existe una herramienta que nos
permitiría hacer exactamente lo mismo, pero con la mitad del esfuerzo y
la cuarta parte de las líneas de código. Debo dejar claro que &amp;quot;Qué tan
buén programador eres&amp;quot; no es algo que se mida por la cantidad de
lenguajes que sabes o, al menos, conoces y en los que puedes defenderte,
sino en la capacidad que tengas de seleccionar el que más se adapte a la
solución del problema que tienes en frente actualmente y en tu habilidad
de llevar conceptos de un lenguaje a otro sin mucho problema.&lt;/p&gt;
&lt;p&gt;Siempre he
dicho que sólo hay una cosa peor que un mal programador, y es un
programador que sólo conoce un lenguaje y no es capaz de adaptarse a
nuevas herramientas. A la hora de desarrollar un sistema, siempre es
deseable tener un repertorio amplio de opciones para seleccionar la
herramienta que más nos guste para atacarlo y empezar a programar.
Muchas veces, las mismas características del problema nos obligan a
trabajar con una herramienta, por ejemplo, si vamos a desarrollar un
driver para una impresora o una tarjeta de sonido, no hay más opción que
C. Pero si el problema es más flexible, tenemos una gama más ámplia de
pinturas para empezar a colorear nuestra obra de arte. Si es web, puede
que salga bien con PHP, ¿por qué no usar un Framework para hacernos la
vida más fácil?: PHP + Symfony o Python + Django o Web2py, Perl +
Catalyst (¿alguien?), si es una aplicación de escritorio, ¿por qué no
utilizar Java?, o quizás Python + PyGTK o PyQt. Nuevas herramientas y
nuevas maneras de hacer las cosas, si las entendemos y las asimilamos de
manera correcta, nos hacen mejores programadores, uno como
desarrollador, debe ser curioso y no sólo aprender a utilizar la
herramienta, también explorarla y ver realmente cómo funciona por
dentro. Sólo así, sabremos cuán óptima y realmente qué tan buena es
dicha herramienta.&lt;/p&gt;
</summary><category term="Actitud del Programador"></category><category term="carrera"></category><category term="informática"></category><category term="opinión"></category></entry><entry><title>Java: crónica de una muerte anunciada</title><link href="http://iferminmontilla.com/java-cronica-de-una-muerte-anunciada.html" rel="alternate"></link><updated>2011-09-05T07:30:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-05:java-cronica-de-una-muerte-anunciada.html</id><summary type="html">&lt;p&gt;Bien, Oracle compró Sun hace un tiempo ya; todos los sabemos. Oracle
tiene un esquema de negocios del tipo &amp;quot;si no me genera ingresos, no lo
hago&amp;quot;, mientras que Sun tenía un esquema de negocios un poco más
abierto: desarrollaban y mantenían, en colaboración con las comunidades
de usuarios, muchos proyectos enfocados al Software Libre (MySQL,
NetBeans IDE y Open Solaris son algunos de los ejemplos más conocidos,
así como también el popular servidor de aplicaciones Glassfish para
Java).&lt;/p&gt;
&lt;p&gt;Todos esperábamos que ocurriera lo que ha venido ocurriendo poco
a poco entre Oracle y los proyectos libres que mantenía Sun
Microsystems: los proyectos que aún son mantenidos por Oracle son el
producto de acuerdos y compromisos adquiridos previamente por Sun; los
demás fueron cerrados, como el caso de OpenSolaris, un Sistema Operativo
que brindaba todas las bondades de Solaris al mundo libre: fue
convertido en Solaris Express, también gratuito ---pero con una licencia
más restrictiva, pues---. Mientras Open Solaris podía ser utilizado
&amp;quot;como uno quisiera&amp;quot;, las ediciones Express de Oracle vienen con
funcionalidad reducida y no pueden ser usadas en ambientes de
producción. Desde el inicio, Oracle llegó &amp;quot;cortando cabezas&amp;quot;.&lt;/p&gt;
&lt;p&gt;A pocas
semanas de concretarse la compra, todos los que seguíamos Java y éramos
fieles programadores y usuarios de ese lenguaje, nos enteramos de la
renuncia de James Gosling, su creador. Uno de los primeros indicios de
que el futuro de Java era incierto. El JDK de Java tenía una licencia
que permitía que cualquier empresa que desarrollara un Sistema Operativo
pudiera empaquetarlo para el mismo sin ningún problema. Por ello, vemos
implementaciones distintas de la máquina virtual y del JDK, como el
OpenJDK y Dalvik (la máquina virtual de Java optimizada para móviles
desarrollará para Android). Hace unos días, Oracle eliminó esa licencia,
por lo que sistemas como Linux, tendrán ahora que utilizar únicamente el
OpenJDK, que aún tiene algunos problemas con tipografías y Applets. Al
paso que vamos, Oracle seguirá cerrando cada vez más las puertas al
mundo libre, y quién sabe si algún día empiece a cobrar una tarifa por
el uso de su Máquina Virtual. Muchos programadores Java, hemos migrado
ya a otros lenguajes, en mi caso debido al futuro incierto del lenguaje
y las herramientas. Todo parece estar dibujando un futuro no muy bueno
para este lenguaje (que era uno de mis favoritos): si Oracle continúa
cerrándolo cada vez más, parece estar destinado a desaparecer. Una
verdadera lástima.&lt;/p&gt;
</summary><category term="informática"></category><category term="Java"></category><category term="Software Libre"></category></entry><entry><title>Sobreviviendo a la Carrera: algunos consejos</title><link href="http://iferminmontilla.com/sobreviviendo-a-la-carrera-algunos-consejos.html" rel="alternate"></link><updated>2011-09-02T08:23:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-09-02:sobreviviendo-a-la-carrera-algunos-consejos.html</id><summary type="html">&lt;p&gt;Bien, si estás en los últimos semestres de Ingeniería
Informática, eso significa que has sobrevivido al ataque de los
cálculos, lograste controlar la rebelión de las físicas, dominaste con
experticia el asedio de los algoritmos, batallaste arduamente y, ahora,
sólo quedan un par de ciclos por cerrar al culminar la carga académica:
Servicio Comunitario, Tesis y Pasantía. Mucha gente (incluyéndome) suele
sentir algo de miedo al llegar al 9no semestre de la carrera, pues
significa que debes empezar a pensar en ciertas cosas: ¿en qué área te
ves trabajando? ¿de qué vas a hacer tu trabajo especial de grado? Más
aun: ¿tesis o pasantía larga? ¿dónde voy a hacer mi pasantía corta?
Muchas cosas en mente y muy poco tiempo si son como yo, que dejé todo
eso para última hora. Pero no desesperen, todo tiene una solución, es
sólo cuestión de actitud, por lo que me tomaré la libertad de ser un
poco informal en este artículo. Voy a tratar de darles algunos consejos
basándome en mi experiencia personal en esa etapa (reciente, por cierto)
de mi vida: A lo largo de la carrera, deben preocuparse por no ser &amp;quot;sólo
estudiantes&amp;quot;. Está bien dedicarse a la carrera ---y, si son &amp;quot;Eficiencia
1&amp;quot;, pues, mucho mejor---, pero la magia de todo está en tratar de
compaginar esa excelencia académica con otras actividades en las que
puedan desarrollar otras aptitudes y aprender nuevas herramientas. Por
ejemplo, yo soy una persona sumamente tímida, bastante callado a decir
verdad; a veces me cuesta interactuar con otras personas (puede ser un
mal de carrera). Eso, en el campo profesional, no es muy deseable que
digamos, sobre todo porque hay una entrevista de trabajo en la que deben
desenvolverse bien si quieren obtener el empleo, muchas veces nos tocará
trabajar en equipo con otros desarrolladores y líderes de proyecto o,
quizás, interactuar con clientes (miedo, terror, ¿pánico?). ¿Cómo hice
para sobrellevar eso? Pues la respuesta es simple: enfrentándolo. Me
inscribí para ser preparador de mi escuela, en la cátedra de Algoritmos
y Programación II, ya que allí se estudian estructuras de datos en
Lenguage C, uno de mis favoritos, por lo que pensé que podría hacerlo
bien. Al final del semestre, no me fue tan mal en las encuestas y recibí
muy buenos comentarios, además, me empecé a sentir más cómodo hablando
en público, así que empecé a inscribirme en otras actividades:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Centros de Estudiantes y Representación Estudiantil: en la temporada
de campañas, uno habla con mucha gente y debe debatir con otros
candidatos, eso me ayudó a desarrollar un poco de coherencia en el
discurso y a mejorar la capacidad de acercarme a la gente. Fui
Consejero de Escuela y Consejero de Facultad, eso también me ayudó
con mi problema para hablar con la gente.&lt;/li&gt;
&lt;li&gt;Sun Team University e IEEE-UCAB: como miembro de esas sociedades
técnicas estudiantiles, debía dar charlas, lo que implicaba hablar en
público. Pertenecer a estas organizaciones me permitió desarrollar
aptitudes para exponer y explicar temas técnicos de mi elección a un
público. Muy parecido a ser preparador, pero, esta vez, el contenido
y todo el esquema lo seleccionaba YO.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Participar en actividades de este tipo también te acerca un poco a las
autoridades de tu escuela y de tu facultad, de quienes puedes aprender
muchísimo y a quienes puedes acudir en caso de necesitar orientación
académica de algún tipo o un consejo.&lt;/p&gt;
&lt;p&gt;Cuando digo que traten de no ser &amp;quot;sólo estudiantes&amp;quot;, también hago
referencia a que no está mal conseguir un trabajo de medio tiempo o a
distancia. Tuve la suerte de trabajar en &lt;a class="reference external" href="http://www.es-noticia.com"&gt;Es|Noticia.com&lt;/a&gt;, un
concentrador de noticias donde aprendí un enfoque distinto de los
desarrollos web, también en el IAMJ (Instituto Autónomo Metropolitano
para la Juventud), un organismo gubernamental adscrito a la Alcaldía
Mayor (cuando existía) en el que aprendí que si te dicen que serás el
Web Master y además, eres el único en la parte de IT, debes tener
cuidado. Terminarás configurando servidores y redes, montando la
intranet, instalando Windows, lidiando con todos los virus y &amp;quot;errores de
capa 8&amp;quot; del lugar y trabajando en la página web en sus ratos libres en
la Universidad o en casa. Todas estas cosas les darán la experiencia que
no tendrán simplemente asistiendo a sus clases programadas, estudiando
para los exámenes previstos y desarrollando los proyectos asignados,
pero todo lo anterior les dará los conocimientos y las aptitudes para
poder salir a ganar experiencia en la calle así que siempre una cosa
viene a complementar a la otra. Finalmente, las temidas obligaciones de
final carrera: Tesis, Pasantía y Servicio Comunitario: Para el Servicio
Comunitario, piden 120 horas. Traten de hacer algo que no les consuma
mucho tiempo y en lo que no vayan a ganarse un &amp;quot;contrato vitalicio de
mantenimiento gratis&amp;quot; ciertamente hay muchas organizaciones sin fines de
lucro que necesitan urgentemente una página web, un sistema de gestión
de &amp;lt;inserte aquí cualquier cosa gestionable&amp;gt;, pero muchas veces no saben
lo que eso implica y se aprovechan de la necesidad del estudiante por
terminar el servicio comunitario así que, si se embarcan en uno de estos
proyectos, asegúrense de dejar todos los puntos claros y un alcance bien
definido desde el principio. La pregunta eterna: ¿Tesis o Pasantía
Larga?. Considero que es una decisión muy personal. Particularmente
pienso que como estudiantes de una carrera de corte científico, como lo
es la Ingeniería Informática, un Trabajo Especial de Grado (Tesis o TEG)
debería ser la única opción, existen demasiados temas de investigación
poco explorados, muchas tecnologías que no estudiamos durante la carrera
y la tesis es una oportunidad excelente para explorarlos. Algunos
consejos para seleccionar un tema de tesis:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No tienen que descubrir el agua tibia: recuerden que es una tesis de
pre-grado, si bien hay que ser innovadores, no se trata de poner un
satélite en órbita o volverse un experto en derivación de forlayos
para tener un buen trabajo de grado.&lt;/li&gt;
&lt;li&gt;Los temas de Inteligencia Artificial Bioinspirada son muy buscados y,
además, ya existen muchos trabajos en esa área, incluso en pre-grado.
Traten de buscar otros temas interesantes: Social Media, Web
Semántica, Data Mining, Web Mining, Orquestación de Servicios Web,
Procesamiento de Lenguaje Natural. Alguna manera de acercar el
conocimiento académico al mundo real, por ejemplo.&lt;/li&gt;
&lt;li&gt;No tengan miedo en desarrollarla solos, si no consiguen pareja para
desarrollar su tesis, no se ajusten a lo que quiera hacer otra
persona, al final la gran satisfacción radica en trabajar en los que
nos gusta o nos apasiona. En mi caso, mi tesis la desarrollo de
manera individual, en el área de Web Semántica pues me parece un tema
súper interesante y no hay antecedentes de trabajos en esa área en mi
universidad (UCAB Caracas).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finalmente, la pasantía, para muchos, será su primer acercamiento al
mundo laboral, otros quizás tuvieron algunos empleos o desarrollaron
algún sistema por su cuenta durante la carrera (Metodología del Software
en la UCAB, ¿alguien?). Lo importante de la pasantía es conseguir un
lugar donde puedan crecer profesionalmente y donde puedan tener la
oportunidad de quedarse trabajando. Muchas empresas buscan pasantes para
terminar desarrollos internos o para realizar trabajos que más nadie
quiere hacer y luego, simplemente, olvidarse de ellos. Obviamente, si lo
que quieren es aprender y crecer en el proceso, esta no es una opción.
Algunos consejos para la pasantía:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Busquen más que una pasantía, traten de conseguir un lugar donde
puedan quedarse trabajando y déjenlo claro en la entrevista. En mi
caso, siempre dije que en realidad estaba buscando trabajo, mi visión
de la pasantía es la puerta de entrada al mundo laboral. Si dicen que
sólo quieren hacer pasantía, pueden pasar por conformistas.&lt;/li&gt;
&lt;li&gt;Durante la pasantía, hagan su trabajo lo mejor posible. No tengan
miedo de preguntar algo si no saben, y tómense su tiempo para
entender las cosas y desarrollarlas lo mejor posible. Es mejor
calidad que cantidad. Además, lo más seguro es que en realidad
manejen el concepto, pero no sepan aplicarlo correctamente de manera
práctica lo cual, usualmente para los jefes, es comprensible en
alguien que está empezando en el mundo laboral.&lt;/li&gt;
&lt;li&gt;Siempre es bueno aprender cosas nuevas, pero soy de los que piensa
que, primero, debemos perfeccionar nuestras habilidades con las
herramientas con que trabajamos a diario. Si trabajan con un lenguaje
de programación determinado, investiguen y exploren qué otras
posibilidades ofrece; enfóquense primero en lo que utilizan en la
oficina, esto les permitirá completar sus obligaciones de manera más
rápida y les dejará más tiempo libre para aprender nuestas
herramientas (desarrollo de videojuegos, otros frameworks para
desarrollo web o quizás algún proyecto personal).&lt;/li&gt;
&lt;li&gt;Envíen su hoja de vida a varias empresas, sin importar cual sea,
muchas veces la vida da sorpresas y el lugar que menos se imaginan es
el que les ofrece su trabajo ideal.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En mi caso, cuando estuve buscando pasantía, envié mis papeles a
Microsoft, IBM y Vauxoo. En Microsoft me ofrecían participar, como
pasante, en un desarrollo interno, básicamente el proyecto era
automatizar la organización del material corporativo y académico de
Microsoft de Venezuela, más allá de eso, me ofrecían la figura de
&amp;quot;Pasantía Corporativa&amp;quot;, que, en pocas palabras es &amp;quot;El pasante eterno&amp;quot;,
por otra parte, Vauxoo me ofrecía una oportunidad real de trabajo y el
apoyo para introducir mi primer proyecto como pasantía en la
Universidad. Hoy resulta obvio que decidí trabajar en Vauxoo, la razón
principal es que es una empresa que trabaja 100% son Software de Código
Abierto. Al trabajar con herramientas OpenSource y aprovecharse de ese
ecosistema, no hace falta tener mucho sentido común para darse cuenta de
que lo moralmente correcto es retribuir de la misma manera, por lo que
cada línea de código que se escribe en Vauxoo, es liberada a través de
&lt;a class="reference external" href="http://launchpad.net/~vauxoo"&gt;Launchpad&lt;/a&gt;. Además, me ofrecían trabajar con un lenguaje de
programación distinto (Python) y al que siempre le había tenido el ojo
puesto y nunca, en la universidad, tuve la oportunidad de dedicarme
aprender. Esta oportunidad se adaptaba más a mi perfil y fue por ello
que, al final, decidí rechazar la oportunidad en Microsoft. Al final, lo
que importa es que se sientan cómodos en el lugar donde estén haciendo
la pasantía y, si esto es así, que la empresa pueda ofrecerles la
oportunidad de quedarse trabajando si consideran que su trabajo es de
calidad y siempre llevar una toalla, uno no sabe si el mundo se acaba
antes que la carrera.&lt;/p&gt;
</summary><category term="carrera"></category><category term="estudiante"></category><category term="informática"></category><category term="universidad"></category><category term="opinión"></category></entry><entry><title>Patentes... ¿hasta cuándo?</title><link href="http://iferminmontilla.com/patentes-hasta-cuando.html" rel="alternate"></link><updated>2011-08-17T20:28:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-08-17:patentes-hasta-cuando.html</id><summary type="html">&lt;p&gt;Parecieran estar de moda las demandas por &amp;quot;violación de patentes&amp;quot; en el
mundo de la tecnología. Corres el riesgo de ser demandado por las cosas
más inverosímiles, como por ejemplo &amp;quot;la manera de hacer click en tu
producto es muy parecida a como es en el mío&amp;quot;, por temas de diseño,
entre otras cosas.&lt;/p&gt;
&lt;p&gt;Escribo sobre patentes en el mundo de la tecnología,
no porque sea un experto en el tema, o porque me apasionen, mucho menos
pretendo dar una clase magistral sobre qué son patentes y para qué
sirven pues creo que el nombre habla por sí solo, simplemente, para que
estemos claros de qué estamos hablando, daré una breve definición:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Una
patente es un derecho negativo que otorga un Estado a un inventor o a su
causa habiente durante un tiempo limitado.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Pues bien, esa es una
definición bastante básica, pero para el objetivo de este artículo, me
basta. Una patente, permite al titular impedir a terceros hacer uso de
la tecnología que él ha patentado. Bajo esos términos, el único que
puede hacer uso o beneficiarse de la tecnología es el titular de la
patente u utros entes que él autorice mediante contratos de
licenciamiento hasta la caducidad de la patente en cuestión (actualmente
las patentes duran alrededor de 20 años).&lt;/p&gt;
&lt;p&gt;Todo pinta muy bonito, las
patentes entonces, deberían servir como una recompensa al investigador o
al inventor por invertir su tiempo en desarrollar &amp;quot;algo&amp;quot; que nos hará la
vida más fácil, pero desde que la mayoría de las patentes están en manos
de grandes empresas, se han convertido en una estrategia corporativa
para frenar, no sólo a la competencia, sino también el avance
tecnológico en el campo en que se está registrada la patente pues,
usualmente, los costos de licenciamiento son enormes y no resulta
rentable normalmente, a menos que seas otra gran empresa. Vemos casos
como el reciente Apple-Samsung, en que la juguetería de Cupertino
demanda a la empresa coreana, puntualizando que el diseño del modelo
Samsung Galaxy S es muy parecido al del iPhone y el diseño del Samsung
Galaxy Tab 10.1 es muy parecido al del iPad. ¿Puede patentarse algo tan
burdo como la apariencia de algo?, ¿qué hubiera pasado si Jimmi Hendix
hubiera patentado el afro?. Esta demanda, por ridícula que parezca,
logro hacer que se prohibiera la venta de los Galaxy Tab 10.1 en los
Estados Unidos, Australia y Europa (a excepción de Holanda, allí la
marihuana es legal así que son especiales).&lt;/p&gt;
&lt;p&gt;Otro caso, las múltiples
demandas del gigante ORACLE a, otro gigante quizás más grande: Google,
por violaciones a las licencias del &lt;em&gt;Java Virtual Machine&lt;/em&gt;&amp;nbsp;en su sistema
operativo Android. Ambos casos se están resolviendo, por un lado, ya fue
aprobada la venta de las Tablet PC de Samsung en Europa y no debe faltar
mucho para que sea así en el resto de los países que la prohibieron, sin
lugar a duda, Apple logró su objetivo: frenar el avance implacable de la
competencia que le ha desplazado del 2do lugar en el mercado de
dispositivos móviles. Por otro lado Google parece estar trabajando en
migrar la plataforma Android a Python, un lenguaje que ellos mismos
están desarrollando junto a Güido Van Rossum (creador del lenguaje a
inicios de los 90). Claramente, las patentes, lejos de estimular el
desarrollo, lo que logran es frenarlo e, incluso, condenar a la muerte
tecnologías realmente potentes, como Java, pues ante tantas trabas
producto de las patentes y licencias, muchas empresas e individuales
buscarán otra alternativa, si bien no de un día para otro, si se ve en
un futuro a mediano plazo.&lt;/p&gt;
&lt;p&gt;Quiero terminar, citando un escrito de
&lt;a class="reference external" href="http://www.techdirt.com/"&gt;TechDirt&lt;/a&gt;, en el que se hacen la pregunta: ¿Qué pasaría si &lt;a class="reference external" href="http://es.wikipedia.org/wiki/Tim_Berners-Lee"&gt;Tim
Berners-Lee&lt;/a&gt;&amp;nbsp;hubiera patentado la web?: Además de que su nombre sería
más conocido, la Web, no sería lo que conocemos hoy día, sólo grandes
corporaciones tendrían acceso a ella y no las grandes que conocemos hoy
día, sino los potentados de aquella época como AOL, Compuserve y Delphi.
¿Google?, ¿qué es eso?, la búsqueda en Internet sería a través de uno o
varios sistemas privativos de búsqueda y el acceso depende de quién te
provea el servicio y de la compatibilidad entre él y el site al que
pretendes entrar, además, tecnologías como AJAX e información en tiempo
real estarían en pañales hoy día o, simplemente, no existirían, de igual
manera los populares SmartPhones de hoy día, no tendrían acceso a
internet lo cual, no tendría sentido y, si hoy son caros, bajo esas
condiciones un teléfono celular con acceso a la web costaría &amp;quot;algún
órgano vital del cuerpo&amp;quot;. Entonces, ¿qué tanto nos benefician las
patentes?, ¿qué tanto se benefician las empresas de las patentes?,
claramente mucho pero, en igual medida, estas patentes perjudican a
investigadores en el área y el avance en materia tecnológica, dentro de
poco veremos demandas &amp;quot;porque tu producto también tiene botones y usa
una pantalla táctil&amp;quot;, así que... FUCK OFF patent trolls.&lt;/p&gt;
</summary><category term="opinión"></category></entry><entry><title>Virtudes del buen programador</title><link href="http://iferminmontilla.com/virtudes-del-buen-programador.html" rel="alternate"></link><updated>2011-07-03T14:11:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-07-03:virtudes-del-buen-programador.html</id><summary type="html">&lt;p&gt;Bueno, llevaba tiempo formándome una imagen mental de cómo sería un buen
programador, pensé en estupideces como paciencia, constancia,
perseverancia, espíritu de equipo, empatía. Lo cierto es que ninguno de
los buenos programadores que conozco son así. En fin, en estos días,
Francisco Palm (&amp;#64;mapologo en Twitter) me iluminó enunciando las tres
virtudes del buen programador de &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Larry_Wall"&gt;Larry Wall&lt;/a&gt;:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Flojera:&lt;/strong&gt;es una virtud que te estimula a reutilizar la mayor
cantidad de código posible (propio y de otros), programar de manera
modular de manera de no escribir lo mismo dos veces y no reinventar
la rueda (a menos que quieras saber cómo funciona por mera curiosidad
académica ;-) ). Si ya está hecho y funciona, ¿para qué volverlo a
hacer?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Impaciencia:&lt;/strong&gt; si hay algo peor que un programa que no corre, es un
programa que corre lento, hay que, siempre, buscar la manera más
óptima de hacer las cosas, no podemos perder el tiempo escribiendo,
probando (y que corra lento) y corrigiendo (y que corra aún más lento
porque el código es parche tras parche), tenemos que escribir buen
código y hacerlo rápido.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Soberbia:&lt;/strong&gt; si, orgullo desmedido, escribimos buenos programas,
utilizando las mejores prácticas y las mejores herramientas para que
no puedan ser criticados, y más aún si desarrollamos bajo un esquema
OpenSource, nuestro código es nuestra carta de presentación hacia el
mundo y no podemos permitir que nos haga una mala imagen.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Definitivamente todos tenemos un poco de esto, Flojera, si, muchas veces
¿para qué ir al sitio si podemos hacerlo remoto gracias a la magia del
ssh? o ¿para qué hacerlo si ya está hecho y funciona bien?, Impaciencia,
programa rápido y que funcione pronto. Soberbia, hazlo bien para que,
lejos de criticarte, te elogien. Parece funcionar bien en el ámbito
profesional, en el ámbito personal, existimos mortales que, a veces, no
sabemos controlar estas virtudes. ;-)&lt;/p&gt;
&lt;/p&gt;</summary><category term="Actitud del Programador"></category><category term="opinión"></category></entry><entry><title>Software Libre: La Quinta Libertad</title><link href="http://iferminmontilla.com/software-libre-la-quinta-libertad.html" rel="alternate"></link><updated>2011-07-03T12:47:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-07-03:software-libre-la-quinta-libertad.html</id><summary type="html">&lt;p&gt;Esta entrada será corta. En el artículo anterior, nombré las 4
libertades fundamentales de las que gozamos los felices usuarios del
Software Libre, desde la libertad 0 hasta ha libertad 3.&lt;/p&gt;
&lt;p&gt;Pero olvidé una
muy importante que, si bien no es oficial, siempre la agrego cuando
hablo de este tema. Hablo de la quinta libertad, la libertad 4
(recuerden que empezamos desde 0), la Libertad de Elegir, libertad de
seleccionar qué queremos utilizar, ok, tenemos un sistema operativo:
Linux, pero tenemos además cientos de distros disponibles para escoger
cuál queremos, gestor de paquetes dpkg o basados en rpm, ok, pero ahora
quiero algo listo &amp;quot;out of the box&amp;quot; o algo que pueda configurar y
adaptar, bueno, ahora, ¿qué interface gráfica quiero?: ¿KDE?, ¿Gnome?,
¿XFCE?, ¿Fluxbox?, ¿realmente quiero utilizar una GUI?. Esta historia se
repite desde para seleccionar un reproductor multimedia (Rythmbox, VLC,
MPlayer, Amarok), hasta para seleccionar algo tan simple como un editor
de texto plano (gedit, kate, emacs, vim), tenemos cientos de opciones de
donde poder escoger, eso es Software Libre.&lt;/p&gt;
</summary><category term="Software Libre"></category></entry><entry><title>Software Libre: Teoría y Práctica</title><link href="http://iferminmontilla.com/software-libre-teoria-y-practica.html" rel="alternate"></link><updated>2011-07-02T17:38:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-07-02:software-libre-teoria-y-practica.html</id><summary type="html">&lt;p&gt;Muchas veces, hablando de computación y tecnología, mis
amigos y familiares me preguntan qué tengo yo en contra de Windows
específicamente, y siempre respondo &amp;quot;nada&amp;quot;, y es verdad, no tengo nada
en contra de Windows o Microsoft, sino del esquema de negocios basado en
Software Privativo, y esto suena medio comunistoide pero no me importa
porque quienes me conocen saben que no lo soy.&lt;/p&gt;
&lt;p&gt;Y es que la razón por la que los detractores del software libre
defienden y promueven al software privativo, aún sin trabajar para
alguna compañía que lo produzca, son realmente absurdas. La principal de
ellas, y la que más me molesta en ocasiones, es el típico mito:
&lt;em&gt;¿software libre?, ¿gratis?, yo quiero hacer plata con software y con
algo gratis no se puede&lt;/em&gt;, si, creanlo o no, me lo han dicho bastante.&lt;/p&gt;
&lt;p&gt;Para comenzar, permítanme decirles que quien piense y esté seguro de que
Software Libre es igual a Software Gratis, está equivocado. Ciertamente,
gran cantidad de Software Libre está disponible en la web de manera
gratuita, pero también lo está una gran cantidad de Software Privativo,
a los programas que son liberados de manera gratuita, se les conoce como
freeware. Entonces, si Libre &amp;lt;&amp;gt; Gratis, entonces ¿qué es Software
Libre?. Software Libre, en su definición más purista es aquel que cumple
con las cuatro libertades:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Libertad 0:&lt;/strong&gt;libertad de usar el programa para cualquier
propósito. Realmente no importa si vas a utilizarlo en tu casa, en tu
oficina, vas a vender una instalación, puedes utilizarlo sin ningún
problema.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 1:&lt;/strong&gt;libertad de estudiar como funciona el programa,
modificarlo y adaptarlo a tus necesidades. Si vas a utilizar un
software, y más aún si pagas por él, debes poder conocerlo a fondo y
si eres usuario técnico, deberías poderlo modificar y adaptarlo a lo
que realmente quieres que haga, si no puedes adaptarlo a tus
necesidades entonces mejor no usarlo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 2&lt;/strong&gt;: libertad de hacer copias del programa y distribuirlas
a tus amigos. Si algo es bueno, obviamente quieres que otras personas
lo usen y se beneficien de él.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Libertad 3:&lt;/strong&gt; libertad de hacer públicas las modificaciones que
hagas para que toda la comunidad se beneficie. Si eres usuario
técnico de un software del que te beneficias en tu día a día personal
o laboral, te conviene que mejore para incrementar tu productividad.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ello, si descargo de internet un programa gratis y no tengo acceso
al código fuente, no estamos hablando de Software Libre, aún cuando sea
de distribución gratuita. Entonces, si desarrollas software libre y
vendes tus aplicaciones, debes, al menos, incluir el código fuente y no
restringir su uso. Entonces, ¿cómo se hace dinero con software libre?,
no es el programa, sino el soporte que le das, cualquiera puede
desarrollar &amp;quot;el programa del siglo&amp;quot;, pero si el soporte y la
documentación no sirven, entonces ¿quién querría usarlo?. Cualquier
persona puede descargarlo, estudiarlo y utilizarlo si lo desea, pero
para configuraciones más avanzadas (igual que con el software privativo)
tendrá que llamar a un especialista. De la misma manera si se desea una
modificación sobre el programa original, si tienes el tiempo y el
personal para hacerlo, puedes descargar las fuentes, estudiarlo y
modificarlo, sino, igual tendrás que llamar a un especialista que ya
haya hecho este trabajo.&lt;/p&gt;
&lt;p&gt;Si trabajas con software libre, no vendes un
programa, vendes una solución completa con un acuerdo de soporte,
ahorrándole al cliente y a tu compañía los costes de licenciamiento.
Otro de los mitos urbanos sobre el software libre es que &lt;em&gt;si no tiene
una súper compañía por detrás, no puede ser bueno&lt;/em&gt;. Históricamente,
existen muchas compañías que desarrollan Software Libre, por ejemplo IBM
y Novell son dos de las que más han contribuido con el kernel de Linux,
si bien es cierto que el software libre se desarrolla de manera
comunitaria, muchas de las empresas que venden soluciones basadas en
software libre, tienen un staff de programadores dedicados a liberar
código fuente a la comunidad, entonces, no es &lt;em&gt;una súper compañía&lt;/em&gt;, son
muchas grandes, pequeñas y mediadas empresas dedicadas al desarrollo de
la herramienta alrededor del mundo.&lt;/p&gt;
&lt;p&gt;Finalmente, el más grande de los
mitos, ya un poco más de usuario final: &lt;em&gt;es más difícil de usar&lt;/em&gt;, esto
es totalmente falso, pongamos el ejemplo típico: Windows vs Linux, nadie
nació sabiendo utilizar Windows, sin embargo, todos lo usan porque es lo
que viene preinstalado en la mayoría de las computadoras de marca (en
nuestro país, lo venden &amp;quot;como tu película&amp;quot; en los clones que usualmente
uno compra), en algún momento de nuestras vidas, tuvimos que haber
invertido unos días aprendiendo, poco a poco, a utilizarlo. Exactamente
lo mismo ocurre con Linux, si bien existen distros para usuarios
técnicos (como Gentoo, Slackware y CentOS), también existen muchas
enfocadas al usuario final (como la familia *buntu, Fedora y Simplis),
simplemente es cuestión de decidirse, probarlo y usarlo sin miedo.&lt;/p&gt;
</summary><category term="Software Libre"></category></entry><entry><title>iPad vs Galaxy Tab: Mi humilde opinión</title><link href="http://iferminmontilla.com/ipad-vs-galaxy-tab-mi-humilde-opinion.html" rel="alternate"></link><updated>2011-06-18T23:26:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-06-18:ipad-vs-galaxy-tab-mi-humilde-opinion.html</id><summary type="html">&lt;p&gt;No me considero un experto en el área de Sistemas
Operativos, mucho menos en el área de Sistemas Operativos para
dispositivos móviles, es por ello que titulo y aclaro que este post
expresa mi &lt;strong&gt;humilde&lt;/strong&gt; opinión acerca de un tópico que pareciera estar
en boga últimamente, en este caso, para quienes me conocen, creo que
es obvio hacia dónde se inclina mi balanza personal. No suelo entrar
mucho en polémicas acerca de cuál herramienta es mejor que otra, a
excepción de casos muy especiales como este, en el que leí una reseña de
Clayton Morris a la que llegué gracias a &lt;a class="reference external" href="http://slashdot.org"&gt;Slashdot&lt;/a&gt;, pueden conseguir
la reseña &lt;a class="reference external" href="http://hardware.slashdot.org/story/11/06/18/013242/Galaxy-Tab-101-Judged-No-Match-For-iPad"&gt;aquí&lt;/a&gt; en caso de que quieran leerla.&lt;/p&gt;
&lt;p&gt;Haré el intento de ser
lo más objetivo posible. Realmente no se quién le dijo a este señor que
era un experto en materia de tecnología, de hecho no sabía quién era
antes de leer su &amp;quot;reseña&amp;quot;, la cual, como pueden ver, despertó en mi
cierto sentimiento de profunda molestia (por no decir ARRECH...). Muy
mal por Fox News al publicar escritos de este tipo y, además, redactados
por personas no especialistas en el tema. Es como si Andrew Tanenbaum
criticara un libro de recetas de Sumito Estévez, pero bien, basta de
descarga y pasemos a hablar de lo que nos importa. Comencemos por lo
básico, los &lt;strong&gt;sistemas operativos&lt;/strong&gt; que corren ambos dispositivos,
podemos tener una súper computadora en la que invertimos $3000 para
hacerla correr como un Jet, pero no será lo mismo instalarle &lt;em&gt;Windows
Vista&lt;/em&gt; que algún &lt;em&gt;Linux,&lt;/em&gt; el Sistema Operativo influye mucho en el
rendimiento y en la experiencia de usuario con un dispositivo, así que
es una métrica importante para esta comparación.&lt;/p&gt;
&lt;p&gt;Por un lado el iPad con
iOS, un desarrollo &lt;strong&gt;privativo&lt;/strong&gt; de &lt;em&gt;Apple&lt;/em&gt;, el cual sólo corre en
dispositivos que, además, ellos mismos fabrican, esto garantiza que el
software y el hardware se integren de manera mágica y casi orgásmica
pues es prácticamente un Sistema Operativo &lt;em&gt;custom&lt;/em&gt;, hecho a la medida
para los dispositivos que lo corren, muy al estilo de la empresa de
Cupertino. Por otro lado, tenemos el &lt;em&gt;Samsung Galaxy Tab&lt;/em&gt; corriendo
&lt;em&gt;Android,&lt;/em&gt; un sistema operativo &lt;strong&gt;libre&lt;/strong&gt; y de &lt;strong&gt;código abierto&lt;/strong&gt;
desarrollado en principio por &lt;em&gt;Android INC&lt;/em&gt; que, posteriormente, fue
adquirido por el gigante &lt;em&gt;Google,&lt;/em&gt; pero no para destruirlo e imponer su
&lt;em&gt;ChromeOS&lt;/em&gt;, sino para desarrollar uno de los sistemas operativos móviles
más potentes del mercado actual, especial para Teléfonos Celulares y
Tablet PCs, Chrome OS será optimizado para NetBooks.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Android&lt;/em&gt; es
liberado bajo licencias Apache y GPL 2.0, que permiten que cualquier
persona pueda descargarlo, modificarlo y utilizarlo como desée, siiii!,
la belleza del mundo del &lt;strong&gt;Software Libre&lt;/strong&gt;, más adelante, veremos otras
bondades de este esquema que aplican a usuarios de dispositivos móviles.
En este caso notamos que el fabricante del Tablet y el desarrollador del
Sistema Operativo, son dos empresas distintas, &lt;em&gt;Android&lt;/em&gt; es compatible
con varios dispositivos de distintas marcas como Samsung (obvio), HTC,
Huawei, Motorola y LG, un punto para Android ya que es multiplataforma.&lt;/p&gt;
&lt;p&gt;Vamos al aspecto &lt;strong&gt;técnico&lt;/strong&gt; de cada sistema operativo. iOS usa un
&lt;em&gt;kernel&lt;/em&gt;, &lt;strong&gt;privativo&lt;/strong&gt; en su mayoría, llamado &lt;em&gt;XNU&lt;/em&gt;. Curiosamente iOS
&lt;strong&gt;no soportó&lt;/strong&gt; &lt;em&gt;MultiTasking&lt;/em&gt; sino hasta su versión 4 y, a mi parecer,
su enfoque multi-tareas no es más que un &amp;quot;parche&amp;quot;, pues lo que hacen es
congelar la aplicación que no está en uso para darle paso a otra, con
ciertas excepciones, por ejemplo, la música puede seguirse reproduciendo
en background mientras que un navegador web se ejecuta en foreground.
Esto, claramente le resta puntos al iOS, pues &lt;strong&gt;no&lt;/strong&gt; puedo dejar
cargando una página web mientras edito una nota de texto, ya que el
sistema operativo va a congelar el proceso que corre el navegador web
hasta que vuelva a su ventana, por lo tanto, también se congelará el
proceso de carga del portal que desée visitar (ojo, no se si esto ya fue
corregido). Por su parte, &lt;em&gt;Android&lt;/em&gt;, utiliza un flamante &lt;em&gt;kernel&lt;/em&gt; basado
en &lt;strong&gt;Linux&lt;/strong&gt;, está de más decir que soporta multitasking de manera
nativa. Debido a limitaciones &lt;em&gt;obvias&lt;/em&gt; del hardware, es necesario
&amp;quot;limitar&amp;quot; el número de procesos en ejecución de manera concurrente, por
ello, aunque &lt;em&gt;Android&lt;/em&gt; permite &lt;strong&gt;hasta cuatro&lt;/strong&gt; aplicaciones corriendo
simultáneamente, &lt;strong&gt;esto no significa&lt;/strong&gt; que el usuario sólo puede abrir
cuatro programas al mismo tiempo.&lt;/p&gt;
&lt;p&gt;Supongamos que tenemos 4 procesos
corriendo en nuestro dispositivo Android: P0, P1, P2 y P3 y queremos
empezar a ejecutar P4, al solicitar la ejecución del proceso, el sistema
operativo revisa cuál es el proceso menos usado y lo &amp;quot;congela&amp;quot; en una
pila para ser invocado nuevamente al cerrar alguno de los procesos
activos. Este procedimiento, &lt;em&gt;Android&lt;/em&gt;, lo repite por cada aplicación
que queramos abrir sobre las 4 por defecto que permite. De igual manera,
si queremos &amp;quot;resucitar&amp;quot; alguna de las que se encuentra en la pila,
&lt;em&gt;Android&lt;/em&gt; revisa cuál de los procesos activos es el menos usado, lo pone
a &amp;quot;dormir&amp;quot; y coloca el otro en la lista de procesos con permiso de
ejecución. Todas estas rutinas son transparentes para el usuario y las
transiciones y cambios de contexto son imperceptibles al despertar un
proceso dormido. Personalmente, he abierto hasta 10 aplicaciones al
mismo tiempo en mi Galaxy y &lt;strong&gt;lo soporta&lt;/strong&gt; como si fueran sólo 4.
Técnicamente, creo que Android gana esta otra partida, a nivel técnico,
en cuanto al Software, claramente el Galaxy Tab es superior al iPad.&lt;/p&gt;
&lt;p&gt;Veamos en cuanto a aplicaciones disponibles, para el &lt;em&gt;iPad&lt;/em&gt;, debo
descargar todo del &lt;em&gt;Apple APP Store&lt;/em&gt;, y una &lt;strong&gt;enorme&lt;/strong&gt; cantidad de
aplicaciones son &lt;strong&gt;pagas&lt;/strong&gt;. La contraparte &lt;em&gt;Android&lt;/em&gt;, es el &lt;em&gt;Android
Market&lt;/em&gt;, y es tan &amp;quot;contra&amp;quot; que una &lt;strong&gt;enorme&lt;/strong&gt; cantidad de aplicaciones
son &lt;strong&gt;Gratis&lt;/strong&gt;, incluso el popular juego &lt;em&gt;Angry Birds&lt;/em&gt; que en el &lt;em&gt;App
Store&lt;/em&gt; de &lt;em&gt;Apple&lt;/em&gt; creo que cuesta $0,99 o $3, esto para el mercado
venezolano representa un inconveniente dada nuestra peculiar política
económica, por lo que si quiero tener juegos y &amp;quot;aplicaciones chéveres&amp;quot;
en mi &lt;em&gt;iPad&lt;/em&gt;, debo hacerle &lt;em&gt;Jailbreak&lt;/em&gt;. En mi &lt;em&gt;Galaxy Tab&lt;/em&gt;, como corre
&lt;em&gt;Android&lt;/em&gt;, tengo un total de 60 aplicaciones (llevo poco tiempo con
ella), &lt;strong&gt;todas&lt;/strong&gt; han sido gratis y &lt;strong&gt;ninguna&lt;/strong&gt; es un trial de 90 días,
además, si quieres instalar aplicaciones fuera del &lt;strong&gt;Android Market&lt;/strong&gt; no
hace falta &lt;em&gt;rootearla&lt;/em&gt;, que es un procedimiento parecido al &lt;em&gt;Jailbreak,&lt;/em&gt;
simplemente configuras los permisos para instalar apps fuera del market,
descargas el apk y lo instalas, como si fuera un programa más. Otro
punto más para el &lt;em&gt;Galaxy Tab&lt;/em&gt; y otra de las bondades del modelo del
Software Libre. Finalmente, evaluemos el aspecto de &lt;strong&gt;diseño&lt;/strong&gt;.
Obviamente, la gente de &lt;em&gt;Apple&lt;/em&gt; se esmera mucho en que sus productos
sean lo más &lt;strong&gt;estilizados&lt;/strong&gt; posible, por ello, no es de extrañarse que
el &lt;em&gt;iPad&lt;/em&gt; sea &lt;strong&gt;ultra-delgado&lt;/strong&gt; y su tamaño sea &lt;strong&gt;perfecto&lt;/strong&gt; para ser
llevado dentro de un estuche tipo carpeta o en un bolso tipo mensajero.
Por su parte, el &lt;em&gt;Galaxy Tab&lt;/em&gt;, debo reconocer que, aunque tiene una
pantalla de &lt;strong&gt;alta resolución&lt;/strong&gt;, es más &lt;strong&gt;pequeño&lt;/strong&gt; que el &lt;em&gt;iPad&lt;/em&gt;, un
poco más &lt;strong&gt;grueso&lt;/strong&gt; y ligeramente más &lt;strong&gt;pesado&lt;/strong&gt;, aunque todo esto no le
resta portabilidad pues de igual manera puede llevarse como el &lt;em&gt;iPad&lt;/em&gt;,
debo darle los puntos de diseño al producto de nuestros amigos de
Cupertino.&lt;/p&gt;
&lt;p&gt;En conclusión, sobre &lt;strong&gt;Clayton Morris&lt;/strong&gt;, creo que no es más
que un &lt;em&gt;Apple FanBoy&lt;/em&gt; ciego, que, seguramente, piensa que el &lt;em&gt;iCloud&lt;/em&gt; es
la gran obra de innovación tecnológica del siglo XXI y otra muestra de
la creatividad e inventiva de&lt;em&gt;Apple.&lt;/em&gt; Ahora, &lt;strong&gt;¿cuál Tablet PC debería
comprarme?&lt;/strong&gt;, es cuestión de gustos y necesidades: para mi, si quieres
una &lt;strong&gt;herramienta&lt;/strong&gt; poderosa de trabajo, con &lt;strong&gt;cientos de aplicaciones
gratis&lt;/strong&gt;, portátil totalmente customizable y configurable, te recomiendo
un dispositivo basado en &lt;em&gt;Android&lt;/em&gt;, ¿por qué no?, un &lt;em&gt;Galaxy Tab&lt;/em&gt;. Pero
si quieres un dispositivo para &lt;strong&gt;farandulear y presumir&lt;/strong&gt; con tus amigos
de que tienes un &lt;strong&gt;jueguete costoso&lt;/strong&gt;, poderoso eso sí, pero juguete al
fin, el &lt;em&gt;iPad&lt;/em&gt; es tu opción.&amp;nbsp;&amp;nbsp; ;-)&lt;/p&gt;
&lt;p&gt;Nota: Opinión basada en mi
experiencia con mi Galaxy Tab y el iPad de mi pana Ricardo Casanova.&lt;/p&gt;
</summary><category term="Android"></category><category term="Galaxy Tab"></category><category term="iOS"></category><category term="iPad"></category><category term="opinión"></category></entry><entry><title>Empezando a conocer la Web 3.0 (Parte II)</title><link href="http://iferminmontilla.com/empezando-a-conocer-la-web-30-parte-ii.html" rel="alternate"></link><updated>2011-06-14T13:16:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-06-14:empezando-a-conocer-la-web-30-parte-ii.html</id><summary type="html">&lt;p&gt;Hace un tiempo, publiqué el primero de una serie de
artículos acerca de La Web Semántica, en el que daba una introducción y
exponía la visión de la W3C sobre el rumbo que debería tomar la Web en
su &amp;quot;versión 3.0&amp;quot;, si aún no lo has leido, &lt;a class="reference external" href="http://codersvenezuela.com/post/empezando-a-conocer-la-web-3-0-parte-i/50"&gt;aún estás a tiempo&lt;/a&gt;. En esta
segunda entrega, expondré algunos conceptos que es necesario tener
claros si deseas adentrarte en este nuevo mundo, así como también, daré
una visión, un poco futurista (casi sacada de una película de Ciencia
Ficción), de las cosas que serán posibles una vez se alcance a
estandarizar todos los conceptos y tecnologías de la Web Semántica a lo
ancho, largo y profundo de la World Wide Web.&lt;/p&gt;
&lt;p&gt;El primero de los conceptos que debemos tener claro es el de URI
(Universal Resource Identifier) y URL (Universal Resource Locator), y
las diferencias y similitudes que existen entre ellos pues, es de
intuirse, que nos servirán más adelante. Luego de entender eso, podemos
avanzar y adentrarnos en el mundo de las Ontologías, un concepto del
campo de la Inteligencia Artificial adaptado a la Web Semántica. Una vez
asimilado todo lo referente a las Ontologías, podemos irnos a estudiar
algo de lógica y consultas sobre dichas ontologías para, después, ver
algo acerca de Motores de Inferencia, que serán nuestro más grande
aliado al desarrollar aplicaciones que implementen tecnologías de la Web
Semántica. En este artículo, me concentraré en los dos primeros, es
decir, URL, URI y Ontologías. Algo que parece causar mucha confusión en
estudiantes, son los URI y los URL. Espero despejar cualquier duda en el
siguiente párrafo: Un Identificador Universal de Recurso o URI, por sus
siglas en inglés, es un elemento que nos permite simplemente saber
&amp;quot;quién&amp;quot; es ese recurso. Si me permite identificar el recurso de manera
inequívoca, quiere decir que debe ser único para cada uno. Por su parte,
el Localizador Universal de Recurso, o URL por sus siglas en inglés, me
permite saber la ubicación de ese recurso, debe resultar obvio que
también debe ser único para cada uno pues dos recursos no pueden tener
la misma ubicación. Si exportamos estos conceptos al mundo real y los
aplicamos a personas, un URI podría ser su Cédula de Identidad, que no
me da acceso al recurso, pero me permite saber quién es, un URL, podría
ser su dirección postal + habitación en la que se encuentra (asumiendo
que en Venezuela la gente vive tan cómoda que no necesita compartir
cuarto con nadie) o, incluso, su número telefónico, ambos me dan acceso
al recurso y, de alguna u otra manera, también me permiten conocer quién
es. En pocas palabras, un URL es un URI que, además, me permite conocer
la ubicación del sujeto.&lt;/p&gt;
&lt;p&gt;Es necesario tener claro todo lo anterior ya
que en la Web Semántica no se habla de Páginas o Sitios Web, se busca
generalizar un poco más ya que, en la Web, no sólo existen documentos
HTML que dan forma a los Portales Web, sino también Videos, Fotos,
documentos PDF, Música, Servicios Web, en fin, sería mucho más fácil
decir qué es lo que no se encuentra en la Internet. Es por ello que la
Web Semántica habla de Recursos, más allá de su tipo. Ahora bien, la Web
Semántica se basa en modelos de conocimiento bien estructurado, estos
modelos de conocimiento se conocen en el mundo de la Inteligencia
Artificial como Ontologías.&lt;/p&gt;
&lt;p&gt;Una Ontología no es más que una
representación estructurada del conocimiento de un área específica, de
allí que muchos buscadores que implementan 100% tecnología de Web
Semántica sean específicos para un tema dado. Estos modelos, en el
ámbito que nos compete, se utilizan para describir recursos, a los
cuales nos referimos mediante URI's, y, en cierta forma, darle al
computador la capacidad de &amp;quot;entender&amp;quot; de qué habla dicho recurso y
cuáles son sus recursos relacionados, de esta manera, comenzamos a
construir nuestra infraestructura de meta-datos para realizar búsquedas
contextualizadas y con más sentido para el usuario. La manera como una
Ontología organiza el conocimiento, es a través de una estructura de
meta-conocimiento. Esta estructura se construye a partir de un concepto
con el cual la mayoría de los programadores estamos famimliarizados
desde tempranos años de la carrera, las Clases, todo meta-conocimiento
es modelable a través de Clases. Es de intuirse que se mantienen los
conceptos de Herencia y Polimorfismo también dentro de las Ontologías.
Por ejemplo, imaginemos una MICRO-Ontología de la Vida Salvaje de
África[1]. Empezando a pensar al respecto, nos percatamos de que la
sabia madre naturaleza ya nos facilitó con dos clases bien
diferenciadas: &amp;quot;Animales&amp;quot; y &amp;quot;Plantas&amp;quot;. Una Ontología, también me permite
crear relaciones entre clases, con propócitos didácticos, imaginemos las
clases &amp;quot;Tallo&amp;quot;, &amp;quot;Rama&amp;quot; y &amp;quot;Hoja&amp;quot; que &amp;quot;son parte&amp;quot; de una &amp;quot;Planta&amp;quot;, creo
que la relación es bastante obvia, nuestra estructura de composición
para la clase &amp;quot;Planta&amp;quot; sería: &amp;quot;Hoja&amp;quot;, es parte de: &amp;quot;Rama&amp;quot;, es parte de:
&amp;quot;Tallo&amp;quot;, es parte de: &amp;quot;Planta&amp;quot;. Podemos complicarlo aún más, podríamos
definir clases de &amp;quot;Forma&amp;quot; (triángulo, rombo, etc) y relacionarlas a
&amp;quot;Hoja&amp;quot; y crear la relación &amp;quot;tiene forma de&amp;quot; para describir cómo es la
hoja de una Planta dada, pero, por ahora, dejémoslo así. Por otro lado,
la clase &amp;quot;Animal&amp;quot;, tiene dos subclases muy fáciles de inferir:
&amp;quot;Carnívoro&amp;quot; y &amp;quot;Herbívoro&amp;quot;, ambas sub-clases son también &amp;quot;Animales&amp;quot;, esto
es una estructura de Herencia pues, una instancia de &amp;quot;Herbívoro&amp;quot; o de
&amp;quot;Carnívoro&amp;quot; es también un &amp;quot;Animal&amp;quot;.&lt;/p&gt;
&lt;p&gt;Nuestra estructura de Herencia para
&amp;quot;Animal&amp;quot; quedaría así: &amp;quot;Carnívoro&amp;quot;, es un: &amp;quot;Animal&amp;quot;. &amp;quot;Herbívoro&amp;quot;, es un:
&amp;quot;Animal&amp;quot;. Pero, ahora, ¿cómo se relacionan todas nuestras clases entre
sí?. Bueno, a través de una relación obviamente, pero, ¿Cuál?. Bueno, un
animal debe comer ¿no?. Entonces, un &amp;quot;Herbívoro&amp;quot; come &amp;quot;Planta&amp;quot; y un
&amp;quot;Carnívoro&amp;quot; come &amp;quot;Herbívoro&amp;quot;, también podría crear la relación inversa
&amp;quot;es comido por&amp;quot;, por ejemplo. Hasta ahora sólo tenemos el
Meta-Conocimiento, es decir, las descripciones de los recursos, ahora
debo agregar recursos, por ejemplo, si digo: &amp;quot;León&amp;quot; es un &amp;quot;Carnívoro&amp;quot;;
&amp;quot;Arbusto&amp;quot; es una &amp;quot;Planta&amp;quot; y &amp;quot;Zebra&amp;quot; es un &amp;quot;Herbívoro&amp;quot; Automáticamente,
podríamos inferir que el &amp;quot;Arbusto&amp;quot; está conpuesto por &amp;quot;Tallo&amp;quot;, &amp;quot;Rama&amp;quot; y
&amp;quot;Hoja&amp;quot;, es comido por &amp;quot;Zebra&amp;quot;, que a su vez es comido por &amp;quot;León&amp;quot;. Si
hacemos una analogía con la Programación Orientada a Objetos, mis
clases, seguirían siendo clases, pero los recursos a los que hacen
referencia, serían los objetos que son instanciados en una clase
determinada.&lt;/p&gt;
&lt;p&gt;Obviamente, pueden hacerse ontologías muy complejas, lo que
aquí muestro a manera de ejemplo es sólo la punta del iceberg pues los
lenguajes de ontologías para la Web Semántica son sumamente flexibles y
potentes: RDF y OWL[2] (que no es más que una extensión de RDF),
posteriormente dedicaré un artículo para profundizar más sobre ellos.
Las clases RDF/OWL, definen y describen mis recursos, y las relaciones
entre estas clases, definen ciertas reglas básicas de inferencia lógica
que pueden ser aprovechadas en un nivel superior por un Motor de
Inferencia[3] para resolver consultas sobre una ontología y, a partir de
esas premisas básicas, deducir nuevo conocimiento no explícito
directamente en el modelo de conocimiento.&lt;/p&gt;
&lt;p&gt;Imaginemos ahora una WWW
totalmente enlazada, totalmente integrada con la Web Semántica, cuando
esto ocurra, serán agentes[4] quienes nos ayuden a realizar búsquedas a
través de la web, examinando ontologías, extrayendo información que se
adapte a nuestra consulta e interpretando, a través de reglas de
inferencia bien definidas, cuáles recursos cumplen mejor con nuestra
solicitud. Supongamos que Alan, es un empresario muy ocupado y su madre
lo llamó anoche porque siente dolor en la zona abdominal desde hace unos
días y siente que debería visitar a un médico. Alan, consulta la
Internet desde su TabletPC, a través de su agente, solicitando las
clínicas que se encuentren en 10km a la redonda de la casa de su madre,
organizadas según su reputación. El agente revisa la ubicación de la
casa de su madre (almacenada en el Tablet gracias a la tecnología de
GPS) y consulta una Ontología con las clínicas de la ciudad y, además,
busca en el Servicio Web de la Sociedad Médica Venezolana (bajo las
circunstancias descritas en el párrafo anterior, debería existir), la
lista de las mejores clínicas para poder cumplir con el patrón de
ordenamiento que Alan solicitó. Luego de revisar los resultados, Alan le
pregunta al agente de dónde obtuvo la información, este le redirige al
portal de la Sociedad Médica Venezolana. Alan revisa las primeras tres
clínicas y, finalmente se decide por el Hospital de Clínicas Caracas
(HCC), pues no queda muy lejos de la casa de su madre y figura de 3ero
en la lista de resultados. El agente del HCC le pregunta qué síntomas
presenta, Alan escribe &amp;quot;Dolor Abdominal&amp;quot;, el agente le recomienda
visitar a un Gastroenterólogo y le devuelve una lista de los médicos de
esa especialidad del Hospital. Alan se da cuenta de que el 2do en la
lista, es un viejo amigo del Colegio y decide solicitar una cita con él
lo más pronto posible, el agente del Hospital le informa que la cita más
próxima es para dentro de dos días, entre las 14:00 y las 18:00, y su
agente le recuerda que tiene un par de reuniones en ese intervalo de
tiempo. Alan revisa su agenda y se da cuenta que son dos reuniones de
prioridad menor, pide a su agente que las reprograme y solicite la cita
médica. El agente de Alan, de manera automática, se comunica con los
agentes de las personas involucradas en las reuniones para reprogramar
las citas y, posteriormente se comunica con el agente del HCC para
colocar la cita para dentro de dos días a la hora mencionada. Todo esto
será posible si la información se encuentra totalmente enlazada y
disponible en línea, los recursos son descritos de manera bien definida
y las reglas de inferencia son bien explícitas, es por ello que es
necesario que más personas se interesen en este tema de manera técnica
pues, el futuro de la Internet, está tocando a nuestras puertas y, la
Web Semántica, no puede quedarse enclaustrada dentro de la academia y
ser dominado únicamente por grupos de investigación científica. Espero
haber motivado a alguien más a estudiar dentro de este campo. Hasta un
próximo artículo.&lt;/p&gt;
&lt;p&gt;[1] Digo Micro-Ontología porque si hacemos la ontología completa, creo
que acabaríamos con todo el espacio disponible en este servidor.&lt;/p&gt;
&lt;p&gt;[2] Ambos lenguajes están en proceso de definición por el World Wide Web
Consorcium (W3C), el avance puede ser seguido a través el sitio web del
W3C.&lt;/p&gt;
&lt;p&gt;[3] JENA y Virtuoso son los que parecieran ser más utilizados.&lt;/p&gt;
&lt;p&gt;[4] Un agente, en informática, es una pieza de software que realiza una
tarea específica de manera automática, es una espécie de &amp;quot;robot&amp;quot;.&lt;/p&gt;
</summary><category term="ontologías"></category><category term="web 3.0"></category><category term="web semántica"></category></entry><entry><title>Tomar en cuenta la Herramienta y la Complejidad</title><link href="http://iferminmontilla.com/tomar-en-cuenta-la-herramienta-y-la-complejidad.html" rel="alternate"></link><updated>2011-05-13T13:00:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-13:tomar-en-cuenta-la-herramienta-y-la-complejidad.html</id><summary type="html">&lt;p&gt;Un concepto que nos enseñan desde el inicio en la Universidad y que,
muchas veces, el el mundo laboral olvidamos, es el de la Complejidad de
un Algoritmo. Este es un concepto que tiene incidencia directa en el
tiempo en el cual se ejecutará y los recursos que consumirá dicha serie
de instrucciones, todo por la afirmación constante de &amp;quot;dale que la
máquina aguanta&amp;quot;.&lt;/p&gt;
&lt;p&gt;Si, es cierto, acutualmente la capacidad de
procesamiento de las computadoras es impresionante, pero también lo son
los requerimientos a los que son sometidos día a día y, si hablamos de
un programa que va a atender solicitudes concurrentes y debe funcionar
en tiempo real... la complejidad cobra importancia. Traigo todo esto de
vuelta desde mis clases de Algoritmos y Programación I pues, nuevamente
jugando en &lt;a class="reference external" href="http://projecteuler.net"&gt;ProjectEuler.net&lt;/a&gt;, estuve resolviendo uno de los problemas
matemáticos que proponen y, como en mi trabajo estoy trabajando con
Python, ese fue el lenguaje que seleccioné para resolverlo. Esta vez, el
problema a solucionar o el valor a encontrar era: La suma de todos los
valores pares de la Secuencia de Fibonacci menores a 4.000.000 Pan
comido ¿no?, pero con lo que me conseguí llamó mucho la atención: Luego
de leer el enunciado desempolvé la vieja definición recursiva de la
Serie de Fibonacci y pensé: &lt;em&gt;bien, esto dentro de in ciclo, con una
validación y rompo cuando pase 4.000.000&lt;/em&gt;. Manos a la obra, en
&lt;strong&gt;Python&lt;/strong&gt;todo quedó así:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=qEXzM1Jv"&gt;&lt;/script&gt;&lt;p&gt;Excelente!, ya tengo mi algoritmo, lo pongo a correr desde un terminal y
espero mi respuesta. Me impresionó lo mucho que se tardó en darme el
resultado, alredecor de 20 segundos lo cual es demasiado tiempo, así que
me puse a analizar mi algoritmo. Lo primero que hay que recordar es la
notación O (&amp;quot;o&amp;quot; grande), nos mide el orden de complejidad de un
algoritmo en la medida en que los valores que recibe van creciendo. Es
decir, qué tan complejo se hace ejecutar un algoritmo con valores cada
vez más grande. En esta función &lt;em&gt;fib&lt;/em&gt;, para valores pequeños, el tiempo
de respuesta es inmediato, pero conforme el valor fibonacci a calcular
va creciendo, el tiempo de ejecusión se va haciendo cada vez más grande.
Si nos fijamos, &lt;em&gt;fib&lt;/em&gt;, es una función recursiva que, para calcular el
&lt;em&gt;k-ésimo&lt;/em&gt; valor de la serie, debe calcular los &lt;em&gt;k - 1&lt;/em&gt;valores
anteriores, lo cual implica realizar el mismo proceso para los
anteriores hasta llegar a los casos base. Esto, no solo no es óptimo,
pues estamos dando más vueltas de las necesarias para hallar un simple
valor, además, esta función está dentro de un ciclo por lo que, por cada
iteración, debe recalcular valores ya obtenidos con anterioridad. Vaya!,
mi vieja definición resursiva hace que el orden de mi algoritmo se
dispare a O(n!), si mi razonamiento no falla. Investigando un poco en
Internet sobre la Serie de Fibonacci, me conseguí con la &lt;a class="reference external" href="http://http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fibonacci/fibFormula.html"&gt;Fórmula de
Binet&lt;/a&gt;, que define la serie en una forma cerrada, es decir, me da el
&lt;em&gt;k-ésimo&lt;/em&gt; valor de manera directa, sin definirlo en función de valores
anteriores, luego de modificarlo y reescribir mi Función Fibonacci, la
cosa quedó así:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=jpFT6G7N"&gt;&lt;/script&gt;&lt;p&gt;Notemos que define cada valor en función de Phy (1,618...), un número
irracional, por lo que el resultado habría que truncarlo, obervemos
también que el programa principal no fue modificado. Luego de
ejecutarlo, la respuesta fue inmediata. Este comportamiento era de
esperarse pues, cambiamos la función con llamadas recursivas por
operaciones aritméticas cuya complejidad es O(1), es decir, orden
constante (a excepción de la potencia que es O(log(n)), pero asumamos
que es constante también para no entrar en polémicas), lo que hace que
nuestra nueva función tenca complejidad O(1) también. Si este ejemplo lo
escalásemos a un sistema concurrente en tiempo real, es necesaria
rapidez de procesamiento y de ejecusión y esto debe lograrse con una
combinación de Hardware Potente y Software Eficiente con Algortimos
Optimizados pues, nada hacemos con un Ferrari si va a manejarlo un niño
de 5 años, por hacer una analogía graciosa. La otra parte que hay que
tomar en cuenta es la herramienta que utilizamos para desarrollar
nuestras soluciones, ya que distintas herramientas se comportan de
manera diferente y cada una fue diseñada para llevar a cabo una tarea
distinta: por ejemplo, si necesitas procesar grandes cantidades de texto
usando Expresiones Regulares, seguramente tendrás que utilizar Perl, si
quieres desarrollar una aplicación web estándar, que corra en cualquier
servidor Apache sin mucha complicación, PHP es la respuesta (aunque no
nos guste mucho), si quieres desarrollar un sistema empresarial que se
conecte con 4 sucursales sobre una plataforma con soporte corporativo,
Java o .NET, si lo que quieres es aprovechar hasta la última gota de tu
procesador, pues programa en Assembler (o bueno, en C para no ser tan
cochinos[1]). Siguiendo con el orden de ideas anterior, reescribí el
programa con la definición recursiva de la Serie de Fibonacci, pero esta
vez en &lt;strong&gt;Lenguaje C&lt;/strong&gt;, sólo para ver lo que ocurría. El resultado fue
que el tiempo de ejecusión se redujo a mucho menos de la mitad, respecto
al de mismo programa escrito en Python. Aquí está el código en C por si
lo quieren probar:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=sxB0QC7Z"&gt;&lt;/script&gt;&lt;p&gt;Quiero finalizar, diciendo que, a veces, la mejor solución no es
necesariamente codificar una aplicación completa utilizando un mismo
lenguaje de programación. Por ejemplo, para el videojuego Nerverwinter
Nights, todo el core fue escrito en C++, y sobre ese motor,
implementaron un lenguaje propio (NWNScripts). Si desarrollas en Python
y optimizas tus algoritmos varias veces pero no logras el tiempo de
respuesta que quieres, quizás lo mejor sea recodificar toda tu lógica en
C, y utilizar Bindings para invocarla desde Python.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Algoritmos"></category><category term="complejidad"></category><category term="fibonacci"></category><category term="informática"></category><category term="Matemáticas"></category><category term="Project Euler"></category></entry><entry><title>Y Microsoft compró Skype</title><link href="http://iferminmontilla.com/y-microsoft-compro-skype.html" rel="alternate"></link><updated>2011-05-12T15:45:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-12:y-microsoft-compro-skype.html</id><summary type="html">&lt;p&gt;Para muchos, como yo, esto es una total desgracia, sobre todo si somos
del mundo del Software Libre. Yo utilizaba muchísimo Skype en el
trabajo: para hablar con clientes, para conversar con mi jefe cuando me
quedaba trabajando en casa, para hablar con amigos de otras partes del
mundo... en fin, para miles de cosas. Sin lugar a dudas que comprar
Skype fue una movida de negocios inteligente, estemos claros que el
servicio de &amp;quot;videollamada&amp;quot; de MSN Messenger es realmente apestoso y uno
en Skype puede hacer exactamente lo mismo que en el Messenger, pero con
mejor calidad en el servicio VoIP, entonces, desde mi punto de vista,
pueden pasar dos cosas:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Que Microsoft integre todas las bondades de Skype en su servicio
gratuíto de Mensajería Instantánea, es decir, que agarren Skype y lo
llenen de publicidad molesta por todas partes.&lt;/li&gt;
&lt;li&gt;Que todo siga igual, pero que cobren una licencia astronómica por el
servicio VoIP de Skype para empresas y mantengan un &amp;quot;Home Edition&amp;quot;
con ciertas restricciones ridículas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En cualquiera de los dos casos, no será lo mismo y, como no se que vaya
a pasar, yo particularmente he ido revisando algunas alternativas libres
para utilizar servicio de Voz sobre IP (VoIP), los que parecieran ser
las mejores opciones son: &lt;a class="reference external" href="http://ekiga.org/"&gt;Ekiga&lt;/a&gt; (disponible para Windows también) y
&lt;a class="reference external" href="http://live.gnome.org/Empathy"&gt;Empathy&lt;/a&gt; para Linux y &lt;a class="reference external" href="http://sipdroid.org/"&gt;SipDroid&lt;/a&gt; si eres usuario de Android.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Alternativas libres"></category><category term="Microsoft"></category><category term="Skype"></category><category term="opinión"></category></entry><entry><title>Jugando en ProjectEuler.net</title><link href="http://iferminmontilla.com/jugando-en-projecteulernet.html" rel="alternate"></link><updated>2011-05-11T11:55:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-11:jugando-en-projecteulernet.html</id><summary type="html">&lt;p&gt;Hace un par de días, alguien publicó en la &lt;a class="reference external" href="http://groups.google.com/group/python-venezuela?hl=en"&gt;lista de correos
venezolana&lt;/a&gt; de Python &lt;a class="reference external" href="http://projecteuler.net"&gt;este&lt;/a&gt; sitio web que tiene una serie de
ejercicios matemáticos y de lógica propuestos para ser resueltos
utilizando programación y lógica algorítmica. Me pareció súper
interesante pues es una manera de mantener el cerebro activo y de, poco
a poco, ir conociendo más a fondo el lenguaje de programación que estoy
utilizando para mi trabajo (Python). Lo que me pareció aún más
interesante es que puedo comparar las soluciones en Python con los
mismos algoritmos escritos en otros lenguajes y, además, al resolver
cada ejercicio el sitio web te libera un foro donde otros programadores
de otras partes del mundo han publicado sus soluciones, entonces, es una
oportunidad de ver otras formas de pensar los algoritmos. Publico acá la
solución al primero de los ejercicios que, al ser el primero, no
representa mayor dificultad, pero me pareció interesante la diferencia
de la solución al mismo problema utilizando dos lenguajes distintos. 1.-
Sumar todos los múltiplos de 3 y de 5 que se encuentran por debajo de
1000: &lt;strong&gt;En Python&lt;/strong&gt;, la solución es realmente corta, basta con una
comprensión de lista para generar el conjunto y una función estándar
para sumarlos, he aquí la solución:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=tTPHxZ31"&gt;&lt;/script&gt;&lt;p&gt;El ejercicio sale en sólo una línea, veamos &lt;strong&gt;ahora en C&lt;/strong&gt;, por ejemplo,
que si fue necesario ciclar y realizar una validación interna en el
loop.&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=4ipupDF6"&gt;&lt;/script&gt;&lt;p&gt;Nuevamente, cobra importancia seleccionar la mejor herramienta para
realizar una tarea determinada. OJO, con esto no estoy diciendo que
Python sea mejor o más rápido que C, estemos claros que, para empezar,
un programa compilado siempre correrá más rápido que uno interpretado y
además, C es C. Pero si queremos una solución rápida de codificar e
intuitiva de leer, quizás lo mejor sea hacerla en Python o en algún
lenguaje orientado al Scripting. Poco a poco iré publicando otras
soluciones que me parezcan interesantes y contrastantes entre dos
lenguajes distintas o dos algoritmos distintos para llegar al mismo
resultado. Antes de culminar esta entrada, quiero dejarles, a los
entusiastas del &amp;quot;código que corre rápido&amp;quot;, una solución en &lt;strong&gt;Assembler&lt;/strong&gt;
que conseguí en el foro que les mencioné al principio, sólo en caso de
que alguien quiera probarla. Hasta la próxima!:&lt;/p&gt;
&lt;script src="http://pastebin.com/embed_js.php?i=ALR8X6JF"&gt;&lt;/script&gt;&lt;/p&gt;</summary><category term="Algoritmos"></category><category term="Matemáticas"></category><category term="Project Euler"></category></entry><entry><title>Empezando a conocer la Web Semántica (Parte I)</title><link href="http://iferminmontilla.com/empezando-a-conocer-la-web-semantica-parte-i.html" rel="alternate"></link><updated>2011-05-10T11:17:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-10:empezando-a-conocer-la-web-semantica-parte-i.html</id><summary type="html">&lt;p&gt;Mucho hablamos hoy día de lo &amp;quot;dos punto cero&amp;quot;: en internet,
en la radio, en la televisión, se habla incluso de programas y empresas
&amp;quot;dos punto cero&amp;quot; que se apoyan en estas tecnologías de la web para
comunicarse con su audiencia o bien para ser transmitidos (podcasts,
videocasts, radios por internet).&lt;/p&gt;
&lt;p&gt;Y es que la Web 2.0 ha revolucionado
desde la manera en que vemos la Internet hasta el enfoque de negocios de
muchas grandes empresas. Pero, en este mundo cambiante de la tecnología,
la Web 2.0 no es más que un estado transitorio a otro más sofisticado:
la Web 3.0, conocida en la inmensidad de Internet como la Web Semántica.&lt;/p&gt;
&lt;p&gt;Resulta conveniente refrescar la memoria con algo de Historia de
Internet pues, si actualmente nos encontramos en la Web 2.0, en algún
momento debió existir una Web 1.0. Nos remontamos a los inicios de la
Autopista de la Información, recordamos aquellas páginas frías,
estáticas y en las que únicamente personal altamente capacitado y
especializado era capaz de crear contenido y publicarlo, lo que se
traducía en que sólo las grandes empresas tenían presencia en la red.
Además, el flujo de información era unidireccional, es decir, se
generaba un mensaje y otros, los usuarios, eran importantes en la medida
en que se convertían en consumidores de dicha información. Poco a poco
la tecnología fue evolucionando, aparecieron lenguajes capaces de
procesar y pre-procesar hipertexto con los que se puede lograr sitios
web más dinámicos y capaces de interactuar con bases de datos, con lo
que el contenido pasó de ser de estático a cambiante. Esto trajo consigo
que, aún cuando sólo personas con conocimientos de computación y
programacion son los capaces de crear sitios y espacios en la web, todos
los usuarios son capaces de generar y publicar contenido, con lo que la
información ahora fluye de manera multidireccional, apareciendo
conceptos como Redes Sociales e Inteligencia Colectiva, de esta manera
nace lo que conocemos hoy día como La Web 2.0 en la que, contrario a la
Web 1.0, los usuarios son importantes en la medida en que son
generadores constantes de contenido.&lt;/p&gt;
&lt;p&gt;Con esta nueva Web, cargada de
contenido que, además, crece exponencialmente segundo a segundo, cobran
especial importancia los buscadores. Estos buscadores, en su mayoría,
trabajan mediante palabras claves o &amp;quot;keywords&amp;quot; en inglés. De esta
manera, un documento es relevante según el número de veces que aparece
una palabra clave y no por su significado en el contexto de la consulta
realizada por el usuario. Este esquema funciona para búsquedas en las
que el contexto no es tan importante, por ejemplo &amp;quot;Internet en
Venezuela&amp;quot;, resulta ser una consulta bastante general, podrían
interesarme desde Proveedores de Servicio de Internet en Venezuela,
hasta estadísticas acerca del uso y páginas más visitadas.&lt;/p&gt;
&lt;p&gt;Supongamos
que estamos planeando un viaje familiar a Los Andes, debemos llegar a
Valera, Edo. Trujillo, entonces nos vamos al buscador de nuestra
preferencia y consultamos: &amp;quot;Todos los vuelos a Valera mañana en la
mañana&amp;quot;. Esto sería así en un mundo ideal, pero en nuestro mundo los
resultados serían un completo desastre, nuestro buscador nos daría
páginas de agencias de viajes, sitios de aerolíneas, blogs acerca de
&amp;quot;Valera&amp;quot; como localidad del Estado Trujillo, sitios turísticos en Valera
e incluso noticias sobre personas con el apellido &amp;quot;Valera&amp;quot;, además de
recursos que contienen la palabra clave &amp;quot;mañana&amp;quot;, estos resultados no
son exactos y, por si solos, no satisfacen las necesidades de
información del usuario, nuestro desafortunado viajero, tendrá que ir de
resultado en resultado extrayendo manualmente la información que resulte
relevante a su pregunta.&lt;/p&gt;
&lt;p&gt;En la Web 3.0, un buscador con capacidad
semántica, será capaz de detectar automáticamente la ubicación del
usuario (en mi caso, Caracas), por lo que el &amp;quot;lugar de orígen&amp;quot; no
tendría que ser suministrado, además, el buscador &amp;quot;entendería&amp;quot; que el
usuario desea aerolíneas que cubran la ruta Caracas - Valera y
calcularía el &amp;quot;mañana&amp;quot; en función de la fecha actual del sistema, en
decir, en función de un &amp;quot;hoy&amp;quot; e interpretaría la segunda ocurrencia de
&amp;quot;mañana&amp;quot; como un momento determinado del día, todo esto sólo con un
click!. ¿Cómo es esto posible?, pues dotando la web de mayor significado
en los innumerables recursos que pone a nuestra disposición, dotando a
nuestra Web 2.0 de una mayor semántica, de manera que los resultados no
se procesarían en base a entradas y salidas de datos, sino en base al
contexto y significado de la consulta realizada, todo esto apoyándose en
una infraestructura de metadatos. Suena simple ¿verdad?. Pero, ¿cómo
construimos esa infraestructura?, en los próximos artículos me dedicaré
explorar más profundamente las posibilidades de la Web Semántica (que,
algunas, parecen sacadas de una película de Ciencia Ficción) y a
explicar a mayor detalle varios conceptos que hacen vida dentro del
marco de la Web Semántica, así como también ilustrar de manera práctica,
mediante tutoriales, el uso de las herramientas y tecnologías necesarias
para dar vida a la Web Semántica o, lo que es lo mismo, dar Semántica a
nuestra Web en vida, siempre dejando claro que no se trata de
Inteligencia Artificial, sino de dar a las máquinas la capacidad de
resolver problemas bien definidos, con operaciones bien definidas y
sobre datos bien definidos.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lecturas
Recomendadas:&lt;/strong&gt; Cobo, Cristóbal y Pardo, Hugo. (2007) Planeta 2.0:
Inteligencia Colectiva o Medios Fast Food. México DF: Grup de Recerca
d’Interaccions e Digitals.&lt;/p&gt;
</summary><category term="desarrollo web"></category><category term="el futuro de internet"></category><category term="informática"></category><category term="Internet"></category><category term="web 3.0"></category><category term="web semántica"></category></entry><entry><title>Acerca de mi</title><link href="http://iferminmontilla.com/acerca-de-mi.html" rel="alternate"></link><updated>2011-05-10T03:25:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-10:acerca-de-mi.html</id><summary type="html">&lt;p&gt;

 "Geek de nacimiento, informático de formación y músico por
 diversión..."&lt;p&gt;Hola!, la verdad mientras escribía esto no pensé que alguien llegara a
leerlo, por eso lo escribí un poco informal, pero ya que estás aquí, no
puedo más que darte las gracias por tomarte el tiempo de leer, no sólo
lo que escribo, sino también algo acerca de mi. Me llamo Israel Fermín
Montilla y soy de Caracas - Venezuela, soy Ingeniero en Informática
egresado de la&amp;nbsp;&lt;a class="reference external" href="http://www.ucab.edu.ve"&gt;Universidad Católica Andrés Bello&lt;/a&gt;, realicé mi
Trabajo Especial de Grado en el área de Web Semántica con el Prof.
Wilmer Pereira como tutor de la misma. Actualmente me dedico al
desarrollo web, más que todo en Python, y administración de sistemas
Linux. En mi tiempo libre me gusta tocar la guitarra y ensayar con mi
banda, cuando no estoy frente a la computadora, estoy detrás de mi
guitarra. Melómano hasta la muerte, me encanta la música, especialmente
los géneros del Blues, Jazz, Rock, Funk, Metal y Fusión. Me encantan
&lt;a class="reference external" href="http://www.youtube.com/results?search_query=queen&amp;amp;aq=f"&gt;*Queen*&lt;/a&gt;, &lt;a class="reference external" href="http://www.youtube.com/results?search_query=Van+Halen&amp;amp;aq=f"&gt;*Van Halen*&lt;/a&gt;,&lt;em&gt;`The Beatles`_&lt;/em&gt; y &lt;a class="reference external" href="http://www.youtube.com/results?search_query=Eric+Clapton&amp;amp;aq=f"&gt;*Eric Clapton*&lt;/a&gt;,
además, soy fiel creyente del Rock Hecho en Venezuela, bandas como &lt;a class="reference external" href="http://www.youtube.com/results?search_query=la+vida+boheme&amp;amp;aq=0&amp;amp;oq=La+Vida+B"&gt;*La
Vida Boheme*&lt;/a&gt; y &lt;em&gt;`The Asbestos`_,&lt;/em&gt;y guitarristas como &lt;a class="reference external" href="http://www.youtube.com/results?search_query=Pablo+Mendoza&amp;amp;aq=f"&gt;*Pablo
Mendoza*&lt;/a&gt; y &lt;a class="reference external" href="http://www.youtube.com/results?search_query=Hugo+Fuguet&amp;amp;aq=f"&gt;*Hugo Fuguet*&lt;/a&gt;, han dejado muy en alto el nombre de la
música nacional en todas sus presentaciones. Lector empedernido de
cualquier tipo de libros (técnicos y literatura en general), aficionado
al cine, filántropo y misántropo a veces... en fin, otro loco más...&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Acerca de este sitio</title><link href="http://iferminmontilla.com/acerca-de-este-sitio.html" rel="alternate"></link><updated>2011-05-10T01:06:00-05:30</updated><author><name>Israel Fermín Montilla</name></author><id>tag:iferminmontilla.com,2011-05-10:acerca-de-este-sitio.html</id><summary type="html">&lt;p&gt;Hay algo muy valioso, mucho más que cualquier cosa en el mundo, y que
increiblemente muy poca gente comparte y, debido a ese egoismo, el mundo
no avanza más rápido. Ese algo es el &lt;em&gt;conocimiento&lt;/em&gt;, el conocimiento en
las manos correctas puede producir resultados increíbles. Este sitio es
mi pequeña ventana para compartir con el mundo las pocas cosas que he
aprendido y que considero saber, esperando que alguien con más
imaginación que yo pueda aprovecharlas y, si no es el caso, al menos
tener mi conocimiento en un lugar que puedo recordar fácilmente y, si le
es útil a alguien más, mucho mejor!.&lt;/p&gt;
</summary></entry></feed>